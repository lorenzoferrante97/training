/**
 * This injects Tailwind's base styles and any base styles registered by
 * plugins.
 */

*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

/*! tailwindcss v3.4.16 | MIT License | https://tailwindcss.com
 */

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: #e5e7eb;
  /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
7. Disable tap highlights on iOS
*/

html,
:host {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
     tab-size: 4;
  /* 3 */
  font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 4 */
  font-feature-settings: normal;
  /* 5 */
  font-variation-settings: normal;
  /* 6 */
  -webkit-tap-highlight-color: transparent;
  /* 7 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font-family by default.
2. Use the user's configured `mono` font-feature-settings by default.
3. Use the user's configured `mono` font-variation-settings by default.
4. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  /* 1 */
  font-feature-settings: normal;
  /* 2 */
  font-variation-settings: normal;
  /* 3 */
  font-size: 1em;
  /* 4 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-feature-settings: inherit;
  /* 1 */
  font-variation-settings: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  font-weight: inherit;
  /* 1 */
  line-height: inherit;
  /* 1 */
  letter-spacing: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
input:where([type='button']),
input:where([type='reset']),
input:where([type='submit']) {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Reset default styling for dialogs.
*/

dialog {
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

[hidden]:where(:not([hidden="until-found"])) {
  display: none;
}

:root,
[data-theme] {
  background-color: var(--fallback-b1,oklch(var(--b1)/1));
  color: var(--fallback-bc,oklch(var(--bc)/1));
}

@supports not (color: oklch(0 0 0)) {
  :root {
    color-scheme: light;
    --fallback-p: #491eff;
    --fallback-pc: #d4dbff;
    --fallback-s: #ff41c7;
    --fallback-sc: #fff9fc;
    --fallback-a: #00cfbd;
    --fallback-ac: #00100d;
    --fallback-n: #2b3440;
    --fallback-nc: #d7dde4;
    --fallback-b1: #ffffff;
    --fallback-b2: #e5e6e6;
    --fallback-b3: #e5e6e6;
    --fallback-bc: #1f2937;
    --fallback-bs: #1f2937;
    --fallback-in: #00b3f0;
    --fallback-inc: #000000;
    --fallback-su: #00ca92;
    --fallback-suc: #000000;
    --fallback-wa: #ffc22d;
    --fallback-wac: #000000;
    --fallback-er: #ff6f70;
    --fallback-erc: #000000;
  }

  @media (prefers-color-scheme: dark) {
    :root {
      color-scheme: dark;
      --fallback-p: #7582ff;
      --fallback-pc: #050617;
      --fallback-s: #ff71cf;
      --fallback-sc: #190211;
      --fallback-a: #00c7b5;
      --fallback-ac: #000e0c;
      --fallback-n: #2a323c;
      --fallback-nc: #a6adbb;
      --fallback-b1: #1d232a;
      --fallback-b2: #191e24;
      --fallback-b3: #15191e;
      --fallback-bc: #a6adbb;
      --fallback-bs: #989eab;
      --fallback-in: #00b3f0;
      --fallback-inc: #000000;
      --fallback-su: #00ca92;
      --fallback-suc: #000000;
      --fallback-wa: #ffc22d;
      --fallback-wac: #000000;
      --fallback-er: #ff6f70;
      --fallback-erc: #000000;
    }
  }
}

html {
  -webkit-tap-highlight-color: transparent;
}

[class*="icon-[tabler--"] {
  display: inline-block;
  width: 1rem;
  height: 1rem;
  background-color: currentColor;
  -webkit-mask-image: var(--svg);
  mask-image: var(--svg);
  -webkit-mask-repeat: no-repeat;
  mask-repeat: no-repeat;
  -webkit-mask-size: 100% 100%;
  mask-size: 100% 100%;
}

.icon-\[tabler--check\] {
  --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m5 12l5 5L20 7'/%3E%3C/svg%3E");
}

.icon-\[tabler--trash\] {
  --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 7h16m-10 4v6m4-6v6M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2l1-12M9 7V4a1 1 0 0 1 1-1h4a1 1 0 0 1 1 1v3'/%3E%3C/svg%3E");
}

.icon-\[tabler--trending-down\] {
  --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='m3 7l6 6l4-4l8 8'/%3E%3Cpath d='M21 10v7h-7'/%3E%3C/g%3E%3C/svg%3E");
}

.icon-\[tabler--trending-up\] {
  --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='m3 17l6-6l4 4l8-8'/%3E%3Cpath d='M14 7h7v7'/%3E%3C/g%3E%3C/svg%3E");
}

:root {
  color-scheme: light;
  --rounded-box: 0.5rem ;
  --rounded-btn: 0.375rem;
  --rounded-tooltip: 0.25rem;
  --animation-btn: 0.25s;
  --animation-input: .2s;
  --btn-focus-scale: 0.95;
  --border-btn: 1px;
  --tab-border: 1px;
  --tab-radius: 0.5rem;
  --p: 57.5934% 0.247012 287.240256;
  --pc: 93.7482% 0.032368 291.504163;
  --s: 55.7871% 0.022138 301.905408;
  --sc: 95.0453% 0.002858 308.427423;
  --a: 62.3083% 0.188015 259.814527;
  --ac: 93.1918% 0.031591 255.585479;
  --n: 40.6559% 0.025056 282.210785;
  --nc: 97.6419% 0.001323 286.375536;
  --b1: 100% 0 0;
  --b2: 94.7244% 0.005338 286.297402;
  --b3: 88.6277% 0.008239 278.622785;
  --bc: 37.567% 0.022158 281.800147;
  --bs: 37.567% 0.022158 281.800147;
  --in: 71.4837% 0.125737 215.220903;
  --inc: 95.6262% 0.044329 203.387778;
  --su: 73.1062% 0.216656 147.043973;
  --suc: 96.444% 0.02867 172.082912;
  --wa: 79.8713% 0.164239 73.09399;
  --wac: 98.4165% 0.02418 94.061776;
  --er: 65.3932% 0.222085 25.863858;
  --erc: 97.5752% 0.015143 61.349242;
}

@media (prefers-color-scheme: dark) {
  :root {
    color-scheme: dark;
    --rounded-box: 0.5rem ;
    --rounded-btn: 0.375rem;
    --rounded-tooltip: 0.25rem;
    --animation-btn: 0.25s;
    --animation-input: .2s;
    --btn-focus-scale: 0.95;
    --border-btn: 1px;
    --tab-border: 1px;
    --tab-radius: 0.5rem;
    --p: 57.5934% 0.247012 287.240256;
    --pc: 93.7482% 0.032368 291.504163;
    --s: 55.7871% 0.022138 301.905408;
    --sc: 100% 0 0;
    --a: 62.3083% 0.188015 259.814527;
    --ac: 93.1918% 0.031591 255.585479;
    --n: 65.7482% 0.022235 294.952787;
    --nc: 18.5128% 0.016696 301.919165;
    --b1: 26.8442% 0.028285 299.769973;
    --b2: 22.6865% 0.023344 295.952775;
    --b3: 39.9632% 0.030791 300.243852;
    --bc: 78.094% 0.014175 295.24394;
    --bs: 18.5128% 0.016696 301.919165;
    --in: 71.4837% 0.125737 215.220903;
    --inc: 95.6262% 0.044329 203.387778;
    --su: 73.1062% 0.216656 147.043973;
    --suc: 96.444% 0.02867 172.082912;
    --wa: 79.8713% 0.164239 73.09399;
    --wac: 98.4165% 0.02418 94.061776;
    --er: 65.3932% 0.222085 25.863858;
    --erc: 97.5752% 0.015143 61.349242;
  }
}

[data-theme=light] {
  color-scheme: light;
  --rounded-box: 0.5rem ;
  --rounded-btn: 0.375rem;
  --rounded-tooltip: 0.25rem;
  --animation-btn: 0.25s;
  --animation-input: .2s;
  --btn-focus-scale: 0.95;
  --border-btn: 1px;
  --tab-border: 1px;
  --tab-radius: 0.5rem;
  --p: 57.5934% 0.247012 287.240256;
  --pc: 93.7482% 0.032368 291.504163;
  --s: 55.7871% 0.022138 301.905408;
  --sc: 95.0453% 0.002858 308.427423;
  --a: 62.3083% 0.188015 259.814527;
  --ac: 93.1918% 0.031591 255.585479;
  --n: 40.6559% 0.025056 282.210785;
  --nc: 97.6419% 0.001323 286.375536;
  --b1: 100% 0 0;
  --b2: 94.7244% 0.005338 286.297402;
  --b3: 88.6277% 0.008239 278.622785;
  --bc: 37.567% 0.022158 281.800147;
  --bs: 37.567% 0.022158 281.800147;
  --in: 71.4837% 0.125737 215.220903;
  --inc: 95.6262% 0.044329 203.387778;
  --su: 73.1062% 0.216656 147.043973;
  --suc: 96.444% 0.02867 172.082912;
  --wa: 79.8713% 0.164239 73.09399;
  --wac: 98.4165% 0.02418 94.061776;
  --er: 65.3932% 0.222085 25.863858;
  --erc: 97.5752% 0.015143 61.349242;
}

[data-theme=dark] {
  color-scheme: dark;
  --rounded-box: 0.5rem ;
  --rounded-btn: 0.375rem;
  --rounded-tooltip: 0.25rem;
  --animation-btn: 0.25s;
  --animation-input: .2s;
  --btn-focus-scale: 0.95;
  --border-btn: 1px;
  --tab-border: 1px;
  --tab-radius: 0.5rem;
  --p: 57.5934% 0.247012 287.240256;
  --pc: 93.7482% 0.032368 291.504163;
  --s: 55.7871% 0.022138 301.905408;
  --sc: 100% 0 0;
  --a: 62.3083% 0.188015 259.814527;
  --ac: 93.1918% 0.031591 255.585479;
  --n: 65.7482% 0.022235 294.952787;
  --nc: 18.5128% 0.016696 301.919165;
  --b1: 26.8442% 0.028285 299.769973;
  --b2: 22.6865% 0.023344 295.952775;
  --b3: 39.9632% 0.030791 300.243852;
  --bc: 78.094% 0.014175 295.24394;
  --bs: 18.5128% 0.016696 301.919165;
  --in: 71.4837% 0.125737 215.220903;
  --inc: 95.6262% 0.044329 203.387778;
  --su: 73.1062% 0.216656 147.043973;
  --suc: 96.444% 0.02867 172.082912;
  --wa: 79.8713% 0.164239 73.09399;
  --wac: 98.4165% 0.02418 94.061776;
  --er: 65.3932% 0.222085 25.863858;
  --erc: 97.5752% 0.015143 61.349242;
}

/* h1 {
        @apply text-2xl;
    }
    h2 {
        @apply text-xl;
    } */

/**
 * This injects Tailwind's component classes and any component classes
 * registered by plugins.
 */

.container {
  width: 100%;
}

@media (min-width: 640px) {
  .container {
    max-width: 640px;
  }
}

@media (min-width: 768px) {
  .container {
    max-width: 768px;
  }
}

@media (min-width: 1024px) {
  .container {
    max-width: 1024px;
  }
}

@media (min-width: 1280px) {
  .container {
    max-width: 1280px;
  }
}

@media (min-width: 1536px) {
  .container {
    max-width: 1536px;
  }
}

.advance-select-toggle {
  position: relative;
  display: flex;
  width: 100%;
  cursor: pointer;
  text-wrap: nowrap;
  padding-left: 0.75rem;
  padding-right: 0.75rem;
  padding-top: 7px;
  padding-bottom: 7px;
  padding-inline-end: 2.25rem;
  text-align: start;
  border-radius: var(--rounded-btn, 0.375rem);
  border-width: 1px;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.4));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
  font-size: 1rem;
  line-height: 1.375rem;
  font-weight: 400;
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
}

.advance-select-menu {
  z-index: 10;
  width: 100%;
  padding: 0.5rem;
  border-radius: var(--rounded-box, 0.5rem);
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
  background-image: none;
  --tw-shadow: 0 10px 15px -2px var(--fallback-bs,oklch(var(--bs)/0.34));
  --tw-shadow-colored: 0 10px 15px -2px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.advance-select-menu > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.125rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.125rem * var(--tw-space-y-reverse));
}

.advance-select-option {
  width: 100%;
  cursor: pointer;
  padding-left: 1rem;
  padding-right: 1rem;
  padding-top: 0.625rem;
  padding-bottom: 0.625rem;
  border-radius: var(--rounded-btn, 0.375rem);
  font-size: 1rem;
  line-height: 1.375rem;
  font-weight: 400;
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
}

.advance-select-tag {
  position: relative;
  display: flex;
  width: 100%;
  cursor: pointer;
  text-wrap: nowrap;
  padding-left: 0.25rem;
  padding-right: 0.25rem;
  padding-top: 0px;
  padding-bottom: 0px;
  padding-inline-end: 2.25rem;
  text-align: start;
  border-radius: var(--rounded-box, 0.5rem);
  border-width: 1px;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.25));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
  font-size: 1rem;
  line-height: 1.375rem;
  font-weight: 400;
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
}

.alert {
  position: relative;
  width: 100%;
  padding: 1rem;
  font-size: 1rem;
  line-height: 1.375rem;
  border-radius: var(--rounded-box, 0.5rem);
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity, 1)));
  color: var(--fallback-bc,oklch(var(--bc)/0.8));
}

.artboard {
  width: 100%;
}

.avatar {
  position: relative;
  display: inline-flex;
  font-size: 1rem;
  line-height: 1.375rem;
}

.avatar > div {
  display: block;
  aspect-ratio: 1 / 1;
  overflow: hidden;
}

.avatar img {
  height: 100%;
  width: 100%;
  -o-object-fit: cover;
     object-fit: cover;
}

.avatar.placeholder > div {
  display: flex;
  align-items: center;
  justify-content: center;
}

.avatar.\!placeholder > div {
  display: flex !important;
  align-items: center !important;
  justify-content: center !important;
}

.pull-up .avatar {
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-timing-function: cubic-bezier(0.4, 0, 1, 1);
  transition-duration: 150ms;
  transition-duration: 0.25s;
}

.pull-up .avatar:hover {
  z-index: 30;
  --tw-translate-y: -0.25rem;
  --tw-scale-x: 1.02;
  --tw-scale-y: 1.02;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  border-radius: 9999px;
  --tw-shadow: 0 2px 4px 0 var(--fallback-bs,oklch(var(--bs)/0.26));
  --tw-shadow-colored: 0 2px 4px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.badge {
  display: inline-flex;
  height: 1.5rem;
  align-items: center;
  justify-content: center;
  gap: 0.375rem;
  padding-left: 0.75rem;
  padding-right: 0.75rem;
  text-align: center;
  font-size: 0.875rem;
  line-height: 1.25rem;
  font-weight: 400;
  width: -moz-fit-content;
  width: fit-content;
  border-radius: var(--rounded-btn, 0.375rem);
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity, 1)));
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
}

.breadcrumbs {
  max-width: 100%;
  overflow-x: auto;
}

.breadcrumbs > ul,
  .breadcrumbs > ol {
  display: flex;
  align-items: center;
  white-space: nowrap;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  line-height: 1.5rem;
  min-height: -moz-min-content;
  min-height: min-content;
}

.breadcrumbs > ul .breadcrumbs-separator, .breadcrumbs > ol .breadcrumbs-separator {
  display: inline-flex;
  width: 1.5rem;
  flex-shrink: 0;
  align-items: center;
  justify-content: center;
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

.breadcrumbs > ul > li, .breadcrumbs > ol > li {
  display: inline-flex;
  align-items: center;
  line-height: 22px;
}

.breadcrumbs > ul > li > a, .breadcrumbs > ol > li > a {
  display: inline-flex;
  align-items: center;
  gap: 0.25rem;
}

.breadcrumbs > ul > li > a:hover, .breadcrumbs > ol > li > a:hover {
  --tw-text-opacity: 1;
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
}

.breadcrumbs > ul > li:last-child, .breadcrumbs > ol > li:last-child {
  cursor: text;
  font-weight: 500;
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
}

.btn {
  display: inline-flex;
  height: 2.375rem;
  min-height: 2.375rem;
  flex-shrink: 0;
  cursor: pointer;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  flex-wrap: wrap;
  align-items: center;
  justify-content: center;
  padding-left: 1rem;
  padding-right: 1rem;
  font-size: 1rem;
  line-height: 1.375rem;
  font-weight: 500;
  gap: 0.5rem;
  border-radius: var(--rounded-btn, 0.375rem);
  border-color: currentColor;
  border-color: oklch(var(--btn-color, var(--b2)) / var(--tw-border-opacity));
  text-decoration-line: none;
  transition-duration: 200ms;
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
  border-width: var(--border-btn, 1px);
  transition-property: color, background-color, border-color, opacity, box-shadow, transform;
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
  --tw-shadow: 0 2px 4px 0 var(--fallback-bs,oklch(var(--bs)/0.26));
  --tw-shadow-colored: 0 2px 4px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  outline-color: var(--fallback-bc,oklch(var(--bc)/1));
  background-color: oklch(var(--btn-color, var(--b2)) / var(--tw-bg-opacity));
  --tw-bg-opacity: 1;
  --tw-border-opacity: 1;
}

.btn-disabled,
  .btn[disabled],
  .btn:disabled {
  pointer-events: none;
}

.btn-square {
  height: 2.375rem;
  width: 2.375rem;
  padding: 0px;
}

.btn-circle {
  height: 2.375rem;
  width: 2.375rem;
  border-radius: 9999px;
  padding: 0px;
}

:where(.btn:is(input[type="checkbox"])),
:where(.btn:is(input[type="radio"])) {
  width: auto;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
}

.btn:is(input[type="checkbox"]):after,
.btn:is(input[type="radio"]):after {
  --tw-content: attr(aria-label);
  content: var(--tw-content);
}

.card {
  position: relative;
  display: flex;
  flex-direction: column;
  border-radius: var(--rounded-box, 0.5rem);
  border-color: var(--fallback-bc,oklch(var(--bc)/0.4));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
  color: var(--fallback-bc,oklch(var(--bc)/0.8));
  box-shadow: var(--card-shadow, 0px 2px 4px 0px oklch(var(--bs) / 0.26));
  border-width: var(--card-border, 0px);
}

.card:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.card-body {
  display: flex;
  flex: 1 1 auto;
  flex-direction: column;
  font-size: 1rem;
  line-height: 1.375rem;
  font-weight: 400;
  padding: var(--padding-card, 1.5rem);
}

.card-actions {
  display: flex;
  flex-wrap: wrap;
  align-items: flex-start;
  gap: 0.75rem;
}

.card-title {
  font-size: 1.5rem;
  line-height: 2rem;
  font-weight: 600;
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
}

.card figure {
  display: flex;
  align-items: center;
  justify-content: center;
}

.card.image-full {
  display: grid;
}

.card.image-full:before {
  position: relative;
  content: "";
  z-index: 10;
  border-radius: var(--rounded-box, 0.5rem);
  background-image: linear-gradient(0deg, rgba(0, 0, 0, 0.58) 0%, rgba(0, 0, 0, 0.58) 100%);
}

.card.image-full:before,
    .card.image-full > * {
  grid-column-start: 1;
  grid-row-start: 1;
}

.card.image-full > figure img {
  height: 100%;
  -o-object-fit: cover;
     object-fit: cover;
}

.card.image-full > .card-body {
  position: relative;
  z-index: 20;
  --tw-text-opacity: 1;
  color: var(--fallback-nc,oklch(var(--nc)/var(--tw-text-opacity, 1)));
}

:where(.card figure > *) {
  width: 100%;
}

.card-group > :not([hidden]) ~ :not([hidden]) {
  --tw-divide-y-reverse: 0;
  border-top-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
  border-bottom-width: calc(1px * var(--tw-divide-y-reverse));
  border-color: var(--fallback-n,oklch(var(--n)/0.3));
}

.card-group {
  overflow: hidden;
  border-radius: var(--rounded-box, 0.5rem);
  border-color: var(--fallback-bc,oklch(var(--bc)/0.4));
  --cd-shadow: var(--fallback-bs,oklch(var(--bs)/0.26));
  box-shadow: var(--card-shadow, 0px 2px 4px 0px var(--cd-shadow));
  border-width: var(--card-border, 0px);
}

@media (min-width: 640px) {
  .card-group {
    display: flex;
    flex-direction: row;
  }

  .card-group > :not([hidden]) ~ :not([hidden]) {
    --tw-divide-x-reverse: 0;
    border-right-width: calc(1px * var(--tw-divide-x-reverse));
    border-left-width: calc(1px * calc(1 - var(--tw-divide-x-reverse)));
    --tw-divide-y-reverse: 0;
    border-top-width: calc(0px * calc(1 - var(--tw-divide-y-reverse)));
    border-bottom-width: calc(0px * var(--tw-divide-y-reverse));
  }

  .card-group:where([dir="rtl"], [dir="rtl"] *) > :not([hidden]) ~ :not([hidden]) {
    --tw-divide-x-reverse: 1;
  }

  .modal-dialog {
    max-width: 32rem;
  }
}

.card-group > .card {
  flex: 1 0 0%;
  border-radius: 0px;
  --card-shadow: none;
  --card-border: 0;
}

.carousel {
  position: relative;
  width: 100%;
  overflow: hidden;
  border-radius: 1rem;
}

.carousel-body {
  display: flex;
  flex-wrap: nowrap;
}

.carousel-prev,
.carousel-next {
  position: absolute;
  top: 0px;
  bottom: 0px;
  display: inline-flex;
  height: 100%;
  width: 10%;
  align-items: center;
  justify-content: center;
  color: var(--fallback-bc,oklch(var(--bc)/0.8));
}

@media not all and (min-width: 640px) {
  .carousel-prev,
.carousel-next {
    width: 18%;
  }
}

.carousel-prev {
  inset-inline-start: 0px;
  border-start-start-radius: 1rem;
  border-end-start-radius: 1rem;
}

.carousel-next {
  inset-inline-end: 0px;
  border-start-end-radius: 1rem;
  border-end-end-radius: 1rem;
}

.carousel-box {
  height: 0.25rem;
  width: 2.5rem;
  cursor: pointer;
  background-color: var(--fallback-n,oklch(var(--n)/0.3));
}

.active.carousel-box {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity, 1)));
}

.active .carousel-box {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity, 1)));
}

.carousel-dot {
  width: 0.75rem;
  height: 0.75rem;
  cursor: pointer;
  border-radius: 9999px;
  background-color: var(--fallback-n,oklch(var(--n)/0.3));
}

.active.carousel-dot {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity, 1)));
}

.active .carousel-dot {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity, 1)));
}

.chat {
  display: grid;
  grid-template-columns: repeat(2, minmax(0, 1fr));
  -moz-column-gap: 1rem;
       column-gap: 1rem;
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}

.chat-avatar {
  grid-row: span 2 / span 2;
  align-self: flex-end;
}

.chat-header {
  grid-row-start: 1;
  margin-bottom: 0.25rem;
  font-size: 0.75rem;
  line-height: 1rem;
}

.chat-footer {
  grid-row-start: 3;
  margin-top: 0.25rem;
  font-size: 0.75rem;
  line-height: 1rem;
}

.chat-bubble {
  position: relative;
  display: block;
  width: -moz-fit-content;
  width: fit-content;
  padding: 0.75rem;
  max-width: 90%;
  border-radius: var(--rounded-box, 0.5rem);
  min-height: 2.75rem;
  min-width: 2.75rem;
}

.chat-bubble:before {
  position: absolute;
  bottom: 0px;
  height: 1rem;
  width: 1rem;
  background-color: inherit;
  content: "";
  -webkit-mask-size: contain;
          mask-size: contain;
  -webkit-mask-repeat: no-repeat;
          mask-repeat: no-repeat;
  -webkit-mask-position: center;
          mask-position: center;
}

.chat-receiver {
  place-items: start;
  grid-template-columns: auto 1fr;
}

.chat-receiver .chat-header {
  grid-column-start: 2;
}

.chat-receiver .chat-footer {
  grid-column-start: 2;
}

.chat-receiver .chat-avatar {
  grid-column-start: 1;
}

.chat-receiver .chat-bubble {
  grid-column-start: 2;
  border-end-start-radius: 0px;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
}

.chat-receiver .chat-bubble:before {
  -webkit-mask-image: url("data:image/svg+xml,%3csvg width='3' height='3' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m 0 3 L 3 3 L 3 0 C 3 1 1 3 0 3'/%3e%3c/svg%3e");
          mask-image: url("data:image/svg+xml,%3csvg width='3' height='3' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m 0 3 L 3 3 L 3 0 C 3 1 1 3 0 3'/%3e%3c/svg%3e");
  inset-inline-start: -0.749rem;
}

[dir="rtl"] .chat-receiver .chat-bubble:before {
  -webkit-mask-image: url("data:image/svg+xml,%3csvg width='3' height='3' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m 0 3 L 1 3 L 3 3 C 2 3 0 1 0 0'/%3e%3c/svg%3e");
          mask-image: url("data:image/svg+xml,%3csvg width='3' height='3' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m 0 3 L 1 3 L 3 3 C 2 3 0 1 0 0'/%3e%3c/svg%3e");
}

.chat-sender {
  place-items: end;
  grid-template-columns: 1fr auto;
}

.chat-sender .chat-header {
  grid-column-start: 1;
}

.chat-sender .chat-footer {
  grid-column-start: 1;
}

.chat-sender .chat-avatar {
  grid-column-start: 2;
}

.chat-sender .chat-bubble {
  grid-column-start: 1;
  text-align: end;
  border-end-end-radius: 0px;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity, 1)));
  --tw-text-opacity: 1;
  color: var(--fallback-pc,oklch(var(--pc)/var(--tw-text-opacity, 1)));
}

.chat-sender .chat-bubble:before {
  -webkit-mask-image: url("data:image/svg+xml,%3csvg width='3' height='3' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m 0 3 L 1 3 L 3 3 C 2 3 0 1 0 0'/%3e%3c/svg%3e");
          mask-image: url("data:image/svg+xml,%3csvg width='3' height='3' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m 0 3 L 1 3 L 3 3 C 2 3 0 1 0 0'/%3e%3c/svg%3e");
  inset-inline-start: 99.9%;
}

[dir="rtl"] .chat-sender .chat-bubble:before {
  -webkit-mask-image: url("data:image/svg+xml,%3csvg width='3' height='3' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m 0 3 L 3 3 L 3 0 C 3 1 1 3 0 3'/%3e%3c/svg%3e");
          mask-image: url("data:image/svg+xml,%3csvg width='3' height='3' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m 0 3 L 3 3 L 3 0 C 3 1 1 3 0 3'/%3e%3c/svg%3e");
}

.checkbox {
  flex-shrink: 0;
  --chkbg: var(--fallback-n,oklch(var(--n)/1));
  --chkfg: var(--fallback-nc,oklch(var(--nc)/1));
  position: relative;
  width: 1.5rem;
  height: 1.5rem;
  cursor: pointer;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  border-radius: var(--rounded-btn, 0.375rem);
  border-width: 1.5px;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.4));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
}

.collapse:not(td):not(tr):not(colgroup) {
  visibility: visible;
}

.\!diff {
  position: relative !important;
  display: grid !important;
  width: 100% !important;
  overflow: hidden !important;
  container-type: inline-size !important;
  grid-template-columns: auto 1fr !important;
}

.diff {
  position: relative;
  display: grid;
  width: 100%;
  overflow: hidden;
  container-type: inline-size;
  grid-template-columns: auto 1fr;
}

.diff-resizer {
  position: relative;
  top: 50%;
  z-index: 1;
  height: 3rem;
  width: 25rem;
  min-width: 1rem;
  max-width: calc(100cqi - 1rem);
  resize: horizontal;
  overflow: hidden;
  opacity: 0;
  transform-origin: 100% 100%;
  scale: 4;
  translate: 1.5rem -1.5rem;
  clip-path: inset(calc(100% - 0.75rem) 0 0 calc(100% - 0.75rem));
}

.diff-resizer,
.diff-item-1,
.diff-item-2 {
  position: relative;
  grid-column-start: 1;
  grid-row-start: 1;
}

.diff-item-1:after {
  pointer-events: none;
  position: absolute;
  bottom: 0px;
  inset-inline-end: 1px;
  top: 50%;
  z-index: 1;
  width: 1.25rem;
  height: 1.25rem;
  --tw-content: '';
  content: var(--tw-content);
  translate: 50% -50%;
  --tw-rotate: 45deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  border-width: 2px;
  --tw-border-opacity: 1;
  border-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-border-opacity, 1)));
  background-color: var(--fallback-p,oklch(var(--p)/0.4));
  --tw-shadow: 0 2px 4px 0 var(--fallback-bs,oklch(var(--bs)/0.26));
  --tw-shadow-colored: 0 2px 4px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  outline-style: solid;
  outline-offset: -2px;
  outline-color: var(--fallback-bc,oklch(var(--bc)/0.05));
  --tw-backdrop-blur: blur(8px);
  -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
  backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
}

.diff-item-2 {
  overflow: hidden;
  border-inline-end-width: 2px;
  --tw-border-opacity: 1;
  border-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-border-opacity, 1)));
}

.diff-item-1 > *,
.diff-item-2 > * {
  pointer-events: none;
  position: absolute;
  bottom: 0px;
  inset-inline-start: 0px;
  top: 0px;
  height: 100%;
  width: 100cqi;
  max-width: none;
  -o-object-fit: cover;
     object-fit: cover;
  -o-object-position: center;
     object-position: center;
}

[dir="rtl"] .diff-resizer {
  transform-origin: 0 100%;
  translate: -1.5rem -1.5rem;
  clip-path: inset(calc(100% - 0.75rem) calc(100% - 0.75rem) 0 0);
}

[dir="rtl"] .diff-item-1:after {
  right: auto;
  left: 1px;
  translate: -50% -50%;
}

[dir="rtl"] .diff-item-1 > *,
[dir="rtl"] .diff-item-2 > * {
  left: auto;
  right: 0;
}

.divider {
  display: flex;
  width: 100%;
  flex-direction: row;
  align-items: center;
  align-self: stretch;
  font-size: 0.875rem;
  line-height: 1.25rem;
  margin-top: 1rem;
  margin-bottom: 1rem;
  height: 1rem;
  white-space: nowrap;
}

.divider::before {
  height: 1px;
  width: 100%;
  flex-grow: 1;
  border-top-width: 1px;
  --tw-content: '';
  content: var(--tw-content);
  border-color: var(--fallback-bc,oklch(var(--bc)/0.2));
}

.divider::after {
  display: flex;
  height: 1px;
  width: 100%;
  flex-grow: 1;
  border-top-width: 1px;
  --tw-content: '';
  content: var(--tw-content);
  border-color: var(--fallback-bc,oklch(var(--bc)/0.2));
}

.drawer {
  position: fixed;
  z-index: 80;
  display: flex;
  width: 100%;
  height: 100%;
  max-width: 24rem;
  flex-direction: column;
  justify-content: space-between;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
  --tw-shadow: 0 4px 6px -1px var(--fallback-bs,oklch(var(--bs)/0.2));
  --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.drawer-close {
  display: flex;
  width: 1.875rem;
  height: 1.875rem;
  min-height: 0px;
  align-items: center;
  justify-content: center;
  border-width: 0px;
  padding: 0px;
}

.drawer-title {
  font-size: 1.125rem;
  line-height: 1.5rem;
  font-weight: 500;
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
}

.drawer-body {
  flex-grow: 1;
  overflow-y: auto;
  padding-left: 1.5rem;
  padding-right: 1.5rem;
  font-size: 1rem;
  line-height: 1.375rem;
  overflow-x: hidden;
}

.drawer-body::-webkit-scrollbar {
  width: 0.5rem;
}

.drawer-body:last-child {
  padding-bottom: 1.5rem;
}

.drawer-footer {
  display: flex;
  align-items: center;
  justify-content: flex-end;
  gap: 0.75rem;
  padding: 1.5rem;
}

.dropdown-menu {
  z-index: 10;
  margin-top: 0.5rem;
  text-wrap: nowrap;
  padding: 0.5rem;
  font-size: 1rem;
  line-height: 1.375rem;
  opacity: 0;
  transition-property: opacity,margin;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 300ms;
  border-radius: var(--rounded-box, 0.5rem);
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
  --tw-shadow: 0 10px 15px -2px var(--fallback-bs,oklch(var(--bs)/0.34));
  --tw-shadow-colored: 0 10px 15px -2px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.dropdown-item {
  clear: both;
  display: flex;
  width: 100%;
  align-items: center;
  -moz-column-gap: 0.5rem;
       column-gap: 0.5rem;
  padding-left: 1rem;
  padding-right: 1rem;
  padding-top: 0.625rem;
  padding-bottom: 0.625rem;
  text-align: inherit;
  border-radius: var(--rounded-btn, 0.375rem);
  background-color: transparent;
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
  text-decoration-line: none;
  text-decoration-thickness: 0px;
}

.dropdown-header,
.dropdown-footer {
  position: static;
  display: flex;
  align-items: center;
  padding-left: 1rem;
  padding-right: 1rem;
  padding-top: 0.625rem;
  padding-bottom: 0.625rem;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.1));
  color: var(--fallback-bc,oklch(var(--bc)/0.8));
}

.dropdown-header {
  margin: -0.5rem;
  margin-bottom: 0.5rem;
  border-top-left-radius: var(--rounded-box, 0.5rem);
  border-top-right-radius: var(--rounded-box, 0.5rem);
  border-bottom-width: 1px;
}

.dropdown-footer {
  margin-left: -0.5rem;
  margin-right: -0.5rem;
  margin-bottom: -0.5rem !important;
  border-bottom-right-radius: var(--rounded-box, 0.5rem);
  border-bottom-left-radius: var(--rounded-box, 0.5rem);
  border-top-width: 1px;
}

.dropdown-title {
  display: block;
  padding-left: 1.25rem;
  padding-right: 1.25rem;
  padding-top: 0.375rem;
  padding-bottom: 0.375rem;
  text-transform: uppercase;
  font-size: 0.75rem;
  line-height: 1rem;
  font-weight: 500;
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

.footer {
  display: grid;
  width: 100%;
  grid-auto-flow: row;
  place-items: start;
  -moz-column-gap: 1rem;
       column-gap: 1rem;
  row-gap: 2.5rem;
  color: var(--fallback-bc,oklch(var(--bc)/0.8));
}

.footer > * {
  display: grid;
  place-items: start;
  gap: 0.75rem;
}

.footer-center {
  place-items: center;
  text-align: center;
}

.footer-center > * {
  place-items: center;
}

@media (min-width: 48rem) {
  .footer {
    grid-auto-flow: column;
  }

  .footer-center {
    grid-auto-flow: row dense;
  }
}

.label:where(:not(.label-text)) {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.indicator {
  position: relative;
  display: inline-flex;
  width: -moz-max-content;
  width: max-content;
}

.indicator :where(.indicator-item) {
  z-index: 1;
  position: absolute;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  white-space: nowrap;
}

.\!input {
  height: 2.375rem !important;
  width: 100% !important;
  flex-shrink: 1 !important;
  -webkit-appearance: none !important;
     -moz-appearance: none !important;
          appearance: none !important;
  padding-left: 0.75rem !important;
  padding-right: 0.75rem !important;
  font-size: 1rem !important;
  line-height: 1.375rem !important;
  font-weight: 400 !important;
  border-radius: var(--rounded-btn, 0.375rem) !important;
  border-width: 1px !important;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.4)) !important;
  --tw-bg-opacity: 1 !important;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1))) !important;
  color: var(--fallback-bc,oklch(var(--bc)/0.8)) !important;
  transition: border-color 0.15s ease-in-out,
    box-shadow 0.15s ease-in-out !important;
}

.input {
  height: 2.375rem;
  width: 100%;
  flex-shrink: 1;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  padding-left: 0.75rem;
  padding-right: 0.75rem;
  font-size: 1rem;
  line-height: 1.375rem;
  font-weight: 400;
  border-radius: var(--rounded-btn, 0.375rem);
  border-width: 1px;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.4));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
  color: var(--fallback-bc,oklch(var(--bc)/0.8));
  transition: border-color 0.15s ease-in-out,
    box-shadow 0.15s ease-in-out;
}

.\!input::file-selector-button {
  margin-inline-end: 1rem !important;
  display: inline-flex !important;
  height: 100% !important;
  flex-shrink: 0 !important;
  cursor: pointer !important;
  -webkit-user-select: none !important;
     -moz-user-select: none !important;
          user-select: none !important;
  flex-wrap: wrap !important;
  align-items: center !important;
  justify-content: center !important;
  padding-left: 1rem !important;
  padding-right: 1rem !important;
  text-align: center !important;
  font-size: 0.875rem !important;
  line-height: 1.25rem !important;
  line-height: 1em !important;
  border-start-start-radius: var(--rounded-btn, 0.375rem) !important;
  border-end-start-radius: var(--rounded-btn, 0.375rem) !important;
  border-width: 0px !important;
  background-color: var(--fallback-bc,oklch(var(--bc)/0.2)) !important;
  font-weight: 600 !important;
  text-transform: uppercase !important;
  --tw-text-opacity: 1 !important;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1))) !important;
  text-decoration-line: none !important;
}

.input::file-selector-button {
  margin-inline-end: 1rem;
  display: inline-flex;
  height: 100%;
  flex-shrink: 0;
  cursor: pointer;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  flex-wrap: wrap;
  align-items: center;
  justify-content: center;
  padding-left: 1rem;
  padding-right: 1rem;
  text-align: center;
  font-size: 0.875rem;
  line-height: 1.25rem;
  line-height: 1em;
  border-start-start-radius: var(--rounded-btn, 0.375rem);
  border-end-start-radius: var(--rounded-btn, 0.375rem);
  border-width: 0px;
  background-color: var(--fallback-bc,oklch(var(--bc)/0.2));
  font-weight: 600;
  text-transform: uppercase;
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
  text-decoration-line: none;
}

.input-filled {
  height: 3rem;
  font-size: 1rem;
  line-height: 1.375rem;
  border-bottom-right-radius: 0px;
  border-bottom-left-radius: 0px;
  border-top-left-radius: 0.375rem;
  border-top-right-radius: 0.375rem;
  border-width: 0px;
  border-bottom-width: 1px;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.6));
  background-color: var(--fallback-bc,oklch(var(--bc)/0.05));
}

.input-filled-focused {
  position: relative;
  top: -1px;
  z-index: 10;
  display: block;
  height: 0.125rem;
  width: 100%;
  --tw-scale-x: 0;
  --tw-scale-y: 0;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  transition-property: transform;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
  transition-delay: 0s;
  transition-duration: 150ms;
}

.\!input[type="number"]::-webkit-inner-spin-button {
  margin-top: -0.25rem !important;
  margin-bottom: -0.25rem !important;
  margin-inline-end: -0.25rem !important;
}

.input[type="number"]::-webkit-inner-spin-button {
  margin-top: -0.25rem;
  margin-bottom: -0.25rem;
  margin-inline-end: -0.25rem;
}

.input-sm[type="number"]::-webkit-inner-spin-button {
  margin-top: 0px;
  margin-bottom: 0px;
  margin-inline-end: 0px;
}

.input-lg[type="number"]::-webkit-inner-spin-button {
  margin-top: -0.25rem;
  margin-bottom: -0.25rem;
  margin-inline-end: 0.75rem;
}

.\!input[type="file"] {
  padding-left: 0px !important;
  padding-right: 0px !important;
}

.input[type="file"] {
  padding-left: 0px;
  padding-right: 0px;
}

.join {
  display: inline-flex;
  align-items: stretch;
  border-radius: var(--rounded-btn, 0.375rem);
}

.join :where(.join-item) {
  border-start-end-radius: 0;
  border-end-end-radius: 0;
  border-end-start-radius: 0;
  border-start-start-radius: 0;
}

.join .join-item:not(:first-child):not(:last-child),
  .join *:not(:first-child):not(:last-child) .join-item {
  border-start-end-radius: 0;
  border-end-end-radius: 0;
  border-end-start-radius: 0;
  border-start-start-radius: 0;
}

.join > .join-item:first-child:not(:last-child),
  .join *:first-child:not(:last-child) .join-item {
  border-start-end-radius: 0;
  border-end-end-radius: 0;
}

.join > :where(.join-item:first-child:not(:last-child)),
  .join :where(*:first-child:not(:last-child) .join-item) {
  border-end-start-radius: inherit;
  border-start-start-radius: inherit;
}

.join > .join-item:last-child:not(:first-child),
  .join *:last-child:not(:first-child) .join-item {
  border-end-start-radius: 0;
  border-start-start-radius: 0;
}

.join > :where(.join-item:last-child:not(:first-child)),
  .join :where(*:last-child:not(:first-child) .join-item) {
  border-start-end-radius: inherit;
  border-end-end-radius: inherit;
}

@supports not selector(:has(*)) {
  :where(.join *) {
    border-radius: inherit;
  }
}

@supports selector(:has(*)) {
  :where(.join *:has(.join-item)) {
    border-radius: inherit;
  }
}

.kbd {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border-radius: var(--rounded-btn, 0.375rem);
  border-width: 1px;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.25));
  background-color: var(--fallback-b2,oklch(var(--b2)/0.2));
  padding-left: 0.5rem;
  padding-right: 0.5rem;
  border-bottom-width: 2px;
  min-height: 2.2em;
  min-width: 2.2em;
}

.link {
  display: inline-block;
  cursor: pointer;
  text-decoration-line: underline;
}

.link-hover {
  text-decoration-line: none;
}

@media (hover:hover) {
  .link-hover:hover {
    text-decoration-line: underline;
  }

  .label a:hover {
    --tw-text-opacity: 1;
    color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
  }

  .menu li:not(.disabled, :disabled, [disabled]) > :not(ul, .menu-title, .collapse, .btn):active,
.menu li:not(.disabled, :disabled, [disabled]) > :not(ul, .menu-title, .collapse, .btn).active {
    background-color: var(--fallback-p,oklch(var(--p)/0.1));
    --tw-text-opacity: 1;
    color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
  }

  .radio.is-valid:hover,
.validate .radio:valid:hover {
    --tw-border-opacity: 1 !important;
    border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1))) !important;
  }

  
.\!validate .radio:valid:hover {
    --tw-border-opacity: 1 !important;
    border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1))) !important;
  }

  .radio.is-invalid:hover,
.validate .radio:invalid:hover {
    --tw-border-opacity: 1 !important;
    border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1))) !important;
  }

  
.\!validate .radio:invalid:hover {
    --tw-border-opacity: 1 !important;
    border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1))) !important;
  }

  .radio-inset.is-valid:hover,
.validate .radio-inset:valid:hover {
    --tw-border-opacity: 1 !important;
    border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1))) !important;
  }

  
.\!validate .radio-inset:valid:hover {
    --tw-border-opacity: 1 !important;
    border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1))) !important;
  }

  .radio-inset.is-invalid:hover,
.validate .radio-inset:invalid:hover {
    --tw-border-opacity: 1 !important;
    border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1))) !important;
  }

  
.\!validate .radio-inset:invalid:hover {
    --tw-border-opacity: 1 !important;
    border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1))) !important;
  }

  .table tr.hover:hover,
  .table tr.hover:nth-child(even):hover {
    background-color: var(--fallback-bc,oklch(var(--bc)/0.05));
  }

  .table-striped tr.hover,
  .table-striped tr.hover:nth-child(even) {
    background-color: var(--fallback-bc,oklch(var(--bc)/0.05));
  }
}

.link-animated {
  position: relative;
  text-decoration-line: none;
}

.link-animated::before {
  pointer-events: none;
  position: absolute;
  bottom: 0px;
  inset-inline-start: 0px;
  height: 1px;
  width: 100%;
  background-color: currentColor;
  transition-property: transform;
  transition-duration: 300ms;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  --tw-content: '';
  content: var(--tw-content);
  transform-origin: 100% 50%;
  transform: scale3d(0, 1, 1);
}

.link-animated:hover::before {
  transform-origin: 0% 50%;
  transform: scale3d(1, 1, 1);
}

.mask {
  -webkit-mask-size: contain;
          mask-size: contain;
  -webkit-mask-repeat: no-repeat;
          mask-repeat: no-repeat;
  -webkit-mask-position: center;
          mask-position: center;
}

.mask-half-1 {
  -webkit-mask-size: 200%;
          mask-size: 200%;
  -webkit-mask-position: left;
          mask-position: left;
}

.mask-half-1:where([dir="rtl"], [dir="rtl"] *) {
  -webkit-mask-position: right;
          mask-position: right;
}

.mask-half-2 {
  -webkit-mask-size: 200%;
          mask-size: 200%;
  -webkit-mask-position: right;
          mask-position: right;
}

.mask-half-2:where([dir="rtl"], [dir="rtl"] *) {
  -webkit-mask-position: left;
          mask-position: left;
}

.menu {
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  gap: 0.125rem;
  border-radius: var(--rounded-box, 0.5rem);
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
  padding: 0.5rem;
}

.menu :where(li ul) {
  position: relative;
  white-space: nowrap;
}

.menu :where(li:not(.menu-title) > *:not(ul, .collapse, .menu-title, .btn)) {
  display: grid;
  grid-auto-flow: column;
  align-content: flex-start;
  align-items: center;
  gap: 0.5rem;
  grid-auto-columns: minmax(auto, max-content) auto max-content;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
}

.menu :where(li > .menu-dropdown:not(.menu-dropdown-show)) {
  display: none;
}

:where(.menu li) {
  position: relative;
  display: flex;
  flex-shrink: 0;
  flex-direction: column;
  flex-wrap: wrap;
  align-items: stretch;
}

:where(.menu li) .badge {
  justify-self: end;
}

.mockup-code {
  position: relative;
  overflow-x: auto;
  overflow-y: hidden;
  min-width: 18rem;
  border-radius: var(--rounded-box, 0.5rem);
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity, 1)));
  padding-top: 1.25rem;
  padding-bottom: 1.25rem;
  color: var(--fallback-bc,oklch(var(--bc)/0.8));
  direction: ltr;
}

.mockup-code pre[data-prefix]:before {
  content: attr(data-prefix);
  display: inline-block;
  text-align: right;
  width: 2rem;
  opacity: 0.5;
}

.mockup-window {
  position: relative;
  overflow-x: auto;
  overflow-y: hidden;
  display: flex;
  width: 100%;
  flex-direction: column;
  border-radius: var(--rounded-box, 0.5rem);
  padding-top: 1.25rem;
}

.mockup-window pre[data-prefix]:before {
  content: attr(data-prefix);
  display: inline-block;
  text-align: right;
}

.mockup-browser {
  position: relative;
  overflow-x: auto;
  overflow-y: hidden;
  width: 100%;
  border-radius: var(--rounded-box, 0.5rem);
}

.mockup-browser pre[data-prefix]:before {
  content: attr(data-prefix);
  display: inline-block;
  text-align: right;
}

.modal {
  pointer-events: none;
  position: fixed;
  inset: 0px;
  z-index: 80;
  margin: 0px;
  display: grid;
  width: 100%;
  height: 100%;
  justify-items: center;
  padding: 1rem;
  opacity: 0;
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.modal-dialog {
  margin-left: auto;
  margin-right: auto;
  width: 100%;
  opacity: 0;
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.modal-content {
  pointer-events: auto;
  display: flex;
  flex-direction: column;
  border-radius: 0.5rem;
  max-height: calc(100vh - 2rem);
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
  --tw-shadow: 0 20px 25px -6px var(--fallback-bs,oklch(var(--bs)/0.38));
  --tw-shadow-colored: 0 20px 25px -6px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
  transition-duration: 300ms;
  overscroll-behavior: contain;
}

.modal-header {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 1.5rem;
}

.modal-title {
  font-size: 1.5rem;
  line-height: 2rem;
  font-weight: 600;
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
}

.modal-body {
  overflow-y: auto;
  font-size: 1rem;
  line-height: 1.375rem;
  font-weight: 400;
  overflow-x: hidden;
  padding: 1.5rem;
}

.modal-body::-webkit-scrollbar {
  width: 0.5rem;
}

.modal-footer {
  display: flex;
  align-items: center;
  justify-content: flex-end;
  gap: 0.75rem;
  padding: 1.5rem;
}

.navbar {
  display: flex;
  align-items: center;
  padding: var(--navbar-padding, 0.75rem 1.5rem);
  width: 100%;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
}

.navbar-start {
  display: flex;
  width: 50%;
  justify-content: flex-start;
}

.navbar-center {
  flex-shrink: 0;
}

.navbar-end {
  display: flex;
  width: 50%;
  justify-content: flex-end;
}

.pin-input {
  width: 2.375rem;
  height: 2.375rem;
  text-align: center;
  font-size: 1rem;
  line-height: 1.375rem;
  border-radius: var(--rounded-btn, 0.375rem);
  border-width: 1px;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.25));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
  transition: border-color 0.15s ease-in-out,
    box-shadow 0.15s ease-in-out;
}

.progress {
  display: flex;
  height: 0.375rem;
  width: 100%;
  overflow: hidden;
  border-radius: 9999px;
  --progress-color: var(--fallback-n,oklch(var(--n)/1));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity, 1)));
}

.progress-bar {
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: hidden;
  white-space: nowrap;
  border-radius: 9999px;
  font-size: 0.75rem;
  line-height: 1rem;
  font-weight: 500;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-duration: 500ms;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  --tw-bg-opacity: 1;
  background-color: var(--fallback-bc,oklch(var(--bc)/var(--tw-bg-opacity, 1)));
  --tw-text-opacity: 1;
  color: var(--fallback-b1,oklch(var(--b1)/var(--tw-text-opacity, 1)));
}

.progress-label {
  position: relative;
  display: inline;
  width: -moz-fit-content;
  width: fit-content;
  border-radius: var(--rounded-tooltip, 0.25rem);
  padding-left: 0.375rem;
  padding-right: 0.375rem;
  padding-top: 0.125rem;
  padding-bottom: 0.125rem;
  font-size: 0.75rem;
  line-height: 1rem;
  font-weight: 500;
  border-width: 1px;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.25));
}

.progress-vertical {
  height: 100%;
  width: 0.375rem;
  flex-direction: column;
  justify-content: flex-end;
  border-radius: 9999px;
}

.progress-step {
  display: flex;
  height: 0.375rem;
  width: 100%;
  flex-direction: column;
  justify-content: center;
  white-space: nowrap;
  text-align: center;
  font-size: 0.75rem;
  line-height: 1rem;
  background-color: var(--fallback-bc,oklch(var(--bc)/0.1));
  --tw-text-opacity: 1;
  color: var(--fallback-b1,oklch(var(--b1)/var(--tw-text-opacity, 1)));
}

.radial-progress {
  position: relative;
  display: inline-grid;
  height: var(--size);
  width: var(--size);
  place-content: center;
  border-radius: 9999px;
  background-color: transparent;
  vertical-align: middle;
  box-sizing: content-box;
  --value: 0;
  --size: 5rem;
  --thickness: calc(var(--size) / 10);
  font-weight: 500;
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
}

.radial-progress::-moz-progress-bar {
  -moz-appearance: none;
       appearance: none;
  background-color: transparent;
}

.radial-progress::-webkit-progress-value {
  -webkit-appearance: none;
          appearance: none;
  background-color: transparent;
}

.radial-progress::-webkit-progress-bar {
  -webkit-appearance: none;
          appearance: none;
  background-color: transparent;
}

.radial-progress:before,
.radial-progress:after {
  position: absolute;
  border-radius: 9999px;
  content: "";
}

.radial-progress:before {
  inset: 0px;
  background: radial-gradient(farthest-side, currentColor 98%, #0000) top/var(--thickness) var(--thickness) no-repeat,
    conic-gradient(currentColor calc(var(--value) * 1%), #0000 0);
  -webkit-mask: radial-gradient(farthest-side, #0000 calc(99% - var(--thickness)), #000 calc(100% - var(--thickness)));
  mask: radial-gradient(farthest-side, #0000 calc(99% - var(--thickness)), #000 calc(100% - var(--thickness)));
}

.radial-progress:after {
  inset: calc(50% - var(--thickness) / 2);
  transform: rotate(calc(var(--value) * 3.6deg - 90deg)) translate(calc(var(--size) / 2 - 50%));
  background-color: currentColor;
}

.radio,
.radio-inset {
  flex-shrink: 0;
}

.range {
  height: 0.5rem;
  width: 100%;
  -moz-appearance: none;
       appearance: none;
  -webkit-appearance: none;
  --range-shdw: var(--fallback-bc,oklch(var(--bc)/1));
  position: relative;
  border-radius: 9999px;
  background-color: transparent;
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.range:focus {
  outline: none;
}

.select {
  display: inline-flex;
  cursor: pointer;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  height: 2.375rem;
  width: 100%;
  padding-left: 0.75rem;
  padding-right: 0.75rem;
  font-size: 1rem;
  line-height: 2;
  line-height: 1.375rem;
  border-radius: var(--rounded-btn, 0.375rem);
  border-width: 1px;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.4));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
  color: var(--fallback-bc,oklch(var(--bc)/0.8));
  background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='1em' height='1em' viewBox='0 0 24 24'><path fill='none' stroke='%239293AE' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m6 9l6 6l6-6'/></svg>");
  background-size: 1.3em;
  background-position: calc(100% - 1rem) center;
  background-repeat: no-repeat;
}

.select-floating {
  height: 2.375rem;
}

.select-filled {
  height: 3.25rem;
  border-bottom-right-radius: 0px;
  border-bottom-left-radius: 0px;
  border-top-left-radius: 0.375rem;
  border-top-right-radius: 0.375rem;
  border-width: 0px;
  border-bottom-width: 1px;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.6));
  background-color: var(--fallback-bc,oklch(var(--bc)/0.05));
  padding-top: 0.625rem;
}

.select[multiple] {
  height: auto;
}

.select-filled-focused {
  position: relative;
  top: -1px;
  z-index: 10;
  display: block;
  height: 0.125rem;
  width: 100%;
  --tw-scale-x: 0;
  --tw-scale-y: 0;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  transition-property: transform;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
  transition-delay: 0s;
  transition-duration: 150ms;
}

.select-floating-label {
  position: absolute;
  inset-inline-start: 0px;
  top: 0px;
  margin-inline-start: 0.5rem;
  width: auto;
  --tw-translate-y: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
  padding-left: 0.25rem;
  padding-right: 0.25rem;
  font-size: 0.75rem;
  line-height: 1rem;
  color: var(--fallback-bc,oklch(var(--bc)/0.8));
}

.select.select-floating.select-lg .select-floating-label {
  margin-inline-start: 0.75rem;
}

.select-filled-label {
  position: absolute;
  inset-inline-start: 0px;
  top: 0.125rem;
  margin-inline-start: 0.75rem;
  font-size: 0.75rem;
  line-height: 1rem;
  color: var(--fallback-bc,oklch(var(--bc)/0.8));
}

.select.select-floating.select-lg .select-filled-label {
  margin-inline-start: 1rem;
}

.\!stats {
  display: inline-grid !important;
  border-radius: var(--rounded-box, 0.5rem) !important;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.4)) !important;
  --tw-bg-opacity: 1 !important;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1))) !important;
  color: var(--fallback-bc,oklch(var(--bc)/0.8)) !important;
  box-shadow: var(--card-shadow, 0px 2px 4px 0px oklch(var(--bs) / 0.26)) !important;
  border-width: var(--card-border, 0px) !important;
}

:where(.\!stats) {
  grid-auto-flow: column !important;
  overflow-x: auto !important;
}

.\!stat {
  display: inline-grid !important;
  width: 100% !important;
  grid-template-columns: repeat(1, 1fr) !important;
  -moz-column-gap: 1rem !important;
       column-gap: 1rem !important;
  row-gap: 0.25rem !important;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.1)) !important;
  padding-left: 1.5rem !important;
  padding-right: 1.5rem !important;
  padding-top: 1rem !important;
  padding-bottom: 1rem !important;
}

.stat {
  display: inline-grid;
  width: 100%;
  grid-template-columns: repeat(1, 1fr);
  -moz-column-gap: 1rem;
       column-gap: 1rem;
  row-gap: 0.25rem;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.1));
  padding-left: 1.5rem;
  padding-right: 1.5rem;
  padding-top: 1rem;
  padding-bottom: 1rem;
}

.accordion-toggle {
  width: 100%;
  cursor: pointer;
  padding-left: 1.25rem;
  padding-right: 1.25rem;
  padding-top: 1rem;
  padding-bottom: 1rem;
  font-size: 1.125rem;
  line-height: 1.5rem;
  font-weight: 500;
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
}

.accordion-toggle:disabled {
  pointer-events: none;
  opacity: 0.5;
}

.accordion-shadow :where(.accordion-item) {
  margin-top: 0.5rem;
  margin-bottom: 0.5rem;
  border-radius: var(--rounded-box, 0.5rem);
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
  --tw-shadow: 0 4px 6px -1px var(--fallback-bs,oklch(var(--bs)/0.2));
  --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.accordion-shadow :where(.accordion-item) .accordion-item:first-of-type {
  margin-top: 0px;
}

.accordion-shadow :where(.accordion-item) .accordion-item:last-of-type {
  margin-bottom: 0px;
}

.accordion-shadow :where(.accordion-item) > *:first-child {
  border-top-left-radius: var(--rounded-box, 0.5rem);
  border-top-right-radius: var(--rounded-box, 0.5rem);
}

.accordion-shadow :where(.accordion-item) > *:last-child {
  border-bottom-right-radius: var(--rounded-box, 0.5rem);
  border-bottom-left-radius: var(--rounded-box, 0.5rem);
}

.accordion:where(.accordion-bordered) > :not([hidden]) ~ :not([hidden]) {
  --tw-divide-y-reverse: 0;
  border-top-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
  border-bottom-width: calc(1px * var(--tw-divide-y-reverse));
  border-color: var(--fallback-bc,oklch(var(--bc)/0.25));
}

.accordion:where(.accordion-bordered) {
  border-radius: var(--rounded-box, 0.5rem);
  border-width: 1px;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.25));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
}

.advance-select-toggle:hover {
  border-color: var(--fallback-bc,oklch(var(--bc)/0.6));
}

.disabled.advance-select-toggle {
  pointer-events: none;
  border-width: 0px;
  background-color: var(--fallback-n,oklch(var(--n)/0.1));
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  color: var(--fallback-n,oklch(var(--n)/0.5));
}

.disabled .advance-select-toggle {
  pointer-events: none;
  border-width: 0px;
  background-color: var(--fallback-n,oklch(var(--n)/0.1));
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  color: var(--fallback-n,oklch(var(--n)/0.5));
}

.advance-select-toggle:focus,
  .advance-select-toggle:focus-within {
  --tw-border-opacity: 1;
  border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity, 1)));
  --tw-shadow: 0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22));
  --tw-shadow: var(--tw-shadow-colored);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-shadow-color: var(--fallback-p,oklch(var(--p)/0.22));
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  --tw-ring-opacity: 1;
  --tw-ring-color: var(--fallback-p,oklch(var(--p)/var(--tw-ring-opacity, 1)));
}

.advance-select-toggle:focus-visible {
  outline: unset;
}

.advance-select-option:hover {
  background-color: var(--fallback-n,oklch(var(--n)/0.1));
}

.advance-select-option:focus {
  background-color: var(--fallback-n,oklch(var(--n)/0.1));
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.advance-select-option.active,
  .advance-select-option:active {
  background-color: var(--fallback-p,oklch(var(--p)/0.1));
  --tw-text-opacity: 1;
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
}

.advance-select-tag:hover {
  border-color: var(--fallback-bc,oklch(var(--bc)/0.6));
}

.advance-select-tag:focus,
  .advance-select-tag:focus-within {
  --tw-border-opacity: 1;
  border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity, 1)));
  --tw-shadow: 0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22));
  --tw-shadow: var(--tw-shadow-colored);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-shadow-color: var(--fallback-p,oklch(var(--p)/0.22));
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  --tw-ring-opacity: 1;
  --tw-ring-color: var(--fallback-p,oklch(var(--p)/var(--tw-ring-opacity, 1)));
}

.advance-select-tag:focus-visible {
  outline: unset;
}

select.is-valid + .advance-select-toggle,
.advance-select-tag:has(> .is-valid),
.validate select:has(~ * > .selected) + .advance-select-toggle {
  --tw-border-opacity: 1;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1)));
}


.\!validate select:has(~ * > .selected) + .advance-select-toggle {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1))) !important;
}

select.is-valid + .advance-select-toggle:focus,
  select.is-valid + .advance-select-toggle:focus-within,
  .advance-select-tag:has(> .is-valid):focus,
  .advance-select-tag:has(> .is-valid):focus-within,
  .validate select:has(~ * > .selected) + .advance-select-toggle:focus,
  .validate select:has(~ * > .selected) + .advance-select-toggle:focus-within {
  --tw-border-opacity: 1;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1)));
  --tw-shadow: 0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22));
  --tw-shadow: var(--tw-shadow-colored);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-shadow-color: var(--fallback-su,oklch(var(--su)/0.22));
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  --tw-ring-opacity: 1;
  --tw-ring-color: var(--fallback-su,oklch(var(--su)/var(--tw-ring-opacity, 1)));
}


  .\!validate select:has(~ * > .selected) + .advance-select-toggle:focus,
  .\!validate select:has(~ * > .selected) + .advance-select-toggle:focus-within {
  --tw-shadow: 0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22)) !important;
  --tw-shadow: var(--tw-shadow-colored) !important;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow) !important;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000) !important;
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1))) !important;
  --tw-shadow: 0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22)) !important;
  --tw-shadow: var(--tw-shadow-colored) !important;
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color) !important;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow) !important;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000) !important;
  --tw-shadow-color: var(--fallback-su,oklch(var(--su)/0.22)) !important;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color) !important;
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color) !important;
  --tw-ring-opacity: 1 !important;
  --tw-ring-color: var(--fallback-su,oklch(var(--su)/var(--tw-ring-opacity, 1))) !important;
}

select.is-invalid + .advance-select-toggle,
.advance-select-tag:has(> .is-invalid),
.validate select:not(:has(~ * > .selected)) + .advance-select-toggle {
  --tw-border-opacity: 1;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1)));
}


.\!validate select:not(:has(~ * > .selected)) + .advance-select-toggle {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1))) !important;
}

select.is-invalid + .advance-select-toggle:focus,
  select.is-invalid + .advance-select-toggle:focus-within,
  .advance-select-tag:has(> .is-invalid):focus,
  .advance-select-tag:has(> .is-invalid):focus-within,
  .validate select:not(:has(~ * > .selected)) + .advance-select-toggle:focus,
  .validate select:not(:has(~ * > .selected)) + .advance-select-toggle:focus-within {
  --tw-border-opacity: 1;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1)));
  --tw-shadow: 0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22));
  --tw-shadow: var(--tw-shadow-colored);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-shadow-color: var(--fallback-er,oklch(var(--er)/0.22));
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  --tw-ring-opacity: 1;
  --tw-ring-color: var(--fallback-er,oklch(var(--er)/var(--tw-ring-opacity, 1)));
}


  .\!validate select:not(:has(~ * > .selected)) + .advance-select-toggle:focus,
  .\!validate select:not(:has(~ * > .selected)) + .advance-select-toggle:focus-within {
  --tw-shadow: 0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22)) !important;
  --tw-shadow: var(--tw-shadow-colored) !important;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow) !important;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000) !important;
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1))) !important;
  --tw-shadow: 0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22)) !important;
  --tw-shadow: var(--tw-shadow-colored) !important;
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color) !important;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow) !important;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000) !important;
  --tw-shadow-color: var(--fallback-er,oklch(var(--er)/0.22)) !important;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color) !important;
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color) !important;
  --tw-ring-opacity: 1 !important;
  --tw-ring-color: var(--fallback-er,oklch(var(--er)/var(--tw-ring-opacity, 1))) !important;
}

.\!validate .label:has(~ .advance-select > select:valid) > *,
.\!validate .label-text:has(~ .advance-select > select:valid),

.\!validate .advance-select:has(> select:valid) ~ .label,
.\!validate .advance-select:has(> select:valid) ~ .label-text,
.\!validate .advance-select:has(> select:valid) ~ .label .label-text {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1))) !important;
}

.validate .label:has(~ .advance-select > select:valid) > *,
.validate .label-text:has(~ .advance-select > select:valid),

.validate .advance-select:has(> select:valid) ~ .label,
.validate .advance-select:has(> select:valid) ~ .label-text,
.validate .advance-select:has(> select:valid) ~ .label .label-text {
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
}

.\!validate .label:has(~ .advance-select > select:valid) > *,
.\!validate .label-text:has(~ .advance-select > select:valid),

.\!validate .advance-select:has(> select:valid) ~ .label,
.\!validate .advance-select:has(> select:valid) ~ .label-text,
.\!validate .advance-select:has(> select:valid) ~ .label .label-text {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1))) !important;
}

.\!validate .label:has(~ * > select:invalid) > *,
.\!validate .label-text:has(~ * > select:invalid),

.\!validate .advance-select:has( > select:invalid) ~ .label,
.\!validate .advance-select:has(> select:invalid) ~ .label-text,
.\!validate .advance-select:has( > select:invalid) ~ .label .label-text {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1))) !important;
}

.validate .label:has(~ * > select:invalid) > *,
.validate .label-text:has(~ * > select:invalid),

.validate .advance-select:has( > select:invalid) ~ .label,
.validate .advance-select:has(> select:invalid) ~ .label-text,
.validate .advance-select:has( > select:invalid) ~ .label .label-text {
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}

.\!validate .label:has(~ * > select:invalid) > *,
.\!validate .label-text:has(~ * > select:invalid),

.\!validate .advance-select:has( > select:invalid) ~ .label,
.\!validate .advance-select:has(> select:invalid) ~ .label-text,
.\!validate .advance-select:has( > select:invalid) ~ .label .label-text {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1))) !important;
}

.\!validate .label ~ *:has(> select:valid) ~ * > .success-message,
.\!validate .advance-select:has(> select:valid) ~ * > .success-message,
.\!validate .advance-select:has(> select:valid) ~ .success-message {
  display: block !important;
}

.validate .label ~ *:has(> select:valid) ~ * > .success-message,
.validate .advance-select:has(> select:valid) ~ * > .success-message,
.validate .advance-select:has(> select:valid) ~ .success-message {
  display: block;
}

.\!validate .label ~ *:has(> select:valid) ~ * > .success-message,
.\!validate .advance-select:has(> select:valid) ~ * > .success-message,
.\!validate .advance-select:has(> select:valid) ~ .success-message {
  display: block !important;
}

.\!validate .label ~ *:has(> select:invalid) ~ * > .error-message,
.\!validate .advance-select:has(> select:invalid) ~ * > .error-message,
.\!validate .advance-select:has(> select:invalid) ~ .error-message {
  display: block !important;
}

.validate .label ~ *:has(> select:invalid) ~ * > .error-message,
.validate .advance-select:has(> select:invalid) ~ * > .error-message,
.validate .advance-select:has(> select:invalid) ~ .error-message {
  display: block;
}

.\!validate .label ~ *:has(> select:invalid) ~ * > .error-message,
.\!validate .advance-select:has(> select:invalid) ~ * > .error-message,
.\!validate .advance-select:has(> select:invalid) ~ .error-message {
  display: block !important;
}

.alert-neutral {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-n,oklch(var(--n)/var(--tw-bg-opacity, 1)));
  --tw-text-opacity: 1;
  color: var(--fallback-nc,oklch(var(--nc)/var(--tw-text-opacity, 1)));
}

.alert-primary {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity, 1)));
  --tw-text-opacity: 1;
  color: var(--fallback-pc,oklch(var(--pc)/var(--tw-text-opacity, 1)));
}

.alert-secondary {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-s,oklch(var(--s)/var(--tw-bg-opacity, 1)));
  --tw-text-opacity: 1;
  color: var(--fallback-sc,oklch(var(--sc)/var(--tw-text-opacity, 1)));
}

.alert-info {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-in,oklch(var(--in)/var(--tw-bg-opacity, 1)));
  --tw-text-opacity: 1;
  color: var(--fallback-inc,oklch(var(--inc)/var(--tw-text-opacity, 1)));
}

.alert-success {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity, 1)));
  --tw-text-opacity: 1;
  color: var(--fallback-suc,oklch(var(--suc)/var(--tw-text-opacity, 1)));
}

.alert-warning {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-wa,oklch(var(--wa)/var(--tw-bg-opacity, 1)));
  --tw-text-opacity: 1;
  color: var(--fallback-wac,oklch(var(--wac)/var(--tw-text-opacity, 1)));
}

.alert-error {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity, 1)));
  --tw-text-opacity: 1;
  color: var(--fallback-erc,oklch(var(--erc)/var(--tw-text-opacity, 1)));
}

.alert-soft {
  border-width: 1px;
  border-color: currentColor;
}

.alert-soft.alert-primary {
  background-color: var(--fallback-p,oklch(var(--p)/0.2));
  --tw-text-opacity: 1;
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
}

.alert-soft.alert-secondary {
  background-color: var(--fallback-s,oklch(var(--s)/0.2));
  --tw-text-opacity: 1;
  color: var(--fallback-s,oklch(var(--s)/var(--tw-text-opacity, 1)));
}

.alert-soft.alert-neutral {
  background-color: var(--fallback-n,oklch(var(--n)/0.2));
  --tw-text-opacity: 1;
  color: var(--fallback-n,oklch(var(--n)/var(--tw-text-opacity, 1)));
}

.alert-soft.alert-info {
  background-color: var(--fallback-in,oklch(var(--in)/0.2));
  --tw-text-opacity: 1;
  color: var(--fallback-in,oklch(var(--in)/var(--tw-text-opacity, 1)));
}

.alert-soft.alert-success {
  background-color: var(--fallback-su,oklch(var(--su)/0.2));
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
}

.alert-soft.alert-warning {
  background-color: var(--fallback-wa,oklch(var(--wa)/0.2));
  --tw-text-opacity: 1;
  color: var(--fallback-wa,oklch(var(--wa)/var(--tw-text-opacity, 1)));
}

.alert-soft.alert-error {
  background-color: var(--fallback-er,oklch(var(--er)/0.2));
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}

.alert-outline {
  border-width: 1px;
  border-color: currentColor;
  background-color: transparent;
}

.alert-outline.alert-neutral {
  --tw-text-opacity: 1;
  color: var(--fallback-n,oklch(var(--n)/var(--tw-text-opacity, 1)));
}

.alert-outline.alert-primary {
  --tw-text-opacity: 1;
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
}

.alert-outline.alert-secondary {
  --tw-text-opacity: 1;
  color: var(--fallback-s,oklch(var(--s)/var(--tw-text-opacity, 1)));
}

.alert-outline.alert-info {
  --tw-text-opacity: 1;
  color: var(--fallback-in,oklch(var(--in)/var(--tw-text-opacity, 1)));
}

.alert-outline.alert-success {
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
}

.alert-outline.alert-warning {
  --tw-text-opacity: 1;
  color: var(--fallback-wa,oklch(var(--wa)/var(--tw-text-opacity, 1)));
}

.alert-outline.alert-error {
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}

.avatar-group {
  display: flex;
}

.avatar-group :where(.avatar) img {
  height: 100%;
  width: 100%;
  border-radius: 9999px;
  border-width: 2px;
  --tw-border-opacity: 1;
  border-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-border-opacity, 1)));
  -o-object-fit: cover;
     object-fit: cover;
}

.avatar-group :where(.avatar).placeholder > div {
  border-radius: 9999px;
  border-width: 2px;
  --tw-border-opacity: 1;
  border-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-border-opacity, 1)));
}

.avatar-group :where(.avatar).\!placeholder > div {
  border-radius: 9999px !important;
  border-width: 2px !important;
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-border-opacity, 1))) !important;
}

.badge-neutral {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-n,oklch(var(--n)/var(--tw-bg-opacity, 1)));
  --tw-text-opacity: 1;
  color: var(--fallback-nc,oklch(var(--nc)/var(--tw-text-opacity, 1)));
}

.badge-primary {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity, 1)));
  --tw-text-opacity: 1;
  color: var(--fallback-pc,oklch(var(--pc)/var(--tw-text-opacity, 1)));
}

.badge-secondary {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-s,oklch(var(--s)/var(--tw-bg-opacity, 1)));
  --tw-text-opacity: 1;
  color: var(--fallback-sc,oklch(var(--sc)/var(--tw-text-opacity, 1)));
}

.badge-accent {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-a,oklch(var(--a)/var(--tw-bg-opacity, 1)));
  --tw-text-opacity: 1;
  color: var(--fallback-ac,oklch(var(--ac)/var(--tw-text-opacity, 1)));
}

.badge-info {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-in,oklch(var(--in)/var(--tw-bg-opacity, 1)));
  --tw-text-opacity: 1;
  color: var(--fallback-inc,oklch(var(--inc)/var(--tw-text-opacity, 1)));
}

.badge-success {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity, 1)));
  --tw-text-opacity: 1;
  color: var(--fallback-suc,oklch(var(--suc)/var(--tw-text-opacity, 1)));
}

.badge-warning {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-wa,oklch(var(--wa)/var(--tw-bg-opacity, 1)));
  --tw-text-opacity: 1;
  color: var(--fallback-wac,oklch(var(--wac)/var(--tw-text-opacity, 1)));
}

.badge-error {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity, 1)));
  --tw-text-opacity: 1;
  color: var(--fallback-erc,oklch(var(--erc)/var(--tw-text-opacity, 1)));
}

.badge-soft {
  background-color: var(--fallback-b3,oklch(var(--b3)/0.4));
}

.badge-soft.badge-neutral {
  background-color: var(--fallback-n,oklch(var(--n)/0.2));
  --tw-text-opacity: 1;
  color: var(--fallback-n,oklch(var(--n)/var(--tw-text-opacity, 1)));
}

.badge-soft.badge-primary {
  background-color: var(--fallback-p,oklch(var(--p)/0.2));
  --tw-text-opacity: 1;
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
}

.badge-soft.badge-secondary {
  background-color: var(--fallback-s,oklch(var(--s)/0.2));
  --tw-text-opacity: 1;
  color: var(--fallback-s,oklch(var(--s)/var(--tw-text-opacity, 1)));
}

.badge-soft.badge-accent {
  background-color: var(--fallback-a,oklch(var(--a)/0.2));
  --tw-text-opacity: 1;
  color: var(--fallback-a,oklch(var(--a)/var(--tw-text-opacity, 1)));
}

.badge-soft.badge-info {
  background-color: var(--fallback-in,oklch(var(--in)/0.2));
  --tw-text-opacity: 1;
  color: var(--fallback-in,oklch(var(--in)/var(--tw-text-opacity, 1)));
}

.badge-soft.badge-success {
  background-color: var(--fallback-su,oklch(var(--su)/0.2));
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
}

.badge-soft.badge-warning {
  background-color: var(--fallback-wa,oklch(var(--wa)/0.2));
  --tw-text-opacity: 1;
  color: var(--fallback-wa,oklch(var(--wa)/var(--tw-text-opacity, 1)));
}

.badge-soft.badge-error {
  background-color: var(--fallback-er,oklch(var(--er)/0.2));
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}

.badge-outline {
  border-width: 1px;
  border-color: currentColor;
  background-color: transparent;
}

.badge-outline.badge-neutral {
  --tw-text-opacity: 1;
  color: var(--fallback-n,oklch(var(--n)/var(--tw-text-opacity, 1)));
}

.badge-outline.badge-primary {
  --tw-text-opacity: 1;
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
}

.badge-outline.badge-secondary {
  --tw-text-opacity: 1;
  color: var(--fallback-s,oklch(var(--s)/var(--tw-text-opacity, 1)));
}

.badge-outline.badge-accent {
  --tw-text-opacity: 1;
  color: var(--fallback-a,oklch(var(--a)/var(--tw-text-opacity, 1)));
}

.badge-outline.badge-info {
  --tw-text-opacity: 1;
  color: var(--fallback-in,oklch(var(--in)/var(--tw-text-opacity, 1)));
}

.badge-outline.badge-success {
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
}

.badge-outline.badge-warning {
  --tw-text-opacity: 1;
  color: var(--fallback-wa,oklch(var(--wa)/var(--tw-text-opacity, 1)));
}

.badge-outline.badge-error {
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}

.breadcrumbs > ul > li > a:focus, .breadcrumbs > ol > li > a:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.breadcrumbs > ul > li > a:focus-visible, .breadcrumbs > ol > li > a:focus-visible {
  outline: 2px solid currentColor;
  outline-offset: 2px;
}

@media (prefers-reduced-motion: no-preference) {
  .btn {
    animation: button-pop var(--animation-btn, 0.25s) ease-out;
  }
}

.btn:active:hover,
  .btn:active:focus {
  animation: button-pop 0s ease-out;
  transform: scale(var(--btn-focus-scale, 0.97));
}

@supports not (color: oklch(0% 0 0)) {
  .btn {
    background-color: var(--btn-color, var(--fallback-b2));
    border-color: var(--btn-color, var(--fallback-b2));
  }

  .btn:focus-visible {
    background-color: var(--btn-color, var(--fallback-b2));
    border-color: var(--btn-color, var(--fallback-b2));
  }

  .btn-primary {
    --btn-color: var(--fallback-p);
  }

  .btn-secondary {
    --btn-color: var(--fallback-s);
  }

  .btn-accent {
    --btn-color: var(--fallback-a);
  }

  .btn-info {
    --btn-color: var(--fallback-in);
  }

  .btn-success {
    --btn-color: var(--fallback-su);
  }

  .btn-warning {
    --btn-color: var(--fallback-wa);
  }

  .btn-error {
    --btn-color: var(--fallback-er);
  }
}

@media (hover: hover) {
  .btn:hover {
    --tw-shadow: 0 4px 6px -1px var(--fallback-bs,oklch(var(--bs)/0.2));
    --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  }

  @supports (color: color-mix(in oklab, black, black)) {
    .btn:hover {
      background-color: color-mix(
            in oklab,
            oklch(var(--btn-color, var(--b2)) / var(--tw-bg-opacity, 1)) 90%,
            black
          );
      border-color: color-mix(
            in oklab,
            oklch(var(--btn-color, var(--b2)) / var(--tw-border-opacity, 1)) 90%,
            black
          );
    }
  }

  @supports not (color: oklch(0% 0 0)) {
    .btn:hover {
      background-color: var(--btn-color, var(--fallback-b2));
      border-color: var(--btn-color, var(--fallback-b2));
    }
  }

  .btn.glass:hover {
    --glass-opacity: 25%;
    --glass-border-opacity: 15%;
  }

  .btn-soft:hover {
    background-color: var(--fallback-n,oklch(var(--n)/0.3));
  }

  .btn-soft.btn-primary:hover {
    background-color: var(--fallback-p,oklch(var(--p)/0.3));
  }

  .btn-soft.btn-secondary:hover {
    background-color: var(--fallback-s,oklch(var(--s)/0.3));
  }

  .btn-soft.btn-accent:hover {
    background-color: var(--fallback-a,oklch(var(--a)/0.3));
  }

  .btn-soft.btn-success:hover {
    background-color: var(--fallback-su,oklch(var(--su)/0.3));
  }

  .btn-soft.btn-info:hover {
    background-color: var(--fallback-in,oklch(var(--in)/0.3));
  }

  .btn-soft.btn-warning:hover {
    background-color: var(--fallback-wa,oklch(var(--wa)/0.3));
  }

  .btn-soft.btn-error:hover {
    background-color: var(--fallback-er,oklch(var(--er)/0.3));
  }

  .btn-outline:hover {
    --tw-border-opacity: 1;
    border-color: var(--fallback-bc,oklch(var(--bc)/var(--tw-border-opacity, 1)));
    background-color: var(--fallback-bc,oklch(var(--bc)/0.1));
  }

  .btn-outline.btn-primary:hover {
    --tw-border-opacity: 1;
    border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity, 1)));
    background-color: var(--fallback-p,oklch(var(--p)/0.1));
  }

  .btn-outline.btn-secondary:hover {
    --tw-border-opacity: 1;
    border-color: var(--fallback-s,oklch(var(--s)/var(--tw-border-opacity, 1)));
    background-color: var(--fallback-s,oklch(var(--s)/0.1));
  }

  .btn-outline.btn-accent:hover {
    --tw-border-opacity: 1;
    border-color: var(--fallback-a,oklch(var(--a)/var(--tw-border-opacity, 1)));
    background-color: var(--fallback-a,oklch(var(--a)/0.1));
  }

  .btn-outline.btn-success:hover {
    --tw-border-opacity: 1;
    border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1)));
    background-color: var(--fallback-su,oklch(var(--su)/0.1));
  }

  .btn-outline.btn-info:hover {
    --tw-border-opacity: 1;
    border-color: var(--fallback-in,oklch(var(--in)/var(--tw-border-opacity, 1)));
    background-color: var(--fallback-in,oklch(var(--in)/0.1));
  }

  .btn-outline.btn-warning:hover {
    --tw-border-opacity: 1;
    border-color: var(--fallback-wa,oklch(var(--wa)/var(--tw-border-opacity, 1)));
    background-color: var(--fallback-wa,oklch(var(--wa)/0.1));
  }

  .btn-outline.btn-error:hover {
    --tw-border-opacity: 1;
    border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1)));
    background-color: var(--fallback-er,oklch(var(--er)/0.1));
  }

  .btn-text:hover {
    border-color: transparent;
    background-color: var(--fallback-bc,oklch(var(--bc)/0.1));
  }

  .btn-text.btn-primary:hover {
    background-color: var(--fallback-p,oklch(var(--p)/0.1));
  }

  .btn-text.btn-secondary:hover {
    background-color: var(--fallback-s,oklch(var(--s)/0.1));
  }

  .btn-text.btn-accent:hover {
    background-color: var(--fallback-a,oklch(var(--a)/0.1));
  }

  .btn-text.btn-success:hover {
    background-color: var(--fallback-su,oklch(var(--su)/0.1));
  }

  .btn-text.btn-info:hover {
    background-color: var(--fallback-in,oklch(var(--in)/0.1));
  }

  .btn-text.btn-warning:hover {
    background-color: var(--fallback-wa,oklch(var(--wa)/0.1));
  }

  .btn-text.btn-error:hover {
    background-color: var(--fallback-er,oklch(var(--er)/0.1));
  }

  .btn-gradient:hover {
    --tw-border-opacity: 1;
    border-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-border-opacity, 1)));
    --tw-shadow: 0 4px 6px -1px var(--fallback-bs,oklch(var(--bs)/0.2));
    --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
    background-position: right center;
  }

  .btn-disabled:hover,
    .btn[disabled]:hover,
    .btn.disabled:hover,
    .btn:disabled:hover {
    opacity: 0.5;
    --tw-shadow: 0 0 #0000;
    --tw-shadow-colored: 0 0 #0000;
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  }

  @supports (color: color-mix(in oklab, black, black)) {
    .btn:is(input[type="checkbox"]:checked):hover, .btn:is(input[type="radio"]:checked):hover {
      background-color: color-mix(in oklab, var(--fallback-p,oklch(var(--p)/1)) 90%, black);
      border-color: color-mix(in oklab, var(--fallback-p,oklch(var(--p)/1)) 90%, black);
    }
  }

  :where(.menu li:not(.menu-title, .disabled, [disabled], :disabled) > *:not(ul, .collapse, .menu-title)):not(.active, .btn, .disabled, :disabled, [disabled]):hover {
    cursor: pointer;
    outline: 2px solid transparent;
    outline-offset: 2px;
  }

  @supports (color: oklch(0 0 0)) {
    :where(.menu li:not(.menu-title, .disabled, [disabled], :disabled) > *:not(ul, .collapse, .menu-title)):not(.active, .btn, .disabled, :disabled, [disabled]):hover {
      background-color: var(--fallback-n,oklch(var(--n)/0.1));
    }
  }
}

@supports (color: color-mix(in oklab, black, black)) {
  .btn-active {
    background-color: color-mix(in oklab, oklch(var(--btn-color, var(--b2)) / var(--tw-bg-opacity, 1)) 90%, black);
    border-color: color-mix(in oklab, oklch(var(--btn-color, var(--b2)) / var(--tw-border-opacity, 1)) 90%, black);
  }

  .btn:focus-visible {
    background-color: color-mix(in oklab, oklch(var(--btn-color, var(--b2)) / var(--tw-bg-opacity, 1)) 90%, black);
    border-color: color-mix(in oklab, oklch(var(--btn-color, var(--b2)) / var(--tw-border-opacity, 1)) 90%, black);
  }
}

.btn:focus-visible {
  outline-style: solid;
  outline-width: 2px;
  outline-offset: 0px;
}

.btn-primary {
  --tw-text-opacity: 1;
  color: var(--fallback-pc,oklch(var(--pc)/var(--tw-text-opacity, 1)));
  outline-color: var(--fallback-p,oklch(var(--p)/0.3));
}

@supports (color: oklch(0% 0 0)) {
  .btn-primary {
    --btn-color: var(--p);
  }

  .btn-secondary {
    --btn-color: var(--s);
  }

  .btn-accent {
    --btn-color: var(--a);
  }

  .btn-info {
    --btn-color: var(--in);
  }

  .btn-success {
    --btn-color: var(--su);
  }

  .btn-warning {
    --btn-color: var(--wa);
  }

  .btn-error {
    --btn-color: var(--er);
  }

  .btn-gradient.btn-primary {
    --light-shade: var(--p);
  }

  .btn-gradient.btn-secondary {
    --light-shade: var(--s);
  }

  .btn-gradient.btn-accent {
    --light-shade: var(--a);
  }

  .btn-gradient.btn-info {
    --light-shade: var(--in);
  }

  .btn-gradient.btn-success {
    --light-shade: var(--su);
  }

  .btn-gradient.btn-warning {
    --light-shade: var(--wa);
  }

  .btn-gradient.btn-error {
    --light-shade: var(--er);
  }
}

.btn-secondary {
  --tw-text-opacity: 1;
  color: var(--fallback-sc,oklch(var(--sc)/var(--tw-text-opacity, 1)));
  outline-color: var(--fallback-s,oklch(var(--s)/0.3));
}

.btn-accent {
  --tw-text-opacity: 1;
  color: var(--fallback-ac,oklch(var(--ac)/var(--tw-text-opacity, 1)));
  outline-color: var(--fallback-a,oklch(var(--a)/0.3));
}

.btn-info {
  --tw-text-opacity: 1;
  color: var(--fallback-inc,oklch(var(--inc)/var(--tw-text-opacity, 1)));
  outline-color: var(--fallback-in,oklch(var(--in)/0.3));
}

.btn-success {
  --tw-text-opacity: 1;
  color: var(--fallback-suc,oklch(var(--suc)/var(--tw-text-opacity, 1)));
  outline-color: var(--fallback-su,oklch(var(--su)/0.3));
}

.btn-warning {
  --tw-text-opacity: 1;
  color: var(--fallback-wac,oklch(var(--wac)/var(--tw-text-opacity, 1)));
  outline-color: var(--fallback-wa,oklch(var(--wa)/0.3));
}

.btn-error {
  --tw-text-opacity: 1;
  color: var(--fallback-erc,oklch(var(--erc)/var(--tw-text-opacity, 1)));
  outline-color: var(--fallback-er,oklch(var(--er)/0.3));
}

.btn.glass {
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  outline-color: currentColor;
}

.btn.glass:hover {
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.btn.glass.btn-active {
  --glass-opacity: 25%;
  --glass-border-opacity: 15%;
}

.btn-soft {
  border-style: none;
  background-color: var(--fallback-n,oklch(var(--n)/0.2));
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.btn-soft:hover {
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.btn-soft.btn-active {
  background-color: var(--fallback-n,oklch(var(--n)/0.3));
}

.btn-soft:focus-visible {
  background-color: var(--fallback-n,oklch(var(--n)/0.3));
  outline-color: var(--fallback-n,oklch(var(--n)/0.5));
}

.btn-soft.btn-primary {
  background-color: var(--fallback-p,oklch(var(--p)/0.2));
  --tw-text-opacity: 1;
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
  outline-color: var(--fallback-p,oklch(var(--p)/0.5));
}

.btn-soft.btn-primary.btn-active {
  background-color: var(--fallback-p,oklch(var(--p)/0.3));
}

.btn-soft.btn-primary:focus-visible {
  background-color: var(--fallback-p,oklch(var(--p)/0.3));
  outline-color: var(--fallback-p,oklch(var(--p)/0.5));
}

.btn-soft.btn-secondary {
  background-color: var(--fallback-s,oklch(var(--s)/0.2));
  --tw-text-opacity: 1;
  color: var(--fallback-s,oklch(var(--s)/var(--tw-text-opacity, 1)));
  outline-color: var(--fallback-s,oklch(var(--s)/0.5));
}

.btn-soft.btn-secondary.btn-active {
  background-color: var(--fallback-s,oklch(var(--s)/0.3));
}

.btn-soft.btn-secondary:focus-visible {
  background-color: var(--fallback-s,oklch(var(--s)/0.3));
  outline-color: var(--fallback-s,oklch(var(--s)/0.5));
}

.btn-soft.btn-accent {
  background-color: var(--fallback-a,oklch(var(--a)/0.2));
  --tw-text-opacity: 1;
  color: var(--fallback-a,oklch(var(--a)/var(--tw-text-opacity, 1)));
  outline-color: var(--fallback-a,oklch(var(--a)/0.5));
}

.btn-soft.btn-accent.btn-active {
  background-color: var(--fallback-a,oklch(var(--a)/0.3));
}

.btn-soft.btn-accent:focus-visible {
  background-color: var(--fallback-a,oklch(var(--a)/0.3));
  outline-color: var(--fallback-a,oklch(var(--a)/0.5));
}

.btn-soft.btn-success {
  background-color: var(--fallback-su,oklch(var(--su)/0.2));
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
  outline-color: var(--fallback-su,oklch(var(--su)/0.5));
}

.btn-soft.btn-success.btn-active {
  background-color: var(--fallback-su,oklch(var(--su)/0.3));
}

.btn-soft.btn-success:focus-visible {
  background-color: var(--fallback-su,oklch(var(--su)/0.3));
  outline-color: var(--fallback-su,oklch(var(--su)/0.5));
}

.btn-soft.btn-info {
  background-color: var(--fallback-in,oklch(var(--in)/0.2));
  --tw-text-opacity: 1;
  color: var(--fallback-in,oklch(var(--in)/var(--tw-text-opacity, 1)));
  outline-color: var(--fallback-in,oklch(var(--in)/0.5));
}

.btn-soft.btn-info.btn-active {
  background-color: var(--fallback-in,oklch(var(--in)/0.3));
}

.btn-soft.btn-info:focus-visible {
  background-color: var(--fallback-in,oklch(var(--in)/0.3));
  outline-color: var(--fallback-in,oklch(var(--in)/0.5));
}

.btn-soft.btn-warning {
  background-color: var(--fallback-wa,oklch(var(--wa)/0.2));
  --tw-text-opacity: 1;
  color: var(--fallback-wa,oklch(var(--wa)/var(--tw-text-opacity, 1)));
  outline-color: var(--fallback-wa,oklch(var(--wa)/0.5));
}

.btn-soft.btn-warning.btn-active {
  background-color: var(--fallback-wa,oklch(var(--wa)/0.3));
}

.btn-soft.btn-warning:focus-visible {
  background-color: var(--fallback-wa,oklch(var(--wa)/0.3));
  outline-color: var(--fallback-wa,oklch(var(--wa)/0.5));
}

.btn-soft.btn-error {
  background-color: var(--fallback-er,oklch(var(--er)/0.2));
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
  outline-color: var(--fallback-er,oklch(var(--er)/0.5));
}

.btn-soft.btn-error.btn-active {
  background-color: var(--fallback-er,oklch(var(--er)/0.3));
}

.btn-soft.btn-error:focus-visible {
  background-color: var(--fallback-er,oklch(var(--er)/0.3));
  outline-color: var(--fallback-er,oklch(var(--er)/0.5));
}

.btn-outline {
  border-style: solid;
  border-color: currentColor;
  background-color: transparent;
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.btn-outline:hover {
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.btn-outline.btn-active {
  --tw-border-opacity: 1;
  border-color: var(--fallback-bc,oklch(var(--bc)/var(--tw-border-opacity, 1)));
  background-color: var(--fallback-bc,oklch(var(--bc)/0.1));
}

.btn-outline:focus-visible {
  background-color: var(--fallback-bc,oklch(var(--bc)/0.1));
  outline-width: 1px;
  outline-color: currentColor;
}

.btn-outline.btn-primary {
  --tw-text-opacity: 1;
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
}

.btn-outline.btn-primary.btn-active {
  --tw-border-opacity: 1;
  border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity, 1)));
  background-color: var(--fallback-p,oklch(var(--p)/0.1));
}

.btn-outline.btn-primary:focus-visible {
  background-color: var(--fallback-p,oklch(var(--p)/0.1));
}

.btn-outline.btn-secondary {
  --tw-text-opacity: 1;
  color: var(--fallback-s,oklch(var(--s)/var(--tw-text-opacity, 1)));
}

.btn-outline.btn-secondary.btn-active {
  --tw-border-opacity: 1;
  border-color: var(--fallback-s,oklch(var(--s)/var(--tw-border-opacity, 1)));
  background-color: var(--fallback-s,oklch(var(--s)/0.1));
}

.btn-outline.btn-secondary:focus-visible {
  background-color: var(--fallback-s,oklch(var(--s)/0.1));
}

.btn-outline.btn-accent {
  --tw-text-opacity: 1;
  color: var(--fallback-a,oklch(var(--a)/var(--tw-text-opacity, 1)));
}

.btn-outline.btn-accent.btn-active {
  --tw-border-opacity: 1;
  border-color: var(--fallback-a,oklch(var(--a)/var(--tw-border-opacity, 1)));
  background-color: var(--fallback-a,oklch(var(--a)/0.1));
}

.btn-outline.btn-accent:focus-visible {
  background-color: var(--fallback-a,oklch(var(--a)/0.1));
}

.btn-outline.btn-success {
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
}

.btn-outline.btn-success.btn-active {
  --tw-border-opacity: 1;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1)));
  background-color: var(--fallback-su,oklch(var(--su)/0.1));
}

.btn-outline.btn-success:focus-visible {
  background-color: var(--fallback-su,oklch(var(--su)/0.1));
}

.btn-outline.btn-info {
  --tw-text-opacity: 1;
  color: var(--fallback-in,oklch(var(--in)/var(--tw-text-opacity, 1)));
}

.btn-outline.btn-info.btn-active {
  --tw-border-opacity: 1;
  border-color: var(--fallback-in,oklch(var(--in)/var(--tw-border-opacity, 1)));
  background-color: var(--fallback-in,oklch(var(--in)/0.1));
}

.btn-outline.btn-info:focus-visible {
  background-color: var(--fallback-in,oklch(var(--in)/0.1));
}

.btn-outline.btn-warning {
  --tw-text-opacity: 1;
  color: var(--fallback-wa,oklch(var(--wa)/var(--tw-text-opacity, 1)));
}

.btn-outline.btn-warning.btn-active {
  --tw-border-opacity: 1;
  border-color: var(--fallback-wa,oklch(var(--wa)/var(--tw-border-opacity, 1)));
  background-color: var(--fallback-wa,oklch(var(--wa)/0.1));
}

.btn-outline.btn-warning:focus-visible {
  background-color: var(--fallback-wa,oklch(var(--wa)/0.1));
}

.btn-outline.btn-error {
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}

.btn-outline.btn-error.btn-active {
  --tw-border-opacity: 1;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1)));
  background-color: var(--fallback-er,oklch(var(--er)/0.1));
}

.btn-outline.btn-error:focus-visible {
  background-color: var(--fallback-er,oklch(var(--er)/0.1));
}

.btn-text {
  border-color: transparent;
  background-color: transparent;
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.btn-text:hover {
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.btn-text.btn-active {
  border-color: transparent;
  background-color: var(--fallback-bc,oklch(var(--bc)/0.1));
}

.btn-text:focus-visible {
  border-color: transparent;
  background-color: var(--fallback-bc,oklch(var(--bc)/0.1));
  outline-color: currentColor;
}

.btn-text.btn-primary {
  --tw-text-opacity: 1;
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
}

.btn-text.btn-primary.btn-active {
  background-color: var(--fallback-p,oklch(var(--p)/0.1));
}

.btn-text.btn-primary:focus-visible {
  background-color: var(--fallback-p,oklch(var(--p)/0.1));
}

.btn-text.btn-secondary {
  --tw-text-opacity: 1;
  color: var(--fallback-s,oklch(var(--s)/var(--tw-text-opacity, 1)));
}

.btn-text.btn-secondary.btn-active {
  background-color: var(--fallback-s,oklch(var(--s)/0.1));
}

.btn-text.btn-secondary:focus-visible {
  background-color: var(--fallback-s,oklch(var(--s)/0.1));
}

.btn-text.btn-accent {
  --tw-text-opacity: 1;
  color: var(--fallback-a,oklch(var(--a)/var(--tw-text-opacity, 1)));
}

.btn-text.btn-accent.btn-active {
  background-color: var(--fallback-a,oklch(var(--a)/0.1));
}

.btn-text.btn-accent:focus-visible {
  background-color: var(--fallback-a,oklch(var(--a)/0.1));
}

.btn-text.btn-success {
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
}

.btn-text.btn-success.btn-active {
  background-color: var(--fallback-su,oklch(var(--su)/0.1));
}

.btn-text.btn-success:focus-visible {
  background-color: var(--fallback-su,oklch(var(--su)/0.1));
}

.btn-text.btn-info {
  --tw-text-opacity: 1;
  color: var(--fallback-in,oklch(var(--in)/var(--tw-text-opacity, 1)));
}

.btn-text.btn-info.btn-active {
  background-color: var(--fallback-in,oklch(var(--in)/0.1));
}

.btn-text.btn-info:focus-visible {
  background-color: var(--fallback-in,oklch(var(--in)/0.1));
}

.btn-text.btn-warning {
  --tw-text-opacity: 1;
  color: var(--fallback-wa,oklch(var(--wa)/var(--tw-text-opacity, 1)));
}

.btn-text.btn-warning.btn-active {
  background-color: var(--fallback-wa,oklch(var(--wa)/0.1));
}

.btn-text.btn-warning:focus-visible {
  background-color: var(--fallback-wa,oklch(var(--wa)/0.1));
}

.btn-text.btn-error {
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}

.btn-text.btn-error.btn-active {
  background-color: var(--fallback-er,oklch(var(--er)/0.1));
}

.btn-text.btn-error:focus-visible {
  background-color: var(--fallback-er,oklch(var(--er)/0.1));
}

.btn-gradient {
  border-width: 2px;
  --tw-border-opacity: 1;
  border-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-border-opacity, 1)));
  background-color: transparent;
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
  --tw-shadow: 0 2px 4px 0 var(--fallback-bs,oklch(var(--bs)/0.26));
  --tw-shadow-colored: 0 2px 4px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  outline-color: var(--fallback-b2,oklch(var(--b2)/0.3));
  transition: all 0.4s ease-in-out;
  background-size: 200% auto;
  --dark-shade: color-mix(in oklab, oklch(var(--light-shade, var(--b2)) / var(--tw-bg-opacity, 1)) 80%, black);
  background-image: linear-gradient(
      102deg,
      oklch(var(--light-shade, var(--b2)) / var(--tw-bg-opacity)) 0%,
      var(--dark-shade) 51%,
      oklch(var(--light-shade, var(--b2)) / var(--tw-bg-opacity)) 100%
    );
}

.btn-gradient:focus-visible {
  outline-style: solid;
  outline-width: 2px;
  outline-offset: 0px;
  border-color: transparent;
  background-image: linear-gradient(
        102deg,
        oklch(var(--light-shade, var(--b2)) / var(--tw-bg-opacity)) 0%,
        var(--dark-shade) 51%,
        oklch(var(--light-shade, var(--b2)) / var(--tw-bg-opacity)) 100%
      );
}

.btn-gradient.btn-primary {
  --tw-border-opacity: 1;
  border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity, 1)));
  --tw-text-opacity: 1;
  color: var(--fallback-pc,oklch(var(--pc)/var(--tw-text-opacity, 1)));
  --tw-shadow-color: var(--fallback-p,oklch(var(--p)/0.26));
  --tw-shadow: var(--tw-shadow-colored);
}

.btn-gradient.btn-primary:hover {
  --tw-shadow-color: var(--fallback-p,oklch(var(--p)/0.2));
  --tw-shadow: var(--tw-shadow-colored);
}

.btn-gradient.btn-primary:focus-visible {
  outline-color: var(--fallback-p,oklch(var(--p)/0.3));
  border-color: transparent;
}

.btn-gradient.btn-secondary {
  --tw-border-opacity: 1;
  border-color: var(--fallback-s,oklch(var(--s)/var(--tw-border-opacity, 1)));
  --tw-text-opacity: 1;
  color: var(--fallback-sc,oklch(var(--sc)/var(--tw-text-opacity, 1)));
  --tw-shadow-color: var(--fallback-s,oklch(var(--s)/0.26));
  --tw-shadow: var(--tw-shadow-colored);
}

.btn-gradient.btn-secondary:hover {
  --tw-shadow-color: var(--fallback-s,oklch(var(--s)/0.2));
  --tw-shadow: var(--tw-shadow-colored);
}

.btn-gradient.btn-secondary:focus-visible {
  outline-color: var(--fallback-s,oklch(var(--s)/0.3));
  border-color: transparent;
}

.btn-gradient.btn-accent {
  --tw-border-opacity: 1;
  border-color: var(--fallback-a,oklch(var(--a)/var(--tw-border-opacity, 1)));
  --tw-text-opacity: 1;
  color: var(--fallback-ac,oklch(var(--ac)/var(--tw-text-opacity, 1)));
  --tw-shadow-color: var(--fallback-a,oklch(var(--a)/0.26));
  --tw-shadow: var(--tw-shadow-colored);
}

.btn-gradient.btn-accent:hover {
  --tw-shadow-color: var(--fallback-a,oklch(var(--a)/0.2));
  --tw-shadow: var(--tw-shadow-colored);
}

.btn-gradient.btn-accent:focus-visible {
  outline-color: var(--fallback-a,oklch(var(--a)/0.3));
  border-color: transparent;
}

.btn-gradient.btn-info {
  --tw-border-opacity: 1;
  border-color: var(--fallback-in,oklch(var(--in)/var(--tw-border-opacity, 1)));
  --tw-text-opacity: 1;
  color: var(--fallback-inc,oklch(var(--inc)/var(--tw-text-opacity, 1)));
  --tw-shadow-color: var(--fallback-in,oklch(var(--in)/0.26));
  --tw-shadow: var(--tw-shadow-colored);
}

.btn-gradient.btn-info:hover {
  --tw-shadow-color: var(--fallback-in,oklch(var(--in)/0.2));
  --tw-shadow: var(--tw-shadow-colored);
}

.btn-gradient.btn-info:focus-visible {
  outline-color: var(--fallback-in,oklch(var(--in)/0.3));
  border-color: transparent;
}

.btn-gradient.btn-success {
  --tw-border-opacity: 1;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1)));
  --tw-text-opacity: 1;
  color: var(--fallback-suc,oklch(var(--suc)/var(--tw-text-opacity, 1)));
  --tw-shadow-color: var(--fallback-su,oklch(var(--su)/0.26));
  --tw-shadow: var(--tw-shadow-colored);
}

.btn-gradient.btn-success:hover {
  --tw-shadow-color: var(--fallback-su,oklch(var(--su)/0.2));
  --tw-shadow: var(--tw-shadow-colored);
}

.btn-gradient.btn-success:focus-visible {
  outline-color: var(--fallback-su,oklch(var(--su)/0.3));
  border-color: transparent;
}

.btn-gradient.btn-warning {
  --tw-border-opacity: 1;
  border-color: var(--fallback-wa,oklch(var(--wa)/var(--tw-border-opacity, 1)));
  --tw-text-opacity: 1;
  color: var(--fallback-wac,oklch(var(--wac)/var(--tw-text-opacity, 1)));
  --tw-shadow-color: var(--fallback-wa,oklch(var(--wa)/0.26));
  --tw-shadow: var(--tw-shadow-colored);
}

.btn-gradient.btn-warning:hover {
  --tw-shadow-color: var(--fallback-wa,oklch(var(--wa)/0.2));
  --tw-shadow: var(--tw-shadow-colored);
}

.btn-gradient.btn-warning:focus-visible {
  outline-color: var(--fallback-wa,oklch(var(--wa)/0.3));
  border-color: transparent;
}

.btn-gradient.btn-error {
  --tw-border-opacity: 1;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1)));
  --tw-text-opacity: 1;
  color: var(--fallback-erc,oklch(var(--erc)/var(--tw-text-opacity, 1)));
  --tw-shadow-color: var(--fallback-er,oklch(var(--er)/0.26));
  --tw-shadow: var(--tw-shadow-colored);
}

.btn-gradient.btn-error:hover {
  --tw-shadow-color: var(--fallback-er,oklch(var(--er)/0.2));
  --tw-shadow: var(--tw-shadow-colored);
}

.btn-gradient.btn-error:focus-visible {
  outline-color: var(--fallback-er,oklch(var(--er)/0.3));
  border-color: transparent;
}

.btn.btn-disabled,
  .btn.disabled,
  .btn[disabled],
  .btn:disabled {
  pointer-events: none;
  opacity: 0.5;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.btn:is(input[type="checkbox"]:checked),
.btn:is(input[type="radio"]:checked) {
  --tw-border-opacity: 1;
  border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity, 1)));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity, 1)));
  --tw-text-opacity: 1;
  color: var(--fallback-pc,oklch(var(--pc)/var(--tw-text-opacity, 1)));
}

.btn:is(input[type="checkbox"]:checked):focus-visible, .btn:is(input[type="radio"]:checked):focus-visible {
  outline-color: var(--fallback-p,oklch(var(--p)/1));
}

@keyframes button-pop {
  0% {
    transform: scale(var(--btn-focus-scale, 0.98));
  }

  40% {
    transform: scale(1.02);
  }

  100% {
    transform: scale(1);
  }
}

.card-header {
  border-top-left-radius: var(--rounded-box, 0.5rem);
  border-top-right-radius: var(--rounded-box, 0.5rem);
  padding: var(--padding-card, 1.5rem);
}

.card-footer {
  border-bottom-right-radius: var(--rounded-box, 0.5rem);
  border-bottom-left-radius: var(--rounded-box, 0.5rem);
  padding: var(--padding-card, 1.5rem);
}

.card :where(figure:first-child) {
  overflow: hidden;
  border-start-start-radius: inherit;
  border-start-end-radius: inherit;
  border-end-start-radius: unset;
  border-end-end-radius: unset;
}

.card :where(figure:last-child) {
  overflow: hidden;
  border-start-start-radius: unset;
  border-start-end-radius: unset;
  border-end-start-radius: inherit;
  border-end-end-radius: inherit;
}

.card.image-full :where(figure) {
  overflow: hidden;
  border-radius: inherit;
}

.card .alert {
  border-radius: 0px;
}

.card .alert:first-child {
  border-top-left-radius: var(--rounded-box, 0.5rem);
  border-top-right-radius: var(--rounded-box, 0.5rem);
}

.card .alert:last-child {
  border-bottom-right-radius: var(--rounded-box, 0.5rem);
  border-bottom-left-radius: var(--rounded-box, 0.5rem);
}

:where(.card-header) + .card-body {
  padding-top: 0;
}

:where(.card-body) + .card-footer {
  padding-top: 0;
}

.carousel-body,
.carousel-slide {
  transition-property: transform;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 700ms;
}

.carousel-prev:hover,
.carousel-next:hover {
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
}

.carousel-prev.disabled,
.carousel-next.disabled {
  pointer-events: none;
  color: var(--fallback-bc,oklch(var(--bc)/0.3));
}

.checkbox:focus {
  box-shadow: none;
}

.checkbox:focus-visible {
  outline-style: solid;
  outline-width: 2px;
  outline-offset: 0px;
  outline-color: var(--fallback-n,oklch(var(--n)/0.3));
}

.checkbox:checked,
  .checkbox[checked="true"],
  .checkbox[aria-checked="true"] {
  background-repeat: no-repeat;
  --tw-shadow: 0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22));
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  border-color: var(--chkbg);
  animation: checkmark var(--animation-input, 0.2s) ease-out;
  background-color: var(--chkbg);
  background-image: linear-gradient(-45deg, transparent 66%, var(--chkbg) 66.99%),
      linear-gradient(45deg, transparent 77%, var(--chkbg) 77.99%),
      linear-gradient(-45deg, var(--chkbg) 41%, transparent 41.99%),
      linear-gradient(45deg, var(--chkbg) 34%, var(--chkfg) 34.99%, var(--chkfg) 40%, transparent 40.99%),
      linear-gradient(-45deg, var(--chkfg) 47%, var(--chkbg) 47.99%);
}

.checkbox:indeterminate {
  background-repeat: no-repeat;
  --tw-shadow: 0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22));
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  background-color: var(--chkbg);
  border-color: var(--chkbg);
  animation: checkmark var(--animation-input, 0.2s) ease-out;
  background-image: linear-gradient(90deg, transparent 80%, var(--chkbg) 80%),
      linear-gradient(-90deg, transparent 80%, var(--chkbg) 80%),
      linear-gradient(0deg, var(--chkbg) 45%, var(--chkfg) 45%, var(--chkfg) 55%, var(--chkbg) 55%);
}

.checkbox-primary {
  --chkbg: var(--fallback-p,oklch(var(--p)/1));
  --chkfg: var(--fallback-pc,oklch(var(--pc)/1));
}

.checkbox-primary:checked:focus-visible, .checkbox-primary[checked="true"]:focus-visible, .checkbox-primary[aria-checked="true"]:focus-visible {
  outline-color: var(--fallback-p,oklch(var(--p)/0.3));
}

.checkbox-secondary {
  --chkbg: var(--fallback-s,oklch(var(--s)/1));
  --chkfg: var(--fallback-sc,oklch(var(--sc)/1));
}

.checkbox-secondary:checked:focus-visible, .checkbox-secondary[checked="true"]:focus-visible, .checkbox-secondary[aria-checked="true"]:focus-visible {
  outline-color: var(--fallback-s,oklch(var(--s)/0.3));
}

.checkbox-accent {
  --chkbg: var(--fallback-a,oklch(var(--a)/1));
  --chkfg: var(--fallback-ac,oklch(var(--ac)/1));
}

.checkbox-accent:checked:focus-visible, .checkbox-accent[checked="true"]:focus-visible, .checkbox-accent[aria-checked="true"]:focus-visible {
  outline-color: var(--fallback-a,oklch(var(--a)/0.3));
}

.checkbox-info {
  --chkbg: var(--fallback-in,oklch(var(--in)/1));
  --chkfg: var(--fallback-inc,oklch(var(--inc)/1));
}

.checkbox-info:checked:focus-visible, .checkbox-info[checked="true"]:focus-visible, .checkbox-info[aria-checked="true"]:focus-visible {
  outline-color: var(--fallback-in,oklch(var(--in)/0.3));
}

.checkbox-success {
  --chkbg: var(--fallback-su,oklch(var(--su)/1));
  --chkfg: var(--fallback-suc,oklch(var(--suc)/1));
}

.checkbox-success:checked:focus-visible, .checkbox-success[checked="true"]:focus-visible, .checkbox-success[aria-checked="true"]:focus-visible {
  outline-color: var(--fallback-su,oklch(var(--su)/0.3));
}

.checkbox-warning {
  --chkbg: var(--fallback-wa,oklch(var(--wa)/1));
  --chkfg: var(--fallback-wac,oklch(var(--wac)/1));
}

.checkbox-warning:checked:focus-visible, .checkbox-warning[checked="true"]:focus-visible, .checkbox-warning[aria-checked="true"]:focus-visible {
  outline-color: var(--fallback-wa,oklch(var(--wa)/0.3));
}

.checkbox-error {
  --chkbg: var(--fallback-er,oklch(var(--er)/1));
  --chkfg: var(--fallback-erc,oklch(var(--erc)/1));
}

.checkbox-error:checked:focus-visible, .checkbox-error[checked="true"]:focus-visible, .checkbox-error[aria-checked="true"]:focus-visible {
  outline-color: var(--fallback-er,oklch(var(--er)/0.3));
}

.checkbox.disabled,
  .checkbox:disabled,
  .checkbox[disabled] {
  pointer-events: none;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
  opacity: 0.4;
}

.checkbox.disabled:not(checked), .checkbox:disabled:not(checked), .checkbox[disabled]:not(checked) {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-n,oklch(var(--n)/var(--tw-bg-opacity, 1)));
}

@keyframes checkmark {
  0% {
    background-position-y: 5px;
  }

  50% {
    background-position-y: -2px;
  }

  100% {
    background-position-y: 0;
  }
}

.checkbox-mark {
  display: none;
}

.checkbox.is-valid,
.validate .checkbox:valid {
  --chkbg: var(--fallback-su,oklch(var(--su)/1));
  --chkfg: var(--fallback-suc,oklch(var(--suc)/1));
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1))) !important;
}


.\!validate .checkbox:valid {
  --chkbg: var(--fallback-su,oklch(var(--su)/1)) !important;
  --chkfg: var(--fallback-suc,oklch(var(--suc)/1)) !important;
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1))) !important;
}

.checkbox.is-valid:focus-visible, .validate .checkbox:valid:focus-visible {
  outline-color: var(--fallback-su,oklch(var(--su)/0.3)) !important;
}

 .\!validate .checkbox:valid:focus-visible {
  outline-color: var(--fallback-su,oklch(var(--su)/0.3)) !important;
}

.checkbox.is-invalid,
.validate .checkbox:invalid {
  --chkbg: var(--fallback-er,oklch(var(--er)/1));
  --chkfg: var(--fallback-erc,oklch(var(--erc)/1));
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1))) !important;
}


.\!validate .checkbox:invalid {
  --chkbg: var(--fallback-er,oklch(var(--er)/1)) !important;
  --chkfg: var(--fallback-erc,oklch(var(--erc)/1)) !important;
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1))) !important;
}

.checkbox.is-invalid:focus-visible, .validate .checkbox:invalid:focus-visible {
  outline-color: var(--fallback-er,oklch(var(--er)/0.3)) !important;
}

 .\!validate .checkbox:invalid:focus-visible {
  outline-color: var(--fallback-er,oklch(var(--er)/0.3)) !important;
}

.\!validate .label:has(+ * .checkbox:valid) > *, 
.\!validate .label-text:has(+ * .checkbox:valid), 
.\!validate .label-text:has(~ .checkbox:valid), 
.\!validate .label:has(~ .checkbox:valid) > *, 

.\!validate .checkbox:valid ~ .label, 
.\!validate .checkbox:valid ~ .label-text, 
.\!validate .checkbox:valid ~ .label .label-text,  
.\!validate *:has(.checkbox:valid) ~ .label, 
.\!validate *:has(.checkbox:valid) ~ .label-text, 
.\!validate *:has(.checkbox:valid) ~ .label .label-text {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1))) !important;
}

.validate .label:has(+ * .checkbox:valid) > *, 
.validate .label-text:has(+ * .checkbox:valid), 
.validate .label-text:has(~ .checkbox:valid), 
.validate .label:has(~ .checkbox:valid) > *, 

.validate .checkbox:valid ~ .label, 
.validate .checkbox:valid ~ .label-text, 
.validate .checkbox:valid ~ .label .label-text,  
.validate *:has(.checkbox:valid) ~ .label, 
.validate *:has(.checkbox:valid) ~ .label-text, 
.validate *:has(.checkbox:valid) ~ .label .label-text {
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
}

.\!validate .label:has(+ * .checkbox:valid) > *, 
.\!validate .label-text:has(+ * .checkbox:valid), 
.\!validate .label-text:has(~ .checkbox:valid), 
.\!validate .label:has(~ .checkbox:valid) > *, 

.\!validate .checkbox:valid ~ .label, 
.\!validate .checkbox:valid ~ .label-text, 
.\!validate .checkbox:valid ~ .label .label-text,  
.\!validate *:has(.checkbox:valid) ~ .label, 
.\!validate *:has(.checkbox:valid) ~ .label-text, 
.\!validate *:has(.checkbox:valid) ~ .label .label-text {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1))) !important;
}

.\!validate .label:has(+ * .checkbox:invalid) > *, 
.\!validate .label-text:has(+ * .checkbox:invalid), 
.\!validate .label-text:has(~ .checkbox:invalid), 
.\!validate .label:has(~ .checkbox:invalid) > *, 

.\!validate .checkbox:invalid ~ .label, 
.\!validate .checkbox:invalid ~ .label-text, 
.\!validate .checkbox:invalid ~ .label .label-text,  
.\!validate *:has(.checkbox:invalid) ~ .label, 
.\!validate *:has(.checkbox:invalid) ~ .label-text, 
.\!validate *:has(.checkbox:invalid) ~ .label .label-text {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1))) !important;
}

.validate .label:has(+ * .checkbox:invalid) > *, 
.validate .label-text:has(+ * .checkbox:invalid), 
.validate .label-text:has(~ .checkbox:invalid), 
.validate .label:has(~ .checkbox:invalid) > *, 

.validate .checkbox:invalid ~ .label, 
.validate .checkbox:invalid ~ .label-text, 
.validate .checkbox:invalid ~ .label .label-text,  
.validate *:has(.checkbox:invalid) ~ .label, 
.validate *:has(.checkbox:invalid) ~ .label-text, 
.validate *:has(.checkbox:invalid) ~ .label .label-text {
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}

.\!validate .label:has(+ * .checkbox:invalid) > *, 
.\!validate .label-text:has(+ * .checkbox:invalid), 
.\!validate .label-text:has(~ .checkbox:invalid), 
.\!validate .label:has(~ .checkbox:invalid) > *, 

.\!validate .checkbox:invalid ~ .label, 
.\!validate .checkbox:invalid ~ .label-text, 
.\!validate .checkbox:invalid ~ .label .label-text,  
.\!validate *:has(.checkbox:invalid) ~ .label, 
.\!validate *:has(.checkbox:invalid) ~ .label-text, 
.\!validate *:has(.checkbox:invalid) ~ .label .label-text {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1))) !important;
}

.\!validate *:has(> .checkbox:valid) ~ .success-message,
.\!validate *:has(> .checkbox:valid) > * > .success-message,

.\!validate .checkbox:valid ~ .success-message,
.\!validate .checkbox:valid + * > .success-message {
  display: block !important;
}

.validate *:has(> .checkbox:valid) ~ .success-message,
.validate *:has(> .checkbox:valid) > * > .success-message,

.validate .checkbox:valid ~ .success-message,
.validate .checkbox:valid + * > .success-message {
  display: block;
}

.\!validate *:has(> .checkbox:valid) ~ .success-message,
.\!validate *:has(> .checkbox:valid) > * > .success-message,

.\!validate .checkbox:valid ~ .success-message,
.\!validate .checkbox:valid + * > .success-message {
  display: block !important;
}

.\!validate *:has(> .checkbox:invalid) ~ .error-message,
.\!validate *:has(> .checkbox:invalid) > * > .error-message,

.\!validate .checkbox:invalid ~ .error-message,
.\!validate .checkbox:invalid + * > .error-message {
  display: block !important;
}

.validate *:has(> .checkbox:invalid) ~ .error-message,
.validate *:has(> .checkbox:invalid) > * > .error-message,

.validate .checkbox:invalid ~ .error-message,
.validate .checkbox:invalid + * > .error-message {
  display: block;
}

.\!validate *:has(> .checkbox:invalid) ~ .error-message,
.\!validate *:has(> .checkbox:invalid) > * > .error-message,

.\!validate .checkbox:invalid ~ .error-message,
.\!validate .checkbox:invalid + * > .error-message {
  display: block !important;
}

.nested-collapse-wrapper .collapse.open.nested-collapse,
.nested-collapse-wrapper .collapse-toggle.open.nested-collapse {
  background-color: var(--fallback-bc,oklch(var(--bc)/0.1));
}

.nested-collapse-wrapper .collapse.open > .collapse-icon,
.nested-collapse-wrapper .collapse-toggle.open > .collapse-icon {
  --tw-rotate: 180deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

[dir="rtl"] .diff-item-2 {
  border-left-width: 2px;
  border-right-width: 0px;
  --tw-border-opacity: 1;
  border-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-border-opacity, 1)));
}

.divider:not(:empty) {
  gap: 1rem;
}

.drawer-header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 1.5rem;
}

.drawer-body::-webkit-scrollbar-thumb {
  background-color: var(--fallback-s,oklch(var(--s)/0.5));
}

.drawer-body::-webkit-scrollbar-thumb:hover {
  background-color: var(--fallback-s,oklch(var(--s)/0.8));
}

.drawer-body::-webkit-scrollbar-track {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity, 1)));
}

.dropdown-menu > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.125rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.125rem * var(--tw-space-y-reverse));
}

.dropdown-item:hover,
  .dropdown-item:focus,
  .dropdown-item:focus-within,
  .dropdown-item:focus-visible {
  background-color: var(--fallback-n,oklch(var(--n)/0.1));
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.dropdown-item.active,
  .dropdown-item:active {
  background-color: var(--fallback-p,oklch(var(--p)/0.1));
  --tw-text-opacity: 1;
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
}

.dropdown-item.disabled,
  .dropdown-item:disabled,
  .dropdown-item[disabled] {
  pointer-events: none;
  background-color: var(--fallback-n,oklch(var(--n)/0.05));
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

.dropdown-item > .label {
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
  font-size: 1rem;
  line-height: 1.375rem;
  color: var(--fallback-bc,oklch(var(--bc)/0.8));
}

.dropdown-item > .label-text {
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
}

.footer-title {
  margin-bottom: 0.25rem;
  font-size: 1rem;
  line-height: 1.375rem;
  font-weight: 500;
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
}

.label {
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  padding: 0.25rem;
  color: var(--fallback-bc,oklch(var(--bc)/0.8));
}

.label-text-alt {
  font-size: 0.75rem;
  line-height: 1rem;
}

.label-text {
  display: block;
  cursor: pointer;
  font-size: 0.875rem;
  line-height: 1.25rem;
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
}

input {
  background-color: transparent;
}

input:focus {
  outline-width: 0px;
  outline-color: transparent;
}

input:focus-visible {
  outline: unset;
}

.\!input::-moz-placeholder {
  color: var(--fallback-bc,oklch(var(--bc)/0.5)) !important;
}

.\!input::placeholder {
  color: var(--fallback-bc,oklch(var(--bc)/0.5)) !important;
}

.input::-moz-placeholder {
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

.input::placeholder {
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

.\!input:hover {
  border-color: var(--fallback-bc,oklch(var(--bc)/0.6)) !important;
}

.input:hover {
  border-color: var(--fallback-bc,oklch(var(--bc)/0.6));
}

.\!input[type="file"]:disabled {
  background-color: var(--fallback-n,oklch(var(--n)/0.1)) !important;
}

.input[type="file"]:disabled {
  background-color: var(--fallback-n,oklch(var(--n)/0.1));
}

.\!input:focus,
  .\!input:focus-within {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity, 1))) !important;
  --tw-shadow: 0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22)) !important;
  --tw-shadow: var(--tw-shadow-colored) !important;
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color) !important;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow) !important;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000) !important;
  --tw-shadow-color: var(--fallback-p,oklch(var(--p)/0.22)) !important;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color) !important;
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color) !important;
  --tw-ring-opacity: 1 !important;
  --tw-ring-color: var(--fallback-p,oklch(var(--p)/var(--tw-ring-opacity, 1))) !important;
}

.input:focus,
  .input:focus-within {
  --tw-border-opacity: 1;
  border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity, 1)));
  --tw-shadow: 0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22));
  --tw-shadow: var(--tw-shadow-colored);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-shadow-color: var(--fallback-p,oklch(var(--p)/0.22));
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  --tw-ring-opacity: 1;
  --tw-ring-color: var(--fallback-p,oklch(var(--p)/var(--tw-ring-opacity, 1)));
}

.\!input:focus,
  .\!input:focus-within {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity, 1))) !important;
  --tw-shadow: 0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22)) !important;
  --tw-shadow: var(--tw-shadow-colored) !important;
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color) !important;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow) !important;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000) !important;
  --tw-shadow-color: var(--fallback-p,oklch(var(--p)/0.22)) !important;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color) !important;
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color) !important;
  --tw-ring-opacity: 1 !important;
  --tw-ring-color: var(--fallback-p,oklch(var(--p)/var(--tw-ring-opacity, 1))) !important;
}

.\!input:-webkit-autofill,
  .\!input:-webkit-autofill:focus {
  --tw-bg-opacity: 1 !important;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1))) !important;
  --tw-text-opacity: 1 !important;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1))) !important;
}

.input:-webkit-autofill,
  .input:-webkit-autofill:focus {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
}

.\!input:-webkit-autofill,
  .\!input:-webkit-autofill:focus {
  --tw-bg-opacity: 1 !important;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1))) !important;
  --tw-text-opacity: 1 !important;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1))) !important;
}

.input-floating::-moz-placeholder {
  color: transparent;
}

.input-floating::placeholder {
  color: transparent;
}

.input-floating:focus::-moz-placeholder {
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

.input-floating:focus::placeholder {
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

.input-filled::-moz-placeholder {
  color: transparent;
}

.input-filled::placeholder {
  color: transparent;
}

.input-filled:hover {
  border-width: 0px;
  border-bottom-width: 1px;
  --tw-border-opacity: 1;
  border-color: var(--fallback-bc,oklch(var(--bc)/var(--tw-border-opacity, 1)));
}

.input-filled:focus-visible {
  outline-width: 0px;
}

.input-filled:focus,
    .input-filled:focus-within {
  --tw-border-opacity: 1;
  border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity, 1)));
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
}

.input-filled:focus::-moz-placeholder, .input-filled:focus-within::-moz-placeholder {
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

.input-filled:focus::placeholder,
    .input-filled:focus-within::placeholder {
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

.input-filled:focus ~ .input-filled-focused,
    .input-filled:focus-within ~ .input-filled-focused {
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity, 1)));
}

.\!input[list]::-webkit-calendar-picker-indicator {
  line-height: 1em !important;
}

.input[list]::-webkit-calendar-picker-indicator {
  line-height: 1em;
}

.\!input.disabled,
  .\!input:disabled,
  .\!input[disabled] {
  pointer-events: none !important;
  border-width: 0px !important;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.1)) !important;
  background-color: var(--fallback-n,oklch(var(--n)/0.1)) !important;
  color: var(--fallback-bc,oklch(var(--bc)/0.5)) !important;
}

.input.disabled,
  .input:disabled,
  .input[disabled] {
  pointer-events: none;
  border-width: 0px;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.1));
  background-color: var(--fallback-n,oklch(var(--n)/0.1));
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

.\!input.disabled,
  .\!input:disabled,
  .\!input[disabled] {
  pointer-events: none !important;
  border-width: 0px !important;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.1)) !important;
  background-color: var(--fallback-n,oklch(var(--n)/0.1)) !important;
  color: var(--fallback-bc,oklch(var(--bc)/0.5)) !important;
}

.\!input::-webkit-date-and-time-value {
  text-align: inherit !important;
}

.input::-webkit-date-and-time-value {
  text-align: inherit;
}

.\!input.input-floating.disabled,
    .\!input.input-floating:disabled,
    .\!input.input-floating[disabled] {
  border-width: 1px !important;
  --tw-bg-opacity: 1 !important;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1))) !important;
}

.input.input-floating.disabled,
    .input.input-floating:disabled,
    .input.input-floating[disabled] {
  border-width: 1px;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
}

.\!input.input-floating.disabled,
    .\!input.input-floating:disabled,
    .\!input.input-floating[disabled] {
  border-width: 1px !important;
  --tw-bg-opacity: 1 !important;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1))) !important;
}

.\!input.input-floating.disabled ~ .input-floating-label, .\!input.input-floating:disabled ~ .input-floating-label, .\!input.input-floating[disabled] ~ .input-floating-label {
  color: var(--fallback-bc,oklch(var(--bc)/0.5)) !important;
}

.input.input-floating.disabled ~ .input-floating-label, .input.input-floating:disabled ~ .input-floating-label, .input.input-floating[disabled] ~ .input-floating-label {
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

.\!input.input-floating.disabled ~ .input-floating-label, .\!input.input-floating:disabled ~ .input-floating-label, .\!input.input-floating[disabled] ~ .input-floating-label {
  color: var(--fallback-bc,oklch(var(--bc)/0.5)) !important;
}

.\!input.input-filled.disabled,
    .\!input.input-filled:disabled,
    .\!input.input-filled[disabled] {
  border-bottom-width: 1px !important;
}

.input.input-filled.disabled,
    .input.input-filled:disabled,
    .input.input-filled[disabled] {
  border-bottom-width: 1px;
}

.\!input.input-filled.disabled,
    .\!input.input-filled:disabled,
    .\!input.input-filled[disabled] {
  border-bottom-width: 1px !important;
}

.\!input.input-filled.disabled ~ .input-filled-label, .\!input.input-filled:disabled ~ .input-filled-label, .\!input.input-filled[disabled] ~ .input-filled-label {
  color: var(--fallback-bc,oklch(var(--bc)/0.5)) !important;
}

.input.input-filled.disabled ~ .input-filled-label, .input.input-filled:disabled ~ .input-filled-label, .input.input-filled[disabled] ~ .input-filled-label {
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

.\!input.input-filled.disabled ~ .input-filled-label, .\!input.input-filled:disabled ~ .input-filled-label, .\!input.input-filled[disabled] ~ .input-filled-label {
  color: var(--fallback-bc,oklch(var(--bc)/0.5)) !important;
}

.input-filled-label,
.input-floating-label {
  pointer-events: none;
  position: absolute;
  inset-inline-start: 0px;
  width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  background-color: transparent;
  padding-left: 0.75rem;
  padding-right: 0.75rem;
  font-size: 1rem;
  line-height: 1.375rem;
  color: var(--fallback-bc,oklch(var(--bc)/0.8));
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-timing-function: cubic-bezier(0.4, 0, 1, 1);
  transition-duration: 150ms;
}

.peer:focus ~ .input-filled-label,.peer:focus ~ 
.input-floating-label {
  --tw-text-opacity: 1;
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
}

.peer.input-lg ~ .input-filled-label,.peer.input-lg ~ 
.input-floating-label {
  font-size: 1.125rem;
  line-height: 1.5rem;
}

.peer.input-sm ~ .input-filled-label,.peer.input-sm ~ 
.input-floating-label {
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.input-filled-label {
  top: 0.8rem;
}

.peer.input-lg ~ .input-filled-label {
  top: 1rem;
  padding-left: 1rem;
  padding-right: 1rem;
}

.peer.input-sm ~ .input-filled-label {
  top: 0.625rem;
  padding-left: 0.625rem;
  padding-right: 0.625rem;
}

.peer:not(:-moz-placeholder-shown) ~ .input-filled-label {
  top: 0.125rem;
  margin-inline-start: 0.75rem;
  width: -moz-fit-content;
  width: fit-content;
  padding: 0px;
  font-size: 0.75rem;
  line-height: 1rem;
}

.peer:focus ~ .input-filled-label,
  .peer:focus-within ~ .input-filled-label,
  .peer:not(:placeholder-shown) ~ .input-filled-label {
  top: 0.125rem;
  margin-inline-start: 0.75rem;
  width: -moz-fit-content;
  width: fit-content;
  padding: 0px;
  font-size: 0.75rem;
  line-height: 1rem;
}

.peer.input-lg:not(:-moz-placeholder-shown) ~ .input-filled-label {
  margin-inline-start: 1rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.peer.input-lg:focus ~ .input-filled-label,
  .peer.input-lg:focus-within ~ .input-filled-label,
  .peer.input-lg:not(:placeholder-shown) ~ .input-filled-label {
  margin-inline-start: 1rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.\!input.input-filled.input-sm:not(:-moz-placeholder-shown) {
  padding-top: 0.5rem !important;
}

.\!input.input-filled.input-sm:focus,
  .\!input.input-filled.input-sm:not(:placeholder-shown) {
  padding-top: 0.5rem !important;
}

.input.input-filled.input-sm:not(:-moz-placeholder-shown) {
  padding-top: 0.5rem;
}

.input.input-filled.input-sm:focus,
  .input.input-filled.input-sm:not(:placeholder-shown) {
  padding-top: 0.5rem;
}

.\!input.input-filled.input-sm:not(:-moz-placeholder-shown) {
  padding-top: 0.5rem !important;
}

.\!input.input-filled.input-sm:focus,
  .\!input.input-filled.input-sm:not(:placeholder-shown) {
  padding-top: 0.5rem !important;
}

.\!input.input-filled:not(:-moz-placeholder-shown), .\!input.input-filled.input-lg:not(:-moz-placeholder-shown) {
  padding-top: 0.75rem !important;
}

.\!input.input-filled:focus,
  .\!input.input-filled.input-lg:focus,
  .\!input.input-filled:not(:placeholder-shown),
  .\!input.input-filled.input-lg:not(:placeholder-shown) {
  padding-top: 0.75rem !important;
}

.input.input-filled:not(:-moz-placeholder-shown), .input.input-filled.input-lg:not(:-moz-placeholder-shown) {
  padding-top: 0.75rem;
}

.input.input-filled:focus,
  .input.input-filled.input-lg:focus,
  .input.input-filled:not(:placeholder-shown),
  .input.input-filled.input-lg:not(:placeholder-shown) {
  padding-top: 0.75rem;
}

.\!input.input-filled:not(:-moz-placeholder-shown), .\!input.input-filled.input-lg:not(:-moz-placeholder-shown) {
  padding-top: 0.75rem !important;
}

.\!input.input-filled:focus,
  .\!input.input-filled.input-lg:focus,
  .\!input.input-filled:not(:placeholder-shown),
  .\!input.input-filled.input-lg:not(:placeholder-shown) {
  padding-top: 0.75rem !important;
}

.input-floating-label {
  top: 0.5rem;
}

.peer.input-lg ~ .input-floating-label {
  top: 0.7rem;
  padding-left: 1rem;
  padding-right: 1rem;
}

.peer.input-sm ~ .input-floating-label {
  top: 0.3rem;
  padding-left: 0.625rem;
  padding-right: 0.625rem;
}

.peer:not(:-moz-placeholder-shown) ~ .input-floating-label {
  top: 0px;
  margin-inline-start: 0.5rem;
  width: -moz-fit-content;
  width: fit-content;
  --tw-translate-y: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
  padding-left: 0.25rem;
  padding-right: 0.25rem;
  font-size: 0.75rem;
  line-height: 1rem;
}

.peer:focus ~ .input-floating-label,
  .peer:focus-within ~ .input-floating-label,
  .peer:not(:placeholder-shown) ~ .input-floating-label {
  top: 0px;
  margin-inline-start: 0.5rem;
  width: -moz-fit-content;
  width: fit-content;
  --tw-translate-y: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
  padding-left: 0.25rem;
  padding-right: 0.25rem;
  font-size: 0.75rem;
  line-height: 1rem;
}

.peer.input-lg:not(:-moz-placeholder-shown) ~ .input-floating-label {
  margin-inline-start: 0.75rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.peer.input-lg:focus ~ .input-floating-label,
  .peer.input-lg:focus-within ~ .input-floating-label,
  .peer.input-lg:not(:placeholder-shown) ~ .input-floating-label {
  margin-inline-start: 0.75rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.input-group {
  position: relative;
  display: flex;
  width: 100%;
  align-items: stretch;
  border-radius: var(--rounded-btn, 0.375rem);
  border-width: 1px;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.25));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
}

.input-group:has(:hover) {
  border-color: var(--fallback-bc,oklch(var(--bc)/0.6));
}

.input-group:has(:focus),
  .input-group:has(:focus-within) {
  --tw-border-opacity: 1;
  border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity, 1)));
  --tw-shadow: 0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22));
  --tw-shadow: var(--tw-shadow-colored);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-shadow-color: var(--fallback-p,oklch(var(--p)/0.22));
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  --tw-ring-opacity: 1;
  --tw-ring-color: var(--fallback-p,oklch(var(--p)/var(--tw-ring-opacity, 1)));
}

.input-group:has(input.disabled),
  .input-group:has(input:disabled),
  .input-group:has(input[disabled]) {
  pointer-events: none;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.1));
  background-color: var(--fallback-n,oklch(var(--n)/0.1));
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

.input-group .input {
  border-width: 0px;
  background-color: transparent;
}

.input-group .\!input {
  border-width: 0px !important;
  background-color: transparent !important;
}

.input-group .input:focus,
    .input-group .input:focus-within {
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
}

.input-group .\!input:focus,
    .input-group .\!input:focus-within {
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow) !important;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000) !important;
  --tw-shadow: 0 0 #0000 !important;
  --tw-shadow-colored: 0 0 #0000 !important;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow) !important;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000) !important;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color) !important;
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color) !important;
}

.input-group .input.disabled,
    .input-group .input:disabled,
    .input-group .input[disabled] {
  background-color: transparent;
}

.input-group .\!input.disabled,
    .input-group .\!input:disabled,
    .input-group .\!input[disabled] {
  background-color: transparent !important;
}

.input-group-filled {
  position: relative;
  display: flex;
  width: 100%;
  align-items: stretch;
  border-top-left-radius: 0.375rem;
  border-top-right-radius: 0.375rem;
  border-width: 0px;
  border-bottom-width: 1px;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.6));
  background-color: var(--fallback-bc,oklch(var(--bc)/0.05));
}

.input-group-filled:has(:hover) {
  border-color: var(--fallback-bc,oklch(var(--bc)/0.6));
}

.input-group-filled:focus ~ .input-filled-focused,
  .input-group-filled:focus-within ~ .input-filled-focused {
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity, 1)));
}

.input-group-filled .input {
  border-width: 0px;
  background-color: transparent;
}

.input-group-filled .\!input {
  border-width: 0px !important;
  background-color: transparent !important;
}

.input-group-filled .input.disabled,
    .input-group-filled .input:disabled,
    .input-group-filled .input[disabled] {
  background-color: transparent;
}

.input-group-filled .\!input.disabled,
    .input-group-filled .\!input:disabled,
    .input-group-filled .\!input[disabled] {
  background-color: transparent !important;
}

.input-group-text {
  display: flex;
  align-items: center;
  padding-left: 0.75rem;
  padding-right: 0.75rem;
  font-weight: 400;
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
  transition: border-color 0.15s ease-in-out,
    box-shadow 0.15s ease-in-out;
}

.input-group-text:first-child {
  border-start-start-radius: var(--rounded-btn, 0.375rem);
  border-end-start-radius: var(--rounded-btn, 0.375rem);
  padding-inline-end: 0px;
}

.input-group-text:last-child {
  border-start-end-radius: var(--rounded-btn, 0.375rem);
  border-end-end-radius: var(--rounded-btn, 0.375rem);
  padding-inline-start: 0px;
}

.\!input[type="file"].input-floating::file-selector-button {
  border-inline-end-width: 1px !important;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.25)) !important;
  --tw-bg-opacity: 1 !important;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1))) !important;
}

.input[type="file"].input-floating::file-selector-button {
  border-inline-end-width: 1px;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.25));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
}

.\!input.is-valid,
.validate .\!input:valid {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1))) !important;
}

.input.is-valid,
.validate .input:valid {
  --tw-border-opacity: 1;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1)));
}


.\!validate .input:valid {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1))) !important;
}

.\!input.is-valid,
.validate .\!input:valid {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1))) !important;
}

.\!input.is-valid:focus,
  .\!input.is-valid:focus-within,
  .validate .\!input:valid:focus,
  .validate .\!input:valid:focus-within {
  --tw-shadow-color: var(--fallback-su,oklch(var(--su)/0.22)) !important;
  --tw-shadow: var(--tw-shadow-colored) !important;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color) !important;
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color) !important;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000) !important;
  --tw-ring-opacity: 1 !important;
  --tw-ring-color: var(--fallback-su,oklch(var(--su)/var(--tw-ring-opacity, 1))) !important;
}

.input.is-valid:focus,
  .input.is-valid:focus-within,
  .validate .input:valid:focus,
  .validate .input:valid:focus-within {
  --tw-shadow-color: var(--fallback-su,oklch(var(--su)/0.22));
  --tw-shadow: var(--tw-shadow-colored);
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-opacity: 1;
  --tw-ring-color: var(--fallback-su,oklch(var(--su)/var(--tw-ring-opacity, 1)));
}

.\!input.is-valid:focus,
  .\!input.is-valid:focus-within,
  .validate .\!input:valid:focus,
  .validate .\!input:valid:focus-within {
  --tw-shadow-color: var(--fallback-su,oklch(var(--su)/0.22)) !important;
  --tw-shadow: var(--tw-shadow-colored) !important;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color) !important;
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color) !important;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000) !important;
  --tw-ring-opacity: 1 !important;
  --tw-ring-color: var(--fallback-su,oklch(var(--su)/var(--tw-ring-opacity, 1))) !important;
}


  .\!validate .input:valid:focus,
  .\!validate .input:valid:focus-within {
  --tw-shadow-color: var(--fallback-su,oklch(var(--su)/0.22)) !important;
  --tw-shadow: var(--tw-shadow-colored) !important;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color) !important;
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color) !important;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000) !important;
  --tw-ring-opacity: 1 !important;
  --tw-ring-color: var(--fallback-su,oklch(var(--su)/var(--tw-ring-opacity, 1))) !important;
}

.\!input.is-valid:focus,
  .\!input.is-valid:focus-within,
  .validate .\!input:valid:focus,
  .validate .\!input:valid:focus-within {
  --tw-shadow-color: var(--fallback-su,oklch(var(--su)/0.22)) !important;
  --tw-shadow: var(--tw-shadow-colored) !important;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color) !important;
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color) !important;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000) !important;
  --tw-ring-opacity: 1 !important;
  --tw-ring-color: var(--fallback-su,oklch(var(--su)/var(--tw-ring-opacity, 1))) !important;
}


  .\!validate .input:valid:focus,
  .\!validate .input:valid:focus-within {
  --tw-shadow-color: var(--fallback-su,oklch(var(--su)/0.22)) !important;
  --tw-shadow: var(--tw-shadow-colored) !important;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color) !important;
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color) !important;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000) !important;
  --tw-ring-opacity: 1 !important;
  --tw-ring-color: var(--fallback-su,oklch(var(--su)/var(--tw-ring-opacity, 1))) !important;
}

.\!input.is-valid:focus,
  .\!input.is-valid:focus-within,
  .validate .\!input:valid:focus,
  .validate .\!input:valid:focus-within {
  --tw-shadow-color: var(--fallback-su,oklch(var(--su)/0.22)) !important;
  --tw-shadow: var(--tw-shadow-colored) !important;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color) !important;
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color) !important;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000) !important;
  --tw-ring-opacity: 1 !important;
  --tw-ring-color: var(--fallback-su,oklch(var(--su)/var(--tw-ring-opacity, 1))) !important;
}

.\!input.is-valid.input-filled:focus,
  .\!input.is-valid.input-filled:focus-within,
  .validate .\!input:valid.input-filled:focus,
  .validate .\!input:valid.input-filled:focus-within {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1))) !important;
  --tw-shadow: 0 0 #0000 !important;
  --tw-shadow-colored: 0 0 #0000 !important;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow) !important;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000) !important;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color) !important;
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color) !important;
}

.input.is-valid.input-filled:focus,
  .input.is-valid.input-filled:focus-within,
  .validate .input:valid.input-filled:focus,
  .validate .input:valid.input-filled:focus-within {
  --tw-border-opacity: 1;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1)));
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
}

.\!input.is-valid.input-filled:focus,
  .\!input.is-valid.input-filled:focus-within,
  .validate .\!input:valid.input-filled:focus,
  .validate .\!input:valid.input-filled:focus-within {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1))) !important;
  --tw-shadow: 0 0 #0000 !important;
  --tw-shadow-colored: 0 0 #0000 !important;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow) !important;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000) !important;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color) !important;
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color) !important;
}


  .\!validate .input:valid.input-filled:focus,
  .\!validate .input:valid.input-filled:focus-within {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1))) !important;
  --tw-shadow: 0 0 #0000 !important;
  --tw-shadow-colored: 0 0 #0000 !important;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow) !important;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000) !important;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color) !important;
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color) !important;
}

.\!input.is-valid.input-filled:focus,
  .\!input.is-valid.input-filled:focus-within,
  .validate .\!input:valid.input-filled:focus,
  .validate .\!input:valid.input-filled:focus-within {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1))) !important;
  --tw-shadow: 0 0 #0000 !important;
  --tw-shadow-colored: 0 0 #0000 !important;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow) !important;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000) !important;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color) !important;
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color) !important;
}


  .\!validate .input:valid.input-filled:focus,
  .\!validate .input:valid.input-filled:focus-within {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1))) !important;
  --tw-shadow: 0 0 #0000 !important;
  --tw-shadow-colored: 0 0 #0000 !important;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow) !important;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000) !important;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color) !important;
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color) !important;
}

.\!input.is-valid.input-filled:focus,
  .\!input.is-valid.input-filled:focus-within,
  .validate .\!input:valid.input-filled:focus,
  .validate .\!input:valid.input-filled:focus-within {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1))) !important;
  --tw-shadow: 0 0 #0000 !important;
  --tw-shadow-colored: 0 0 #0000 !important;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow) !important;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000) !important;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color) !important;
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color) !important;
}

.\!input.is-valid ~ .input-floating-label,
  .\!input.is-valid ~ .input-filled-label,
  .validate .\!input:valid ~ .input-floating-label,
  .validate .\!input:valid ~ .input-filled-label {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1))) !important;
}

.input.is-valid ~ .input-floating-label,
  .input.is-valid ~ .input-filled-label,
  .validate .input:valid ~ .input-floating-label,
  .validate .input:valid ~ .input-filled-label {
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
}

.\!input.is-valid ~ .input-floating-label,
  .\!input.is-valid ~ .input-filled-label,
  .validate .\!input:valid ~ .input-floating-label,
  .validate .\!input:valid ~ .input-filled-label {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1))) !important;
}


  .\!validate .input:valid ~ .input-floating-label,
  .\!validate .input:valid ~ .input-filled-label {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1))) !important;
}

.\!input.is-valid ~ .input-floating-label,
  .\!input.is-valid ~ .input-filled-label,
  .validate .\!input:valid ~ .input-floating-label,
  .validate .\!input:valid ~ .input-filled-label {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1))) !important;
}


  .\!validate .input:valid ~ .input-floating-label,
  .\!validate .input:valid ~ .input-filled-label {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1))) !important;
}

.\!input.is-valid ~ .input-floating-label,
  .\!input.is-valid ~ .input-filled-label,
  .validate .\!input:valid ~ .input-floating-label,
  .validate .\!input:valid ~ .input-filled-label {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1))) !important;
}

.\!input.is-valid:focus ~ .input-filled-focused,
  .\!input.is-valid:focus-within ~ .input-filled-focused,
  .validate .\!input:valid:focus ~ .input-filled-focused,
  .validate .\!input:valid:focus-within ~ .input-filled-focused {
  --tw-scale-x: 1 !important;
  --tw-scale-y: 1 !important;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)) !important;
  --tw-bg-opacity: 1 !important;
  background-color: var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity, 1))) !important;
}

.input.is-valid:focus ~ .input-filled-focused,
  .input.is-valid:focus-within ~ .input-filled-focused,
  .validate .input:valid:focus ~ .input-filled-focused,
  .validate .input:valid:focus-within ~ .input-filled-focused {
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity, 1)));
}

.\!input.is-valid:focus ~ .input-filled-focused,
  .\!input.is-valid:focus-within ~ .input-filled-focused,
  .validate .\!input:valid:focus ~ .input-filled-focused,
  .validate .\!input:valid:focus-within ~ .input-filled-focused {
  --tw-scale-x: 1 !important;
  --tw-scale-y: 1 !important;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)) !important;
  --tw-bg-opacity: 1 !important;
  background-color: var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity, 1))) !important;
}


  .\!validate .input:valid:focus ~ .input-filled-focused,
  .\!validate .input:valid:focus-within ~ .input-filled-focused {
  --tw-scale-x: 1 !important;
  --tw-scale-y: 1 !important;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)) !important;
  --tw-bg-opacity: 1 !important;
  background-color: var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity, 1))) !important;
}

.\!input.is-valid:focus ~ .input-filled-focused,
  .\!input.is-valid:focus-within ~ .input-filled-focused,
  .validate .\!input:valid:focus ~ .input-filled-focused,
  .validate .\!input:valid:focus-within ~ .input-filled-focused {
  --tw-scale-x: 1 !important;
  --tw-scale-y: 1 !important;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)) !important;
  --tw-bg-opacity: 1 !important;
  background-color: var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity, 1))) !important;
}


  .\!validate .input:valid:focus ~ .input-filled-focused,
  .\!validate .input:valid:focus-within ~ .input-filled-focused {
  --tw-scale-x: 1 !important;
  --tw-scale-y: 1 !important;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)) !important;
  --tw-bg-opacity: 1 !important;
  background-color: var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity, 1))) !important;
}

.\!input.is-valid:focus ~ .input-filled-focused,
  .\!input.is-valid:focus-within ~ .input-filled-focused,
  .validate .\!input:valid:focus ~ .input-filled-focused,
  .validate .\!input:valid:focus-within ~ .input-filled-focused {
  --tw-scale-x: 1 !important;
  --tw-scale-y: 1 !important;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)) !important;
  --tw-bg-opacity: 1 !important;
  background-color: var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity, 1))) !important;
}

.label:has(+ * .is-valid) > *, 
.label-text:has(+ * .is-valid), 
.label-text:has(~ .is-valid), 
.label:has(~ .is-valid) > *, 


.is-valid ~ .label, 
.is-valid ~ .label-text, 
.is-valid ~ .label .label-text,  
*:has(.is-valid) ~ .label, 
*:has(.is-valid) ~ .label-text, 
*:has(.is-valid) ~ .label .label-text, 



.validate .label:has(+ * .input:valid) > *, 
.validate .label-text:has(+ * .input:valid), 
.validate .label-text:has(~ .input:valid), 
.validate .label:has(~ .input:valid) > *, 


.validate .input:valid ~ .label, 
.validate .input:valid ~ .label.label-text, 
.validate .input:valid ~ .label .label-text,  
.validate *:has(.input:valid) ~ .label, 
.validate *:has(.input:valid) ~ .label-text, 
.validate *:has(.input:valid) ~ .label .label-text {
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
}

 



.\!validate .label:has(+ * .input:valid) > *, 
.\!validate .label-text:has(+ * .input:valid), 
.\!validate .label-text:has(~ .input:valid), 
.\!validate .label:has(~ .input:valid) > *, 


.\!validate .input:valid ~ .label, 
.\!validate .input:valid ~ .label.label-text, 
.\!validate .input:valid ~ .label .label-text,  
.\!validate *:has(.input:valid) ~ .label, 
.\!validate *:has(.input:valid) ~ .label-text, 
.\!validate *:has(.input:valid) ~ .label .label-text {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1))) !important;
}

 



.validate .label:has(+ * .\!input:valid) > *, 
.validate .label-text:has(+ * .\!input:valid), 
.validate .label-text:has(~ .\!input:valid), 
.validate .label:has(~ .\!input:valid) > *, 


.validate .\!input:valid ~ .label, 
.validate .\!input:valid ~ .label.label-text, 
.validate .\!input:valid ~ .label .label-text,  
.validate *:has(.\!input:valid) ~ .label, 
.validate *:has(.\!input:valid) ~ .label-text, 
.validate *:has(.\!input:valid) ~ .label .label-text {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1))) !important;
}

 



.\!validate .label:has(+ * .input:valid) > *, 
.\!validate .label-text:has(+ * .input:valid), 
.\!validate .label-text:has(~ .input:valid), 
.\!validate .label:has(~ .input:valid) > *, 


.\!validate .input:valid ~ .label, 
.\!validate .input:valid ~ .label.label-text, 
.\!validate .input:valid ~ .label .label-text,  
.\!validate *:has(.input:valid) ~ .label, 
.\!validate *:has(.input:valid) ~ .label-text, 
.\!validate *:has(.input:valid) ~ .label .label-text {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1))) !important;
}

 



.validate .label:has(+ * .\!input:valid) > *, 
.validate .label-text:has(+ * .\!input:valid), 
.validate .label-text:has(~ .\!input:valid), 
.validate .label:has(~ .\!input:valid) > *, 


.validate .\!input:valid ~ .label, 
.validate .\!input:valid ~ .label.label-text, 
.validate .\!input:valid ~ .label .label-text,  
.validate *:has(.\!input:valid) ~ .label, 
.validate *:has(.\!input:valid) ~ .label-text, 
.validate *:has(.\!input:valid) ~ .label .label-text {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1))) !important;
}

 



.\!validate .label:has(+ * .input:valid) > *, 
.\!validate .label-text:has(+ * .input:valid), 
.\!validate .label-text:has(~ .input:valid), 
.\!validate .label:has(~ .input:valid) > *, 


.\!validate .input:valid ~ .label, 
.\!validate .input:valid ~ .label.label-text, 
.\!validate .input:valid ~ .label .label-text,  
.\!validate *:has(.input:valid) ~ .label, 
.\!validate *:has(.input:valid) ~ .label-text, 
.\!validate *:has(.input:valid) ~ .label .label-text {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1))) !important;
}

 



.validate .label:has(+ * .\!input:valid) > *, 
.validate .label-text:has(+ * .\!input:valid), 
.validate .label-text:has(~ .\!input:valid), 
.validate .label:has(~ .\!input:valid) > *, 


.validate .\!input:valid ~ .label, 
.validate .\!input:valid ~ .label.label-text, 
.validate .\!input:valid ~ .label .label-text,  
.validate *:has(.\!input:valid) ~ .label, 
.validate *:has(.\!input:valid) ~ .label-text, 
.validate *:has(.\!input:valid) ~ .label .label-text {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1))) !important;
}

 



.\!validate .label:has(+ * .input:valid) > *, 
.\!validate .label-text:has(+ * .input:valid), 
.\!validate .label-text:has(~ .input:valid), 
.\!validate .label:has(~ .input:valid) > *, 


.\!validate .input:valid ~ .label, 
.\!validate .input:valid ~ .label.label-text, 
.\!validate .input:valid ~ .label .label-text,  
.\!validate *:has(.input:valid) ~ .label, 
.\!validate *:has(.input:valid) ~ .label-text, 
.\!validate *:has(.input:valid) ~ .label .label-text {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1))) !important;
}

 



.validate .label:has(+ * .\!input:valid) > *, 
.validate .label-text:has(+ * .\!input:valid), 
.validate .label-text:has(~ .\!input:valid), 
.validate .label:has(~ .\!input:valid) > *, 


.validate .\!input:valid ~ .label, 
.validate .\!input:valid ~ .label.label-text, 
.validate .\!input:valid ~ .label .label-text,  
.validate *:has(.\!input:valid) ~ .label, 
.validate *:has(.\!input:valid) ~ .label-text, 
.validate *:has(.\!input:valid) ~ .label .label-text {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1))) !important;
}

 



.\!validate .label:has(+ * .input:valid) > *, 
.\!validate .label-text:has(+ * .input:valid), 
.\!validate .label-text:has(~ .input:valid), 
.\!validate .label:has(~ .input:valid) > *, 


.\!validate .input:valid ~ .label, 
.\!validate .input:valid ~ .label.label-text, 
.\!validate .input:valid ~ .label .label-text,  
.\!validate *:has(.input:valid) ~ .label, 
.\!validate *:has(.input:valid) ~ .label-text, 
.\!validate *:has(.input:valid) ~ .label .label-text {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1))) !important;
}

 



.validate .label:has(+ * .\!input:valid) > *, 
.validate .label-text:has(+ * .\!input:valid), 
.validate .label-text:has(~ .\!input:valid), 
.validate .label:has(~ .\!input:valid) > *, 


.validate .\!input:valid ~ .label, 
.validate .\!input:valid ~ .label.label-text, 
.validate .\!input:valid ~ .label .label-text,  
.validate *:has(.\!input:valid) ~ .label, 
.validate *:has(.\!input:valid) ~ .label-text, 
.validate *:has(.\!input:valid) ~ .label .label-text {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1))) !important;
}

 



.\!validate .label:has(+ * .input:valid) > *, 
.\!validate .label-text:has(+ * .input:valid), 
.\!validate .label-text:has(~ .input:valid), 
.\!validate .label:has(~ .input:valid) > *, 


.\!validate .input:valid ~ .label, 
.\!validate .input:valid ~ .label.label-text, 
.\!validate .input:valid ~ .label .label-text,  
.\!validate *:has(.input:valid) ~ .label, 
.\!validate *:has(.input:valid) ~ .label-text, 
.\!validate *:has(.input:valid) ~ .label .label-text {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1))) !important;
}

 



.validate .label:has(+ * .\!input:valid) > *, 
.validate .label-text:has(+ * .\!input:valid), 
.validate .label-text:has(~ .\!input:valid), 
.validate .label:has(~ .\!input:valid) > *, 


.validate .\!input:valid ~ .label, 
.validate .\!input:valid ~ .label.label-text, 
.validate .\!input:valid ~ .label .label-text,  
.validate *:has(.\!input:valid) ~ .label, 
.validate *:has(.\!input:valid) ~ .label-text, 
.validate *:has(.\!input:valid) ~ .label .label-text {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1))) !important;
}

 



.\!validate .label:has(+ * .input:valid) > *, 
.\!validate .label-text:has(+ * .input:valid), 
.\!validate .label-text:has(~ .input:valid), 
.\!validate .label:has(~ .input:valid) > *, 


.\!validate .input:valid ~ .label, 
.\!validate .input:valid ~ .label.label-text, 
.\!validate .input:valid ~ .label .label-text,  
.\!validate *:has(.input:valid) ~ .label, 
.\!validate *:has(.input:valid) ~ .label-text, 
.\!validate *:has(.input:valid) ~ .label .label-text {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1))) !important;
}

 



.validate .label:has(+ * .\!input:valid) > *, 
.validate .label-text:has(+ * .\!input:valid), 
.validate .label-text:has(~ .\!input:valid), 
.validate .label:has(~ .\!input:valid) > *, 


.validate .\!input:valid ~ .label, 
.validate .\!input:valid ~ .label.label-text, 
.validate .\!input:valid ~ .label .label-text,  
.validate *:has(.\!input:valid) ~ .label, 
.validate *:has(.\!input:valid) ~ .label-text, 
.validate *:has(.\!input:valid) ~ .label .label-text {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1))) !important;
}

 



.\!validate .label:has(+ * .input:valid) > *, 
.\!validate .label-text:has(+ * .input:valid), 
.\!validate .label-text:has(~ .input:valid), 
.\!validate .label:has(~ .input:valid) > *, 


.\!validate .input:valid ~ .label, 
.\!validate .input:valid ~ .label.label-text, 
.\!validate .input:valid ~ .label .label-text,  
.\!validate *:has(.input:valid) ~ .label, 
.\!validate *:has(.input:valid) ~ .label-text, 
.\!validate *:has(.input:valid) ~ .label .label-text {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1))) !important;
}

 



.validate .label:has(+ * .\!input:valid) > *, 
.validate .label-text:has(+ * .\!input:valid), 
.validate .label-text:has(~ .\!input:valid), 
.validate .label:has(~ .\!input:valid) > *, 


.validate .\!input:valid ~ .label, 
.validate .\!input:valid ~ .label.label-text, 
.validate .\!input:valid ~ .label .label-text,  
.validate *:has(.\!input:valid) ~ .label, 
.validate *:has(.\!input:valid) ~ .label-text, 
.validate *:has(.\!input:valid) ~ .label .label-text {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1))) !important;
}

 



.\!validate .label:has(+ * .input:valid) > *, 
.\!validate .label-text:has(+ * .input:valid), 
.\!validate .label-text:has(~ .input:valid), 
.\!validate .label:has(~ .input:valid) > *, 


.\!validate .input:valid ~ .label, 
.\!validate .input:valid ~ .label.label-text, 
.\!validate .input:valid ~ .label .label-text,  
.\!validate *:has(.input:valid) ~ .label, 
.\!validate *:has(.input:valid) ~ .label-text, 
.\!validate *:has(.input:valid) ~ .label .label-text {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1))) !important;
}

 



.validate .label:has(+ * .\!input:valid) > *, 
.validate .label-text:has(+ * .\!input:valid), 
.validate .label-text:has(~ .\!input:valid), 
.validate .label:has(~ .\!input:valid) > *, 


.validate .\!input:valid ~ .label, 
.validate .\!input:valid ~ .label.label-text, 
.validate .\!input:valid ~ .label .label-text,  
.validate *:has(.\!input:valid) ~ .label, 
.validate *:has(.\!input:valid) ~ .label-text, 
.validate *:has(.\!input:valid) ~ .label .label-text {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1))) !important;
}

 



.\!validate .label:has(+ * .input:valid) > *, 
.\!validate .label-text:has(+ * .input:valid), 
.\!validate .label-text:has(~ .input:valid), 
.\!validate .label:has(~ .input:valid) > *, 


.\!validate .input:valid ~ .label, 
.\!validate .input:valid ~ .label.label-text, 
.\!validate .input:valid ~ .label .label-text,  
.\!validate *:has(.input:valid) ~ .label, 
.\!validate *:has(.input:valid) ~ .label-text, 
.\!validate *:has(.input:valid) ~ .label .label-text {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1))) !important;
}

 



.validate .label:has(+ * .\!input:valid) > *, 
.validate .label-text:has(+ * .\!input:valid), 
.validate .label-text:has(~ .\!input:valid), 
.validate .label:has(~ .\!input:valid) > *, 


.validate .\!input:valid ~ .label, 
.validate .\!input:valid ~ .label.label-text, 
.validate .\!input:valid ~ .label .label-text,  
.validate *:has(.\!input:valid) ~ .label, 
.validate *:has(.\!input:valid) ~ .label-text, 
.validate *:has(.\!input:valid) ~ .label .label-text {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1))) !important;
}

.\!input:focus.is-valid ~ .input-floating-label,
.\!input:focus.is-valid ~ .input-filled-label {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1))) !important;
}

.input:focus.is-valid ~ .input-floating-label,
.input:focus.is-valid ~ .input-filled-label {
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
}

.\!input:focus.is-valid ~ .input-floating-label,
.\!input:focus.is-valid ~ .input-filled-label {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1))) !important;
}

.\!input.is-invalid,
.validate .\!input:invalid {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1))) !important;
}

.input.is-invalid,
.validate .input:invalid {
  --tw-border-opacity: 1;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1)));
}


.\!validate .input:invalid {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1))) !important;
}

.\!input.is-invalid,
.validate .\!input:invalid {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1))) !important;
}

.\!input.is-invalid:focus,
  .\!input.is-invalid:focus-within,
  .validate .\!input:invalid:focus,
  .validate .\!input:invalid:focus-within {
  --tw-shadow-color: var(--fallback-er,oklch(var(--er)/0.22)) !important;
  --tw-shadow: var(--tw-shadow-colored) !important;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color) !important;
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color) !important;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000) !important;
  --tw-ring-opacity: 1 !important;
  --tw-ring-color: var(--fallback-er,oklch(var(--er)/var(--tw-ring-opacity, 1))) !important;
}

.input.is-invalid:focus,
  .input.is-invalid:focus-within,
  .validate .input:invalid:focus,
  .validate .input:invalid:focus-within {
  --tw-shadow-color: var(--fallback-er,oklch(var(--er)/0.22));
  --tw-shadow: var(--tw-shadow-colored);
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-opacity: 1;
  --tw-ring-color: var(--fallback-er,oklch(var(--er)/var(--tw-ring-opacity, 1)));
}

.\!input.is-invalid:focus,
  .\!input.is-invalid:focus-within,
  .validate .\!input:invalid:focus,
  .validate .\!input:invalid:focus-within {
  --tw-shadow-color: var(--fallback-er,oklch(var(--er)/0.22)) !important;
  --tw-shadow: var(--tw-shadow-colored) !important;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color) !important;
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color) !important;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000) !important;
  --tw-ring-opacity: 1 !important;
  --tw-ring-color: var(--fallback-er,oklch(var(--er)/var(--tw-ring-opacity, 1))) !important;
}


  .\!validate .input:invalid:focus,
  .\!validate .input:invalid:focus-within {
  --tw-shadow-color: var(--fallback-er,oklch(var(--er)/0.22)) !important;
  --tw-shadow: var(--tw-shadow-colored) !important;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color) !important;
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color) !important;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000) !important;
  --tw-ring-opacity: 1 !important;
  --tw-ring-color: var(--fallback-er,oklch(var(--er)/var(--tw-ring-opacity, 1))) !important;
}

.\!input.is-invalid:focus,
  .\!input.is-invalid:focus-within,
  .validate .\!input:invalid:focus,
  .validate .\!input:invalid:focus-within {
  --tw-shadow-color: var(--fallback-er,oklch(var(--er)/0.22)) !important;
  --tw-shadow: var(--tw-shadow-colored) !important;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color) !important;
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color) !important;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000) !important;
  --tw-ring-opacity: 1 !important;
  --tw-ring-color: var(--fallback-er,oklch(var(--er)/var(--tw-ring-opacity, 1))) !important;
}


  .\!validate .input:invalid:focus,
  .\!validate .input:invalid:focus-within {
  --tw-shadow-color: var(--fallback-er,oklch(var(--er)/0.22)) !important;
  --tw-shadow: var(--tw-shadow-colored) !important;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color) !important;
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color) !important;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000) !important;
  --tw-ring-opacity: 1 !important;
  --tw-ring-color: var(--fallback-er,oklch(var(--er)/var(--tw-ring-opacity, 1))) !important;
}

.\!input.is-invalid:focus,
  .\!input.is-invalid:focus-within,
  .validate .\!input:invalid:focus,
  .validate .\!input:invalid:focus-within {
  --tw-shadow-color: var(--fallback-er,oklch(var(--er)/0.22)) !important;
  --tw-shadow: var(--tw-shadow-colored) !important;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color) !important;
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color) !important;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000) !important;
  --tw-ring-opacity: 1 !important;
  --tw-ring-color: var(--fallback-er,oklch(var(--er)/var(--tw-ring-opacity, 1))) !important;
}

.\!input.is-invalid.input-filled:focus,
  .\!input.is-invalid.input-filled:focus-within,
  .validate .\!input:invalid.input-filled:focus,
  .validate .\!input:invalid.input-filled:focus-within {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1))) !important;
  --tw-shadow: 0 0 #0000 !important;
  --tw-shadow-colored: 0 0 #0000 !important;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow) !important;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000) !important;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color) !important;
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color) !important;
}

.input.is-invalid.input-filled:focus,
  .input.is-invalid.input-filled:focus-within,
  .validate .input:invalid.input-filled:focus,
  .validate .input:invalid.input-filled:focus-within {
  --tw-border-opacity: 1;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1)));
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
}

.\!input.is-invalid.input-filled:focus,
  .\!input.is-invalid.input-filled:focus-within,
  .validate .\!input:invalid.input-filled:focus,
  .validate .\!input:invalid.input-filled:focus-within {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1))) !important;
  --tw-shadow: 0 0 #0000 !important;
  --tw-shadow-colored: 0 0 #0000 !important;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow) !important;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000) !important;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color) !important;
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color) !important;
}


  .\!validate .input:invalid.input-filled:focus,
  .\!validate .input:invalid.input-filled:focus-within {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1))) !important;
  --tw-shadow: 0 0 #0000 !important;
  --tw-shadow-colored: 0 0 #0000 !important;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow) !important;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000) !important;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color) !important;
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color) !important;
}

.\!input.is-invalid.input-filled:focus,
  .\!input.is-invalid.input-filled:focus-within,
  .validate .\!input:invalid.input-filled:focus,
  .validate .\!input:invalid.input-filled:focus-within {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1))) !important;
  --tw-shadow: 0 0 #0000 !important;
  --tw-shadow-colored: 0 0 #0000 !important;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow) !important;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000) !important;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color) !important;
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color) !important;
}


  .\!validate .input:invalid.input-filled:focus,
  .\!validate .input:invalid.input-filled:focus-within {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1))) !important;
  --tw-shadow: 0 0 #0000 !important;
  --tw-shadow-colored: 0 0 #0000 !important;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow) !important;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000) !important;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color) !important;
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color) !important;
}

.\!input.is-invalid.input-filled:focus,
  .\!input.is-invalid.input-filled:focus-within,
  .validate .\!input:invalid.input-filled:focus,
  .validate .\!input:invalid.input-filled:focus-within {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1))) !important;
  --tw-shadow: 0 0 #0000 !important;
  --tw-shadow-colored: 0 0 #0000 !important;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow) !important;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000) !important;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color) !important;
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color) !important;
}

.\!input.is-invalid ~ .input-floating-label,
  .\!input.is-invalid ~ .input-filled-label,
  .validate .\!input:invalid ~ .input-floating-label,
  .validate .\!input:invalid ~ .input-filled-label {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1))) !important;
}

.input.is-invalid ~ .input-floating-label,
  .input.is-invalid ~ .input-filled-label,
  .validate .input:invalid ~ .input-floating-label,
  .validate .input:invalid ~ .input-filled-label {
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}

.\!input.is-invalid ~ .input-floating-label,
  .\!input.is-invalid ~ .input-filled-label,
  .validate .\!input:invalid ~ .input-floating-label,
  .validate .\!input:invalid ~ .input-filled-label {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1))) !important;
}


  .\!validate .input:invalid ~ .input-floating-label,
  .\!validate .input:invalid ~ .input-filled-label {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1))) !important;
}

.\!input.is-invalid ~ .input-floating-label,
  .\!input.is-invalid ~ .input-filled-label,
  .validate .\!input:invalid ~ .input-floating-label,
  .validate .\!input:invalid ~ .input-filled-label {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1))) !important;
}


  .\!validate .input:invalid ~ .input-floating-label,
  .\!validate .input:invalid ~ .input-filled-label {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1))) !important;
}

.\!input.is-invalid ~ .input-floating-label,
  .\!input.is-invalid ~ .input-filled-label,
  .validate .\!input:invalid ~ .input-floating-label,
  .validate .\!input:invalid ~ .input-filled-label {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1))) !important;
}

.\!input.is-invalid:focus ~ .input-filled-focused,
  .\!input.is-invalid:focus-within ~ .input-filled-focused,
  .validate .\!input:invalid:focus ~ .input-filled-focused,
  .validate .\!input:invalid:focus-within ~ .input-filled-focused {
  --tw-scale-x: 1 !important;
  --tw-scale-y: 1 !important;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)) !important;
  --tw-bg-opacity: 1 !important;
  background-color: var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity, 1))) !important;
}

.input.is-invalid:focus ~ .input-filled-focused,
  .input.is-invalid:focus-within ~ .input-filled-focused,
  .validate .input:invalid:focus ~ .input-filled-focused,
  .validate .input:invalid:focus-within ~ .input-filled-focused {
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity, 1)));
}

.\!input.is-invalid:focus ~ .input-filled-focused,
  .\!input.is-invalid:focus-within ~ .input-filled-focused,
  .validate .\!input:invalid:focus ~ .input-filled-focused,
  .validate .\!input:invalid:focus-within ~ .input-filled-focused {
  --tw-scale-x: 1 !important;
  --tw-scale-y: 1 !important;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)) !important;
  --tw-bg-opacity: 1 !important;
  background-color: var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity, 1))) !important;
}


  .\!validate .input:invalid:focus ~ .input-filled-focused,
  .\!validate .input:invalid:focus-within ~ .input-filled-focused {
  --tw-scale-x: 1 !important;
  --tw-scale-y: 1 !important;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)) !important;
  --tw-bg-opacity: 1 !important;
  background-color: var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity, 1))) !important;
}

.\!input.is-invalid:focus ~ .input-filled-focused,
  .\!input.is-invalid:focus-within ~ .input-filled-focused,
  .validate .\!input:invalid:focus ~ .input-filled-focused,
  .validate .\!input:invalid:focus-within ~ .input-filled-focused {
  --tw-scale-x: 1 !important;
  --tw-scale-y: 1 !important;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)) !important;
  --tw-bg-opacity: 1 !important;
  background-color: var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity, 1))) !important;
}


  .\!validate .input:invalid:focus ~ .input-filled-focused,
  .\!validate .input:invalid:focus-within ~ .input-filled-focused {
  --tw-scale-x: 1 !important;
  --tw-scale-y: 1 !important;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)) !important;
  --tw-bg-opacity: 1 !important;
  background-color: var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity, 1))) !important;
}

.\!input.is-invalid:focus ~ .input-filled-focused,
  .\!input.is-invalid:focus-within ~ .input-filled-focused,
  .validate .\!input:invalid:focus ~ .input-filled-focused,
  .validate .\!input:invalid:focus-within ~ .input-filled-focused {
  --tw-scale-x: 1 !important;
  --tw-scale-y: 1 !important;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)) !important;
  --tw-bg-opacity: 1 !important;
  background-color: var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity, 1))) !important;
}

.label:has(+ * .is-invalid) > *, 
.label-text:has(+ * .is-invalid), 
.label-text:has(~ .is-invalid), 
.label:has(~ .is-invalid) > *, 


.is-invalid ~ .label, 
.is-invalid ~ .label-text, 
.is-invalid ~ .label .label-text,  
*:has(.is-invalid) ~ .label, 
*:has(.is-invalid) ~ .label-text, 
*:has(.is-invalid) ~ .label .label-text, 



.validate .label:has(+ * .input:invalid) > *, 
.validate .label-text:has(+ * .input:invalid), 
.validate .label-text:has(~ .input:invalid), 
.validate .label:has(~ .input:invalid) > *, 


.validate .input:invalid ~ .label, 
.validate .input:invalid ~ .label.label-text, 
.validate .input:invalid ~ .label .label-text,  
.validate *:has(.input:invalid) ~ .label, 
.validate *:has(.input:invalid) ~ .label-text, 
.validate *:has(.input:invalid) ~ .label .label-text {
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}

 



.\!validate .label:has(+ * .input:invalid) > *, 
.\!validate .label-text:has(+ * .input:invalid), 
.\!validate .label-text:has(~ .input:invalid), 
.\!validate .label:has(~ .input:invalid) > *, 


.\!validate .input:invalid ~ .label, 
.\!validate .input:invalid ~ .label.label-text, 
.\!validate .input:invalid ~ .label .label-text,  
.\!validate *:has(.input:invalid) ~ .label, 
.\!validate *:has(.input:invalid) ~ .label-text, 
.\!validate *:has(.input:invalid) ~ .label .label-text {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1))) !important;
}

 



.validate .label:has(+ * .\!input:invalid) > *, 
.validate .label-text:has(+ * .\!input:invalid), 
.validate .label-text:has(~ .\!input:invalid), 
.validate .label:has(~ .\!input:invalid) > *, 


.validate .\!input:invalid ~ .label, 
.validate .\!input:invalid ~ .label.label-text, 
.validate .\!input:invalid ~ .label .label-text,  
.validate *:has(.\!input:invalid) ~ .label, 
.validate *:has(.\!input:invalid) ~ .label-text, 
.validate *:has(.\!input:invalid) ~ .label .label-text {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1))) !important;
}

 



.\!validate .label:has(+ * .input:invalid) > *, 
.\!validate .label-text:has(+ * .input:invalid), 
.\!validate .label-text:has(~ .input:invalid), 
.\!validate .label:has(~ .input:invalid) > *, 


.\!validate .input:invalid ~ .label, 
.\!validate .input:invalid ~ .label.label-text, 
.\!validate .input:invalid ~ .label .label-text,  
.\!validate *:has(.input:invalid) ~ .label, 
.\!validate *:has(.input:invalid) ~ .label-text, 
.\!validate *:has(.input:invalid) ~ .label .label-text {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1))) !important;
}

 



.validate .label:has(+ * .\!input:invalid) > *, 
.validate .label-text:has(+ * .\!input:invalid), 
.validate .label-text:has(~ .\!input:invalid), 
.validate .label:has(~ .\!input:invalid) > *, 


.validate .\!input:invalid ~ .label, 
.validate .\!input:invalid ~ .label.label-text, 
.validate .\!input:invalid ~ .label .label-text,  
.validate *:has(.\!input:invalid) ~ .label, 
.validate *:has(.\!input:invalid) ~ .label-text, 
.validate *:has(.\!input:invalid) ~ .label .label-text {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1))) !important;
}

 



.\!validate .label:has(+ * .input:invalid) > *, 
.\!validate .label-text:has(+ * .input:invalid), 
.\!validate .label-text:has(~ .input:invalid), 
.\!validate .label:has(~ .input:invalid) > *, 


.\!validate .input:invalid ~ .label, 
.\!validate .input:invalid ~ .label.label-text, 
.\!validate .input:invalid ~ .label .label-text,  
.\!validate *:has(.input:invalid) ~ .label, 
.\!validate *:has(.input:invalid) ~ .label-text, 
.\!validate *:has(.input:invalid) ~ .label .label-text {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1))) !important;
}

 



.validate .label:has(+ * .\!input:invalid) > *, 
.validate .label-text:has(+ * .\!input:invalid), 
.validate .label-text:has(~ .\!input:invalid), 
.validate .label:has(~ .\!input:invalid) > *, 


.validate .\!input:invalid ~ .label, 
.validate .\!input:invalid ~ .label.label-text, 
.validate .\!input:invalid ~ .label .label-text,  
.validate *:has(.\!input:invalid) ~ .label, 
.validate *:has(.\!input:invalid) ~ .label-text, 
.validate *:has(.\!input:invalid) ~ .label .label-text {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1))) !important;
}

 



.\!validate .label:has(+ * .input:invalid) > *, 
.\!validate .label-text:has(+ * .input:invalid), 
.\!validate .label-text:has(~ .input:invalid), 
.\!validate .label:has(~ .input:invalid) > *, 


.\!validate .input:invalid ~ .label, 
.\!validate .input:invalid ~ .label.label-text, 
.\!validate .input:invalid ~ .label .label-text,  
.\!validate *:has(.input:invalid) ~ .label, 
.\!validate *:has(.input:invalid) ~ .label-text, 
.\!validate *:has(.input:invalid) ~ .label .label-text {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1))) !important;
}

 



.validate .label:has(+ * .\!input:invalid) > *, 
.validate .label-text:has(+ * .\!input:invalid), 
.validate .label-text:has(~ .\!input:invalid), 
.validate .label:has(~ .\!input:invalid) > *, 


.validate .\!input:invalid ~ .label, 
.validate .\!input:invalid ~ .label.label-text, 
.validate .\!input:invalid ~ .label .label-text,  
.validate *:has(.\!input:invalid) ~ .label, 
.validate *:has(.\!input:invalid) ~ .label-text, 
.validate *:has(.\!input:invalid) ~ .label .label-text {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1))) !important;
}

 



.\!validate .label:has(+ * .input:invalid) > *, 
.\!validate .label-text:has(+ * .input:invalid), 
.\!validate .label-text:has(~ .input:invalid), 
.\!validate .label:has(~ .input:invalid) > *, 


.\!validate .input:invalid ~ .label, 
.\!validate .input:invalid ~ .label.label-text, 
.\!validate .input:invalid ~ .label .label-text,  
.\!validate *:has(.input:invalid) ~ .label, 
.\!validate *:has(.input:invalid) ~ .label-text, 
.\!validate *:has(.input:invalid) ~ .label .label-text {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1))) !important;
}

 



.validate .label:has(+ * .\!input:invalid) > *, 
.validate .label-text:has(+ * .\!input:invalid), 
.validate .label-text:has(~ .\!input:invalid), 
.validate .label:has(~ .\!input:invalid) > *, 


.validate .\!input:invalid ~ .label, 
.validate .\!input:invalid ~ .label.label-text, 
.validate .\!input:invalid ~ .label .label-text,  
.validate *:has(.\!input:invalid) ~ .label, 
.validate *:has(.\!input:invalid) ~ .label-text, 
.validate *:has(.\!input:invalid) ~ .label .label-text {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1))) !important;
}

 



.\!validate .label:has(+ * .input:invalid) > *, 
.\!validate .label-text:has(+ * .input:invalid), 
.\!validate .label-text:has(~ .input:invalid), 
.\!validate .label:has(~ .input:invalid) > *, 


.\!validate .input:invalid ~ .label, 
.\!validate .input:invalid ~ .label.label-text, 
.\!validate .input:invalid ~ .label .label-text,  
.\!validate *:has(.input:invalid) ~ .label, 
.\!validate *:has(.input:invalid) ~ .label-text, 
.\!validate *:has(.input:invalid) ~ .label .label-text {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1))) !important;
}

 



.validate .label:has(+ * .\!input:invalid) > *, 
.validate .label-text:has(+ * .\!input:invalid), 
.validate .label-text:has(~ .\!input:invalid), 
.validate .label:has(~ .\!input:invalid) > *, 


.validate .\!input:invalid ~ .label, 
.validate .\!input:invalid ~ .label.label-text, 
.validate .\!input:invalid ~ .label .label-text,  
.validate *:has(.\!input:invalid) ~ .label, 
.validate *:has(.\!input:invalid) ~ .label-text, 
.validate *:has(.\!input:invalid) ~ .label .label-text {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1))) !important;
}

 



.\!validate .label:has(+ * .input:invalid) > *, 
.\!validate .label-text:has(+ * .input:invalid), 
.\!validate .label-text:has(~ .input:invalid), 
.\!validate .label:has(~ .input:invalid) > *, 


.\!validate .input:invalid ~ .label, 
.\!validate .input:invalid ~ .label.label-text, 
.\!validate .input:invalid ~ .label .label-text,  
.\!validate *:has(.input:invalid) ~ .label, 
.\!validate *:has(.input:invalid) ~ .label-text, 
.\!validate *:has(.input:invalid) ~ .label .label-text {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1))) !important;
}

 



.validate .label:has(+ * .\!input:invalid) > *, 
.validate .label-text:has(+ * .\!input:invalid), 
.validate .label-text:has(~ .\!input:invalid), 
.validate .label:has(~ .\!input:invalid) > *, 


.validate .\!input:invalid ~ .label, 
.validate .\!input:invalid ~ .label.label-text, 
.validate .\!input:invalid ~ .label .label-text,  
.validate *:has(.\!input:invalid) ~ .label, 
.validate *:has(.\!input:invalid) ~ .label-text, 
.validate *:has(.\!input:invalid) ~ .label .label-text {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1))) !important;
}

 



.\!validate .label:has(+ * .input:invalid) > *, 
.\!validate .label-text:has(+ * .input:invalid), 
.\!validate .label-text:has(~ .input:invalid), 
.\!validate .label:has(~ .input:invalid) > *, 


.\!validate .input:invalid ~ .label, 
.\!validate .input:invalid ~ .label.label-text, 
.\!validate .input:invalid ~ .label .label-text,  
.\!validate *:has(.input:invalid) ~ .label, 
.\!validate *:has(.input:invalid) ~ .label-text, 
.\!validate *:has(.input:invalid) ~ .label .label-text {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1))) !important;
}

 



.validate .label:has(+ * .\!input:invalid) > *, 
.validate .label-text:has(+ * .\!input:invalid), 
.validate .label-text:has(~ .\!input:invalid), 
.validate .label:has(~ .\!input:invalid) > *, 


.validate .\!input:invalid ~ .label, 
.validate .\!input:invalid ~ .label.label-text, 
.validate .\!input:invalid ~ .label .label-text,  
.validate *:has(.\!input:invalid) ~ .label, 
.validate *:has(.\!input:invalid) ~ .label-text, 
.validate *:has(.\!input:invalid) ~ .label .label-text {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1))) !important;
}

 



.\!validate .label:has(+ * .input:invalid) > *, 
.\!validate .label-text:has(+ * .input:invalid), 
.\!validate .label-text:has(~ .input:invalid), 
.\!validate .label:has(~ .input:invalid) > *, 


.\!validate .input:invalid ~ .label, 
.\!validate .input:invalid ~ .label.label-text, 
.\!validate .input:invalid ~ .label .label-text,  
.\!validate *:has(.input:invalid) ~ .label, 
.\!validate *:has(.input:invalid) ~ .label-text, 
.\!validate *:has(.input:invalid) ~ .label .label-text {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1))) !important;
}

 



.validate .label:has(+ * .\!input:invalid) > *, 
.validate .label-text:has(+ * .\!input:invalid), 
.validate .label-text:has(~ .\!input:invalid), 
.validate .label:has(~ .\!input:invalid) > *, 


.validate .\!input:invalid ~ .label, 
.validate .\!input:invalid ~ .label.label-text, 
.validate .\!input:invalid ~ .label .label-text,  
.validate *:has(.\!input:invalid) ~ .label, 
.validate *:has(.\!input:invalid) ~ .label-text, 
.validate *:has(.\!input:invalid) ~ .label .label-text {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1))) !important;
}

 



.\!validate .label:has(+ * .input:invalid) > *, 
.\!validate .label-text:has(+ * .input:invalid), 
.\!validate .label-text:has(~ .input:invalid), 
.\!validate .label:has(~ .input:invalid) > *, 


.\!validate .input:invalid ~ .label, 
.\!validate .input:invalid ~ .label.label-text, 
.\!validate .input:invalid ~ .label .label-text,  
.\!validate *:has(.input:invalid) ~ .label, 
.\!validate *:has(.input:invalid) ~ .label-text, 
.\!validate *:has(.input:invalid) ~ .label .label-text {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1))) !important;
}

 



.validate .label:has(+ * .\!input:invalid) > *, 
.validate .label-text:has(+ * .\!input:invalid), 
.validate .label-text:has(~ .\!input:invalid), 
.validate .label:has(~ .\!input:invalid) > *, 


.validate .\!input:invalid ~ .label, 
.validate .\!input:invalid ~ .label.label-text, 
.validate .\!input:invalid ~ .label .label-text,  
.validate *:has(.\!input:invalid) ~ .label, 
.validate *:has(.\!input:invalid) ~ .label-text, 
.validate *:has(.\!input:invalid) ~ .label .label-text {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1))) !important;
}

.\!input:focus.is-invalid ~ .input-floating-label,
.\!input:focus.is-invalid ~ .input-filled-label {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1))) !important;
}

.input:focus.is-invalid ~ .input-floating-label,
.input:focus.is-invalid ~ .input-filled-label {
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}

.\!input:focus.is-invalid ~ .input-floating-label,
.\!input:focus.is-invalid ~ .input-filled-label {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1))) !important;
}

.\!validate *:has(> .input:valid) ~ .success-message,
.\!validate *:has(> .input:valid)  > * > .success-message,

.\!validate .input:valid ~ .success-message,
.\!validate .input:valid  + * > .success-message {
  display: block !important;
}

.validate *:has(> .\!input:valid) ~ .success-message,
.validate *:has(> .\!input:valid)  > * > .success-message,

.validate .\!input:valid ~ .success-message,
.validate .\!input:valid  + * > .success-message {
  display: block !important;
}

.validate *:has(> .input:valid) ~ .success-message,
.validate *:has(> .input:valid)  > * > .success-message,

.validate .input:valid ~ .success-message,
.validate .input:valid  + * > .success-message {
  display: block;
}

.\!validate *:has(> .input:valid) ~ .success-message,
.\!validate *:has(> .input:valid)  > * > .success-message,

.\!validate .input:valid ~ .success-message,
.\!validate .input:valid  + * > .success-message {
  display: block !important;
}

.validate *:has(> .\!input:valid) ~ .success-message,
.validate *:has(> .\!input:valid)  > * > .success-message,

.validate .\!input:valid ~ .success-message,
.validate .\!input:valid  + * > .success-message {
  display: block !important;
}

.\!validate *:has(> .input:valid) ~ .success-message,
.\!validate *:has(> .input:valid)  > * > .success-message,

.\!validate .input:valid ~ .success-message,
.\!validate .input:valid  + * > .success-message {
  display: block !important;
}

.validate *:has(> .\!input:valid) ~ .success-message,
.validate *:has(> .\!input:valid)  > * > .success-message,

.validate .\!input:valid ~ .success-message,
.validate .\!input:valid  + * > .success-message {
  display: block !important;
}

.\!validate *:has(> .input:valid) ~ .success-message,
.\!validate *:has(> .input:valid)  > * > .success-message,

.\!validate .input:valid ~ .success-message,
.\!validate .input:valid  + * > .success-message {
  display: block !important;
}

.validate *:has(> .\!input:valid) ~ .success-message,
.validate *:has(> .\!input:valid)  > * > .success-message,

.validate .\!input:valid ~ .success-message,
.validate .\!input:valid  + * > .success-message {
  display: block !important;
}

.error-message {
  display: none;
  font-size: 0.875rem;
  line-height: 1.25rem;
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}

.\!validate *:has(> .input:invalid) ~ .error-message,
.\!validate *:has(> .input:invalid) > * > .error-message,

.\!validate .input:invalid ~ .error-message,
.\!validate .input:invalid + * > .error-message {
  display: block !important;
}

.validate *:has(> .\!input:invalid) ~ .error-message,
.validate *:has(> .\!input:invalid) > * > .error-message,

.validate .\!input:invalid ~ .error-message,
.validate .\!input:invalid + * > .error-message {
  display: block !important;
}

.validate *:has(> .input:invalid) ~ .error-message,
.validate *:has(> .input:invalid) > * > .error-message,

.validate .input:invalid ~ .error-message,
.validate .input:invalid + * > .error-message {
  display: block;
}

.\!validate *:has(> .input:invalid) ~ .error-message,
.\!validate *:has(> .input:invalid) > * > .error-message,

.\!validate .input:invalid ~ .error-message,
.\!validate .input:invalid + * > .error-message {
  display: block !important;
}

.validate *:has(> .\!input:invalid) ~ .error-message,
.validate *:has(> .\!input:invalid) > * > .error-message,

.validate .\!input:invalid ~ .error-message,
.validate .\!input:invalid + * > .error-message {
  display: block !important;
}

.\!validate *:has(> .input:invalid) ~ .error-message,
.\!validate *:has(> .input:invalid) > * > .error-message,

.\!validate .input:invalid ~ .error-message,
.\!validate .input:invalid + * > .error-message {
  display: block !important;
}

.validate *:has(> .\!input:invalid) ~ .error-message,
.validate *:has(> .\!input:invalid) > * > .error-message,

.validate .\!input:invalid ~ .error-message,
.validate .\!input:invalid + * > .error-message {
  display: block !important;
}

.\!validate *:has(> .input:invalid) ~ .error-message,
.\!validate *:has(> .input:invalid) > * > .error-message,

.\!validate .input:invalid ~ .error-message,
.\!validate .input:invalid + * > .error-message {
  display: block !important;
}

.validate *:has(> .\!input:invalid) ~ .error-message,
.validate *:has(> .\!input:invalid) > * > .error-message,

.validate .\!input:invalid ~ .error-message,
.validate .\!input:invalid + * > .error-message {
  display: block !important;
}

.\!validate .input-group > .input:valid,
.\!validate .input-group > .input:invalid,
.\!validate .input-group > * > .input:valid,
.\!validate .input-group > * > .input:invalid {
  border-width: 0px !important;
}

.validate .input-group > .input:valid,
.input-group > .input:valid,
.validate .input-group > .input:invalid,
.input-group > .input:invalid,
.validate .input-group > * > .input:valid,
.input-group > * > .input:valid,
.validate .input-group > * > .input:invalid,
.input-group > * > .input:invalid,
.input-group > .input.is-valid,
.input-group > .input.is-invalid,
.input-group > * > .input.is-valid,
.input-group > * > .input.is-invalid {
  border-width: 0px;
}

.validate .input-group > .\!input:valid,
.input-group > .\!input:valid,
.validate .input-group > .\!input:invalid,
.input-group > .\!input:invalid,
.validate .input-group > * > .\!input:valid,
.input-group > * > .\!input:valid,
.validate .input-group > * > .\!input:invalid,
.input-group > * > .\!input:invalid,
.input-group > .\!input.is-valid,
.input-group > .\!input.is-invalid,
.input-group > * > .\!input.is-valid,
.input-group > * > .\!input.is-invalid {
  border-width: 0px !important;
}

.\!validate .input-group > .input:valid,
.\!validate .input-group > .input:invalid,
.\!validate .input-group > * > .input:valid,
.\!validate .input-group > * > .input:invalid {
  border-width: 0px !important;
}

.validate .input-group > .\!input:valid,
.input-group > .\!input:valid,
.validate .input-group > .\!input:invalid,
.input-group > .\!input:invalid,
.validate .input-group > * > .\!input:valid,
.input-group > * > .\!input:valid,
.validate .input-group > * > .\!input:invalid,
.input-group > * > .\!input:invalid,
.input-group > .\!input.is-valid,
.input-group > .\!input.is-invalid,
.input-group > * > .\!input.is-valid,
.input-group > * > .\!input.is-invalid {
  border-width: 0px !important;
}

.\!validate .input-group > .input:valid,
.\!validate .input-group > .input:invalid,
.\!validate .input-group > * > .input:valid,
.\!validate .input-group > * > .input:invalid {
  border-width: 0px !important;
}

.validate .input-group > .\!input:valid,
.input-group > .\!input:valid,
.validate .input-group > .\!input:invalid,
.input-group > .\!input:invalid,
.validate .input-group > * > .\!input:valid,
.input-group > * > .\!input:valid,
.validate .input-group > * > .\!input:invalid,
.input-group > * > .\!input:invalid,
.input-group > .\!input.is-valid,
.input-group > .\!input.is-invalid,
.input-group > * > .\!input.is-valid,
.input-group > * > .\!input.is-invalid {
  border-width: 0px !important;
}

.\!validate .input-group > .input:valid,
.\!validate .input-group > .input:invalid,
.\!validate .input-group > * > .input:valid,
.\!validate .input-group > * > .input:invalid {
  border-width: 0px !important;
}

.validate .input-group > .\!input:valid,
.input-group > .\!input:valid,
.validate .input-group > .\!input:invalid,
.input-group > .\!input:invalid,
.validate .input-group > * > .\!input:valid,
.input-group > * > .\!input:valid,
.validate .input-group > * > .\!input:invalid,
.input-group > * > .\!input:invalid,
.input-group > .\!input.is-valid,
.input-group > .\!input.is-invalid,
.input-group > * > .\!input.is-valid,
.input-group > * > .\!input.is-invalid {
  border-width: 0px !important;
}

.\!validate .input-group > .input:valid:focus-within,
.\!validate .input-group > .input:invalid:focus-within,
.\!validate .input-group > * > .input:valid:focus-within,
.\!validate .input-group > * > .input:invalid:focus-within {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color) !important;
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color) !important;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000) !important;
}

.validate .input-group > .input:valid:focus-within,
.input-group > .input:valid:focus-within,
.validate .input-group > .input:invalid:focus-within,
.input-group > .input:invalid:focus-within,
.validate .input-group > * > .input:valid:focus-within,
.input-group > * > .input:valid:focus-within,
.validate .input-group > * > .input:invalid:focus-within,
.input-group > * > .input:invalid:focus-within,
.input-group > .input.is-valid:focus-within,
.input-group > .input.is-invalid:focus-within,
.input-group > * > .input.is-valid:focus-within,
.input-group > * > .input.is-invalid:focus-within {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.validate .input-group > .\!input:valid:focus-within,
.input-group > .\!input:valid:focus-within,
.validate .input-group > .\!input:invalid:focus-within,
.input-group > .\!input:invalid:focus-within,
.validate .input-group > * > .\!input:valid:focus-within,
.input-group > * > .\!input:valid:focus-within,
.validate .input-group > * > .\!input:invalid:focus-within,
.input-group > * > .\!input:invalid:focus-within,
.input-group > .\!input.is-valid:focus-within,
.input-group > .\!input.is-invalid:focus-within,
.input-group > * > .\!input.is-valid:focus-within,
.input-group > * > .\!input.is-invalid:focus-within {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color) !important;
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color) !important;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000) !important;
}

.\!validate .input-group > .input:valid:focus-within,
.\!validate .input-group > .input:invalid:focus-within,
.\!validate .input-group > * > .input:valid:focus-within,
.\!validate .input-group > * > .input:invalid:focus-within {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color) !important;
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color) !important;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000) !important;
}

.validate .input-group > .\!input:valid:focus-within,
.input-group > .\!input:valid:focus-within,
.validate .input-group > .\!input:invalid:focus-within,
.input-group > .\!input:invalid:focus-within,
.validate .input-group > * > .\!input:valid:focus-within,
.input-group > * > .\!input:valid:focus-within,
.validate .input-group > * > .\!input:invalid:focus-within,
.input-group > * > .\!input:invalid:focus-within,
.input-group > .\!input.is-valid:focus-within,
.input-group > .\!input.is-invalid:focus-within,
.input-group > * > .\!input.is-valid:focus-within,
.input-group > * > .\!input.is-invalid:focus-within {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color) !important;
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color) !important;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000) !important;
}

.\!validate .input-group > .input:valid:focus-within,
.\!validate .input-group > .input:invalid:focus-within,
.\!validate .input-group > * > .input:valid:focus-within,
.\!validate .input-group > * > .input:invalid:focus-within {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color) !important;
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color) !important;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000) !important;
}

.validate .input-group > .\!input:valid:focus-within,
.input-group > .\!input:valid:focus-within,
.validate .input-group > .\!input:invalid:focus-within,
.input-group > .\!input:invalid:focus-within,
.validate .input-group > * > .\!input:valid:focus-within,
.input-group > * > .\!input:valid:focus-within,
.validate .input-group > * > .\!input:invalid:focus-within,
.input-group > * > .\!input:invalid:focus-within,
.input-group > .\!input.is-valid:focus-within,
.input-group > .\!input.is-invalid:focus-within,
.input-group > * > .\!input.is-valid:focus-within,
.input-group > * > .\!input.is-invalid:focus-within {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color) !important;
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color) !important;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000) !important;
}

.\!validate .input-group > .input:valid:focus-within,
.\!validate .input-group > .input:invalid:focus-within,
.\!validate .input-group > * > .input:valid:focus-within,
.\!validate .input-group > * > .input:invalid:focus-within {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color) !important;
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color) !important;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000) !important;
}

.validate .input-group > .\!input:valid:focus-within,
.input-group > .\!input:valid:focus-within,
.validate .input-group > .\!input:invalid:focus-within,
.input-group > .\!input:invalid:focus-within,
.validate .input-group > * > .\!input:valid:focus-within,
.input-group > * > .\!input:valid:focus-within,
.validate .input-group > * > .\!input:invalid:focus-within,
.input-group > * > .\!input:invalid:focus-within,
.input-group > .\!input.is-valid:focus-within,
.input-group > .\!input.is-invalid:focus-within,
.input-group > * > .\!input.is-valid:focus-within,
.input-group > * > .\!input.is-invalid:focus-within {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color) !important;
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color) !important;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000) !important;
}

.\!validate .input-group > .input:valid:focus,
.\!validate .input-group > .input:invalid:focus,
.\!validate .input-group > * > .input:valid:focus,
.\!validate .input-group > * > .input:invalid:focus {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color) !important;
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color) !important;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000) !important;
}

.validate .input-group > .input:valid:focus,
.input-group > .input:valid:focus,
.validate .input-group > .input:invalid:focus,
.input-group > .input:invalid:focus,
.validate .input-group > * > .input:valid:focus,
.input-group > * > .input:valid:focus,
.validate .input-group > * > .input:invalid:focus,
.input-group > * > .input:invalid:focus,
.input-group > .input.is-valid:focus,
.input-group > .input.is-invalid:focus,
.input-group > * > .input.is-valid:focus,
.input-group > * > .input.is-invalid:focus {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.validate .input-group > .\!input:valid:focus,
.input-group > .\!input:valid:focus,
.validate .input-group > .\!input:invalid:focus,
.input-group > .\!input:invalid:focus,
.validate .input-group > * > .\!input:valid:focus,
.input-group > * > .\!input:valid:focus,
.validate .input-group > * > .\!input:invalid:focus,
.input-group > * > .\!input:invalid:focus,
.input-group > .\!input.is-valid:focus,
.input-group > .\!input.is-invalid:focus,
.input-group > * > .\!input.is-valid:focus,
.input-group > * > .\!input.is-invalid:focus {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color) !important;
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color) !important;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000) !important;
}

.\!validate .input-group > .input:valid:focus,
.\!validate .input-group > .input:invalid:focus,
.\!validate .input-group > * > .input:valid:focus,
.\!validate .input-group > * > .input:invalid:focus {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color) !important;
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color) !important;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000) !important;
}

.validate .input-group > .\!input:valid:focus,
.input-group > .\!input:valid:focus,
.validate .input-group > .\!input:invalid:focus,
.input-group > .\!input:invalid:focus,
.validate .input-group > * > .\!input:valid:focus,
.input-group > * > .\!input:valid:focus,
.validate .input-group > * > .\!input:invalid:focus,
.input-group > * > .\!input:invalid:focus,
.input-group > .\!input.is-valid:focus,
.input-group > .\!input.is-invalid:focus,
.input-group > * > .\!input.is-valid:focus,
.input-group > * > .\!input.is-invalid:focus {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color) !important;
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color) !important;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000) !important;
}

.\!validate .input-group > .input:valid:focus,
.\!validate .input-group > .input:invalid:focus,
.\!validate .input-group > * > .input:valid:focus,
.\!validate .input-group > * > .input:invalid:focus {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color) !important;
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color) !important;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000) !important;
}

.validate .input-group > .\!input:valid:focus,
.input-group > .\!input:valid:focus,
.validate .input-group > .\!input:invalid:focus,
.input-group > .\!input:invalid:focus,
.validate .input-group > * > .\!input:valid:focus,
.input-group > * > .\!input:valid:focus,
.validate .input-group > * > .\!input:invalid:focus,
.input-group > * > .\!input:invalid:focus,
.input-group > .\!input.is-valid:focus,
.input-group > .\!input.is-invalid:focus,
.input-group > * > .\!input.is-valid:focus,
.input-group > * > .\!input.is-invalid:focus {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color) !important;
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color) !important;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000) !important;
}

.\!validate .input-group > .input:valid:focus,
.\!validate .input-group > .input:invalid:focus,
.\!validate .input-group > * > .input:valid:focus,
.\!validate .input-group > * > .input:invalid:focus {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color) !important;
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color) !important;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000) !important;
}

.validate .input-group > .\!input:valid:focus,
.input-group > .\!input:valid:focus,
.validate .input-group > .\!input:invalid:focus,
.input-group > .\!input:invalid:focus,
.validate .input-group > * > .\!input:valid:focus,
.input-group > * > .\!input:valid:focus,
.validate .input-group > * > .\!input:invalid:focus,
.input-group > * > .\!input:invalid:focus,
.input-group > .\!input.is-valid:focus,
.input-group > .\!input.is-invalid:focus,
.input-group > * > .\!input.is-valid:focus,
.input-group > * > .\!input.is-invalid:focus {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color) !important;
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color) !important;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000) !important;
}

.input-group:has(.is-valid),
  .validate .input-group:has(.input:valid) {
  --tw-border-opacity: 1;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1)));
}


  .\!validate .input-group:has(.input:valid) {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1))) !important;
}


  .validate .input-group:has(.\!input:valid) {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1))) !important;
}

.input-group:has(.is-valid):has(:focus),
    .input-group:has(.is-valid):has(:focus-within),
    .validate .input-group:has(.input:valid):has(:focus),
    .validate .input-group:has(.input:valid):has(:focus-within) {
  --tw-border-opacity: 1;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1)));
  --tw-shadow: 0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22));
  --tw-shadow: var(--tw-shadow-colored);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-shadow-color: var(--fallback-su,oklch(var(--su)/0.22));
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  --tw-ring-opacity: 1;
  --tw-ring-color: var(--fallback-su,oklch(var(--su)/var(--tw-ring-opacity, 1)));
}


    .\!validate .input-group:has(.input:valid):has(:focus),
    .\!validate .input-group:has(.input:valid):has(:focus-within) {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1))) !important;
  --tw-shadow: 0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22)) !important;
  --tw-shadow: var(--tw-shadow-colored) !important;
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color) !important;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow) !important;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000) !important;
  --tw-shadow-color: var(--fallback-su,oklch(var(--su)/0.22)) !important;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color) !important;
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color) !important;
  --tw-ring-opacity: 1 !important;
  --tw-ring-color: var(--fallback-su,oklch(var(--su)/var(--tw-ring-opacity, 1))) !important;
}


    .validate .input-group:has(.\!input:valid):has(:focus),
    .validate .input-group:has(.\!input:valid):has(:focus-within) {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1))) !important;
  --tw-shadow: 0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22)) !important;
  --tw-shadow: var(--tw-shadow-colored) !important;
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color) !important;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow) !important;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000) !important;
  --tw-shadow-color: var(--fallback-su,oklch(var(--su)/0.22)) !important;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color) !important;
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color) !important;
  --tw-ring-opacity: 1 !important;
  --tw-ring-color: var(--fallback-su,oklch(var(--su)/var(--tw-ring-opacity, 1))) !important;
}


    .\!validate .input-group:has(.input:valid):has(:focus),
    .\!validate .input-group:has(.input:valid):has(:focus-within) {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1))) !important;
  --tw-shadow: 0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22)) !important;
  --tw-shadow: var(--tw-shadow-colored) !important;
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color) !important;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow) !important;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000) !important;
  --tw-shadow-color: var(--fallback-su,oklch(var(--su)/0.22)) !important;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color) !important;
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color) !important;
  --tw-ring-opacity: 1 !important;
  --tw-ring-color: var(--fallback-su,oklch(var(--su)/var(--tw-ring-opacity, 1))) !important;
}


    .validate .input-group:has(.\!input:valid):has(:focus),
    .validate .input-group:has(.\!input:valid):has(:focus-within) {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1))) !important;
  --tw-shadow: 0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22)) !important;
  --tw-shadow: var(--tw-shadow-colored) !important;
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color) !important;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow) !important;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000) !important;
  --tw-shadow-color: var(--fallback-su,oklch(var(--su)/0.22)) !important;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color) !important;
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color) !important;
  --tw-ring-opacity: 1 !important;
  --tw-ring-color: var(--fallback-su,oklch(var(--su)/var(--tw-ring-opacity, 1))) !important;
}

.input-group:has(.is-invalid),
  .validate .input-group:has(.input:invalid) {
  --tw-border-opacity: 1;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1)));
}


  .\!validate .input-group:has(.input:invalid) {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1))) !important;
}


  .validate .input-group:has(.\!input:invalid) {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1))) !important;
}

.input-group:has(.is-invalid):has(:focus),
    .input-group:has(.is-invalid):has(:focus-within),
    .validate .input-group:has(.input:invalid):has(:focus),
    .validate .input-group:has(.input:invalid):has(:focus-within) {
  --tw-border-opacity: 1;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1)));
  --tw-shadow: 0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22));
  --tw-shadow: var(--tw-shadow-colored);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-shadow-color: var(--fallback-er,oklch(var(--er)/0.22));
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  --tw-ring-opacity: 1;
  --tw-ring-color: var(--fallback-er,oklch(var(--er)/var(--tw-ring-opacity, 1)));
}


    .\!validate .input-group:has(.input:invalid):has(:focus),
    .\!validate .input-group:has(.input:invalid):has(:focus-within) {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1))) !important;
  --tw-shadow: 0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22)) !important;
  --tw-shadow: var(--tw-shadow-colored) !important;
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color) !important;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow) !important;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000) !important;
  --tw-shadow-color: var(--fallback-er,oklch(var(--er)/0.22)) !important;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color) !important;
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color) !important;
  --tw-ring-opacity: 1 !important;
  --tw-ring-color: var(--fallback-er,oklch(var(--er)/var(--tw-ring-opacity, 1))) !important;
}


    .validate .input-group:has(.\!input:invalid):has(:focus),
    .validate .input-group:has(.\!input:invalid):has(:focus-within) {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1))) !important;
  --tw-shadow: 0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22)) !important;
  --tw-shadow: var(--tw-shadow-colored) !important;
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color) !important;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow) !important;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000) !important;
  --tw-shadow-color: var(--fallback-er,oklch(var(--er)/0.22)) !important;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color) !important;
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color) !important;
  --tw-ring-opacity: 1 !important;
  --tw-ring-color: var(--fallback-er,oklch(var(--er)/var(--tw-ring-opacity, 1))) !important;
}


    .\!validate .input-group:has(.input:invalid):has(:focus),
    .\!validate .input-group:has(.input:invalid):has(:focus-within) {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1))) !important;
  --tw-shadow: 0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22)) !important;
  --tw-shadow: var(--tw-shadow-colored) !important;
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color) !important;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow) !important;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000) !important;
  --tw-shadow-color: var(--fallback-er,oklch(var(--er)/0.22)) !important;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color) !important;
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color) !important;
  --tw-ring-opacity: 1 !important;
  --tw-ring-color: var(--fallback-er,oklch(var(--er)/var(--tw-ring-opacity, 1))) !important;
}


    .validate .input-group:has(.\!input:invalid):has(:focus),
    .validate .input-group:has(.\!input:invalid):has(:focus-within) {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1))) !important;
  --tw-shadow: 0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22)) !important;
  --tw-shadow: var(--tw-shadow-colored) !important;
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color) !important;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow) !important;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000) !important;
  --tw-shadow-color: var(--fallback-er,oklch(var(--er)/0.22)) !important;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color) !important;
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color) !important;
  --tw-ring-opacity: 1 !important;
  --tw-ring-color: var(--fallback-er,oklch(var(--er)/var(--tw-ring-opacity, 1))) !important;
}

.input-group-filled:has(.is-valid),
  .validate .input-group-filled:has(.input:valid) {
  --tw-border-opacity: 1;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1)));
}


  .\!validate .input-group-filled:has(.input:valid) {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1))) !important;
}


  .validate .input-group-filled:has(.\!input:valid) {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1))) !important;
}

.input-group-filled:has(.is-valid):focus ~ .input-filled-focused,
    .input-group-filled:has(.is-valid):focus-within ~ .input-filled-focused,
    .validate .input-group-filled:has(.input:valid):focus ~ .input-filled-focused,
    .validate .input-group-filled:has(.input:valid):focus-within ~ .input-filled-focused {
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity, 1)));
}


    .\!validate .input-group-filled:has(.input:valid):focus ~ .input-filled-focused,
    .\!validate .input-group-filled:has(.input:valid):focus-within ~ .input-filled-focused {
  --tw-scale-x: 1 !important;
  --tw-scale-y: 1 !important;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)) !important;
  --tw-bg-opacity: 1 !important;
  background-color: var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity, 1))) !important;
}


    .validate .input-group-filled:has(.\!input:valid):focus ~ .input-filled-focused,
    .validate .input-group-filled:has(.\!input:valid):focus-within ~ .input-filled-focused {
  --tw-scale-x: 1 !important;
  --tw-scale-y: 1 !important;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)) !important;
  --tw-bg-opacity: 1 !important;
  background-color: var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity, 1))) !important;
}


    .\!validate .input-group-filled:has(.input:valid):focus ~ .input-filled-focused,
    .\!validate .input-group-filled:has(.input:valid):focus-within ~ .input-filled-focused {
  --tw-scale-x: 1 !important;
  --tw-scale-y: 1 !important;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)) !important;
  --tw-bg-opacity: 1 !important;
  background-color: var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity, 1))) !important;
}


    .validate .input-group-filled:has(.\!input:valid):focus ~ .input-filled-focused,
    .validate .input-group-filled:has(.\!input:valid):focus-within ~ .input-filled-focused {
  --tw-scale-x: 1 !important;
  --tw-scale-y: 1 !important;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)) !important;
  --tw-bg-opacity: 1 !important;
  background-color: var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity, 1))) !important;
}

.input-group-filled:has(.is-invalid),
  .validate .input-group-filled:has(.input:invalid) {
  --tw-border-opacity: 1;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1)));
}


  .\!validate .input-group-filled:has(.input:invalid) {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1))) !important;
}


  .validate .input-group-filled:has(.\!input:invalid) {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1))) !important;
}

.input-group-filled:has(.is-invalid):focus ~ .input-filled-focused,
    .input-group-filled:has(.is-invalid):focus-within ~ .input-filled-focused,
    .validate .input-group-filled:has(.input:invalid):focus ~ .input-filled-focused,
    .validate .input-group-filled:has(.input:invalid):focus-within ~ .input-filled-focused {
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity, 1)));
}


    .\!validate .input-group-filled:has(.input:invalid):focus ~ .input-filled-focused,
    .\!validate .input-group-filled:has(.input:invalid):focus-within ~ .input-filled-focused {
  --tw-scale-x: 1 !important;
  --tw-scale-y: 1 !important;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)) !important;
  --tw-bg-opacity: 1 !important;
  background-color: var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity, 1))) !important;
}


    .validate .input-group-filled:has(.\!input:invalid):focus ~ .input-filled-focused,
    .validate .input-group-filled:has(.\!input:invalid):focus-within ~ .input-filled-focused {
  --tw-scale-x: 1 !important;
  --tw-scale-y: 1 !important;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)) !important;
  --tw-bg-opacity: 1 !important;
  background-color: var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity, 1))) !important;
}


    .\!validate .input-group-filled:has(.input:invalid):focus ~ .input-filled-focused,
    .\!validate .input-group-filled:has(.input:invalid):focus-within ~ .input-filled-focused {
  --tw-scale-x: 1 !important;
  --tw-scale-y: 1 !important;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)) !important;
  --tw-bg-opacity: 1 !important;
  background-color: var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity, 1))) !important;
}


    .validate .input-group-filled:has(.\!input:invalid):focus ~ .input-filled-focused,
    .validate .input-group-filled:has(.\!input:invalid):focus-within ~ .input-filled-focused {
  --tw-scale-x: 1 !important;
  --tw-scale-y: 1 !important;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)) !important;
  --tw-bg-opacity: 1 !important;
  background-color: var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity, 1))) !important;
}

.join .btn {
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.join > :where(*:not(:first-child)) {
  margin-top: 0px;
  margin-bottom: 0px;
  margin-inline-start: -1px;
}

.join > :where(*:not(:first-child)):is(.btn) {
  margin-inline-start: calc(var(--border-btn) * -1);
}

.join-item:focus {
  isolation: isolate;
}

.link-primary {
  --tw-text-opacity: 1;
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
}

@supports (color:color-mix(in oklab,black,black)) {
  @media (hover:hover) {
    .link-primary:hover {
      color: color-mix(in oklab,var(--fallback-p,oklch(var(--p)/1)) 80%,black);
    }

    .link-secondary:hover {
      color: color-mix(in oklab,var(--fallback-s,oklch(var(--s)/1)) 80%,black);
    }

    .link-accent:hover {
      color: color-mix(in oklab,var(--fallback-a,oklch(var(--a)/1)) 80%,black);
    }

    .link-neutral:hover {
      color: color-mix(in oklab,var(--fallback-n,oklch(var(--n)/1)) 80%,black);
    }

    .link-success:hover {
      color: color-mix(in oklab,var(--fallback-su,oklch(var(--su)/1)) 80%,black);
    }

    .link-info:hover {
      color: color-mix(in oklab,var(--fallback-in,oklch(var(--in)/1)) 80%,black);
    }

    .link-warning:hover {
      color: color-mix(in oklab,var(--fallback-wa,oklch(var(--wa)/1)) 80%,black);
    }

    .link-error:hover {
      color: color-mix(in oklab,var(--fallback-er,oklch(var(--er)/1)) 80%,black);
    }
  }
}

.link-secondary {
  --tw-text-opacity: 1;
  color: var(--fallback-s,oklch(var(--s)/var(--tw-text-opacity, 1)));
}

.link-accent {
  --tw-text-opacity: 1;
  color: var(--fallback-a,oklch(var(--a)/var(--tw-text-opacity, 1)));
}

.link-neutral {
  --tw-text-opacity: 1;
  color: var(--fallback-n,oklch(var(--n)/var(--tw-text-opacity, 1)));
}

.link-success {
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
}

.link-info {
  --tw-text-opacity: 1;
  color: var(--fallback-in,oklch(var(--in)/var(--tw-text-opacity, 1)));
}

.link-warning {
  --tw-text-opacity: 1;
  color: var(--fallback-wa,oklch(var(--wa)/var(--tw-text-opacity, 1)));
}

.link-error {
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}

.link:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.link:focus-visible {
  outline: 2px solid currentColor;
  outline-offset: 2px;
}

.link.disabled,
  .link[disabled],
  .link:disabled {
  pointer-events: none;
  opacity: 0.4;
}

.loading {
  pointer-events: none;
  display: inline-block;
  aspect-ratio: 1 / 1;
  width: 1.5rem;
  background-color: currentColor;
  -webkit-mask-size: 100%;
          mask-size: 100%;
  -webkit-mask-repeat: no-repeat;
          mask-repeat: no-repeat;
  -webkit-mask-position: center;
          mask-position: center;
  -webkit-mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' stroke='%23000' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cstyle%3E.spinner_V8m1%7Btransform-origin:center;animation:spinner_zKoa 2s linear infinite%7D.spinner_V8m1 circle%7Bstroke-linecap:round;animation:spinner_YpZS 1.5s ease-out infinite%7D%40keyframes spinner_zKoa%7B100%25%7Btransform:rotate(360deg)%7D%7D%40keyframes spinner_YpZS%7B0%25%7Bstroke-dasharray:0 150;stroke-dashoffset:0%7D47.5%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-16%7D95%25%2C100%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-59%7D%7D%3C%2Fstyle%3E%3Cg class='spinner_V8m1'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3'%3E%3C%2Fcircle%3E%3C%2Fg%3E%3C%2Fsvg%3E");
          mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' stroke='%23000' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cstyle%3E.spinner_V8m1%7Btransform-origin:center;animation:spinner_zKoa 2s linear infinite%7D.spinner_V8m1 circle%7Bstroke-linecap:round;animation:spinner_YpZS 1.5s ease-out infinite%7D%40keyframes spinner_zKoa%7B100%25%7Btransform:rotate(360deg)%7D%7D%40keyframes spinner_YpZS%7B0%25%7Bstroke-dasharray:0 150;stroke-dashoffset:0%7D47.5%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-16%7D95%25%2C100%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-59%7D%7D%3C%2Fstyle%3E%3Cg class='spinner_V8m1'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3'%3E%3C%2Fcircle%3E%3C%2Fg%3E%3C%2Fsvg%3E");
}

.loading-spinner {
  -webkit-mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' stroke='%23000' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cstyle%3E.spinner_V8m1%7Btransform-origin:center;animation:spinner_zKoa 2s linear infinite%7D.spinner_V8m1 circle%7Bstroke-linecap:round;animation:spinner_YpZS 1.5s ease-out infinite%7D%40keyframes spinner_zKoa%7B100%25%7Btransform:rotate(360deg)%7D%7D%40keyframes spinner_YpZS%7B0%25%7Bstroke-dasharray:0 150;stroke-dashoffset:0%7D47.5%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-16%7D95%25%2C100%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-59%7D%7D%3C%2Fstyle%3E%3Cg class='spinner_V8m1'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3'%3E%3C%2Fcircle%3E%3C%2Fg%3E%3C%2Fsvg%3E");
          mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' stroke='%23000' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cstyle%3E.spinner_V8m1%7Btransform-origin:center;animation:spinner_zKoa 2s linear infinite%7D.spinner_V8m1 circle%7Bstroke-linecap:round;animation:spinner_YpZS 1.5s ease-out infinite%7D%40keyframes spinner_zKoa%7B100%25%7Btransform:rotate(360deg)%7D%7D%40keyframes spinner_YpZS%7B0%25%7Bstroke-dasharray:0 150;stroke-dashoffset:0%7D47.5%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-16%7D95%25%2C100%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-59%7D%7D%3C%2Fstyle%3E%3Cg class='spinner_V8m1'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3'%3E%3C%2Fcircle%3E%3C%2Fg%3E%3C%2Fsvg%3E");
}

.loading-dots {
  -webkit-mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cstyle%3E.spinner_qM83%7Banimation:spinner_8HQG 1.05s infinite%7D.spinner_oXPr%7Banimation-delay:.1s%7D.spinner_ZTLf%7Banimation-delay:.2s%7D@keyframes spinner_8HQG%7B0%25,57.14%25%7Banimation-timing-function:cubic-bezier(0.33,.66,.66,1);transform:translate(0)%7D28.57%25%7Banimation-timing-function:cubic-bezier(0.33,0,.66,.33);transform:translateY(-6px)%7D100%25%7Btransform:translate(0)%7D%7D%3C/style%3E%3Ccircle class='spinner_qM83' cx='4' cy='12' r='3'/%3E%3Ccircle class='spinner_qM83 spinner_oXPr' cx='12' cy='12' r='3'/%3E%3Ccircle class='spinner_qM83 spinner_ZTLf' cx='20' cy='12' r='3'/%3E%3C/svg%3E");
          mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cstyle%3E.spinner_qM83%7Banimation:spinner_8HQG 1.05s infinite%7D.spinner_oXPr%7Banimation-delay:.1s%7D.spinner_ZTLf%7Banimation-delay:.2s%7D@keyframes spinner_8HQG%7B0%25,57.14%25%7Banimation-timing-function:cubic-bezier(0.33,.66,.66,1);transform:translate(0)%7D28.57%25%7Banimation-timing-function:cubic-bezier(0.33,0,.66,.33);transform:translateY(-6px)%7D100%25%7Btransform:translate(0)%7D%7D%3C/style%3E%3Ccircle class='spinner_qM83' cx='4' cy='12' r='3'/%3E%3Ccircle class='spinner_qM83 spinner_oXPr' cx='12' cy='12' r='3'/%3E%3Ccircle class='spinner_qM83 spinner_ZTLf' cx='20' cy='12' r='3'/%3E%3C/svg%3E");
}

.loading-ring {
  -webkit-mask-image: url("data:image/svg+xml,%3Csvg width='44' height='44' viewBox='0 0 44 44' xmlns='http://www.w3.org/2000/svg' stroke='%23fff'%3E%3Cg fill='none' fill-rule='evenodd' stroke-width='2'%3E%3Ccircle cx='22' cy='22' r='1'%3E%3Canimate attributeName='r' begin='0s' dur='1.8s' values='1; 20' calcMode='spline' keyTimes='0; 1' keySplines='0.165, 0.84, 0.44, 1' repeatCount='indefinite' /%3E%3Canimate attributeName='stroke-opacity' begin='0s' dur='1.8s' values='1; 0' calcMode='spline' keyTimes='0; 1' keySplines='0.3, 0.61, 0.355, 1' repeatCount='indefinite' /%3E%3C/circle%3E%3Ccircle cx='22' cy='22' r='1'%3E%3Canimate attributeName='r' begin='-0.9s' dur='1.8s' values='1; 20' calcMode='spline' keyTimes='0; 1' keySplines='0.165, 0.84, 0.44, 1' repeatCount='indefinite' /%3E%3Canimate attributeName='stroke-opacity' begin='-0.9s' dur='1.8s' values='1; 0' calcMode='spline' keyTimes='0; 1' keySplines='0.3, 0.61, 0.355, 1' repeatCount='indefinite' /%3E%3C/circle%3E%3C/g%3E%3C/svg%3E");
          mask-image: url("data:image/svg+xml,%3Csvg width='44' height='44' viewBox='0 0 44 44' xmlns='http://www.w3.org/2000/svg' stroke='%23fff'%3E%3Cg fill='none' fill-rule='evenodd' stroke-width='2'%3E%3Ccircle cx='22' cy='22' r='1'%3E%3Canimate attributeName='r' begin='0s' dur='1.8s' values='1; 20' calcMode='spline' keyTimes='0; 1' keySplines='0.165, 0.84, 0.44, 1' repeatCount='indefinite' /%3E%3Canimate attributeName='stroke-opacity' begin='0s' dur='1.8s' values='1; 0' calcMode='spline' keyTimes='0; 1' keySplines='0.3, 0.61, 0.355, 1' repeatCount='indefinite' /%3E%3C/circle%3E%3Ccircle cx='22' cy='22' r='1'%3E%3Canimate attributeName='r' begin='-0.9s' dur='1.8s' values='1; 20' calcMode='spline' keyTimes='0; 1' keySplines='0.165, 0.84, 0.44, 1' repeatCount='indefinite' /%3E%3Canimate attributeName='stroke-opacity' begin='-0.9s' dur='1.8s' values='1; 0' calcMode='spline' keyTimes='0; 1' keySplines='0.3, 0.61, 0.355, 1' repeatCount='indefinite' /%3E%3C/circle%3E%3C/g%3E%3C/svg%3E");
}

.loading-ball {
  -webkit-mask-image: url("data:image/svg+xml,%0A%3Csvg width='24' height='24' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cstyle%3E.spinner_rXNP%7Banimation:spinner_YeBj .8s infinite%7D@keyframes spinner_YeBj%7B0%25%7Banimation-timing-function:cubic-bezier(0.33,0,.66,.33);cy:5px%7D46.875%25%7Bcy:20px;rx:4px;ry:4px%7D50%25%7Banimation-timing-function:cubic-bezier(0.33,.66,.66,1);cy:20.5px;rx:4.8px;ry:3px%7D53.125%25%7Brx:4px;ry:4px%7D100%25%7Bcy:5px%7D%7D%3C/style%3E%3Cellipse class='spinner_rXNP' cx='12' cy='5' rx='4' ry='4'/%3E%3C/svg%3E");
          mask-image: url("data:image/svg+xml,%0A%3Csvg width='24' height='24' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cstyle%3E.spinner_rXNP%7Banimation:spinner_YeBj .8s infinite%7D@keyframes spinner_YeBj%7B0%25%7Banimation-timing-function:cubic-bezier(0.33,0,.66,.33);cy:5px%7D46.875%25%7Bcy:20px;rx:4px;ry:4px%7D50%25%7Banimation-timing-function:cubic-bezier(0.33,.66,.66,1);cy:20.5px;rx:4.8px;ry:3px%7D53.125%25%7Brx:4px;ry:4px%7D100%25%7Bcy:5px%7D%7D%3C/style%3E%3Cellipse class='spinner_rXNP' cx='12' cy='5' rx='4' ry='4'/%3E%3C/svg%3E");
}

.loading-bars {
  -webkit-mask-image: url("data:image/svg+xml,%0A%3Csvg width='24' height='24' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cstyle%3E.spinner_hzlK%7Banimation:spinner_vc4H .8s linear infinite;animation-delay:-.8s%7D.spinner_koGT%7Banimation-delay:-.65s%7D.spinner_YF1u%7Banimation-delay:-.5s%7D@keyframes spinner_vc4H%7B0%25%7By:1px;height:22px%7D93.75%25%7By:5px;height:14px;opacity:.2%7D%7D%3C/style%3E%3Crect class='spinner_hzlK' x='1' y='1' width='6' height='22'/%3E%3Crect class='spinner_hzlK spinner_koGT' x='9' y='1' width='6' height='22'/%3E%3Crect class='spinner_hzlK spinner_YF1u' x='17' y='1' width='6' height='22'/%3E%3C/svg%3E");
          mask-image: url("data:image/svg+xml,%0A%3Csvg width='24' height='24' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cstyle%3E.spinner_hzlK%7Banimation:spinner_vc4H .8s linear infinite;animation-delay:-.8s%7D.spinner_koGT%7Banimation-delay:-.65s%7D.spinner_YF1u%7Banimation-delay:-.5s%7D@keyframes spinner_vc4H%7B0%25%7By:1px;height:22px%7D93.75%25%7By:5px;height:14px;opacity:.2%7D%7D%3C/style%3E%3Crect class='spinner_hzlK' x='1' y='1' width='6' height='22'/%3E%3Crect class='spinner_hzlK spinner_koGT' x='9' y='1' width='6' height='22'/%3E%3Crect class='spinner_hzlK spinner_YF1u' x='17' y='1' width='6' height='22'/%3E%3C/svg%3E");
}

.loading-infinity {
  -webkit-mask-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' style='shape-rendering: auto;' width='200px' height='200px' viewBox='0 0 100 100' preserveAspectRatio='xMidYMid'%3E%3Cpath fill='none' stroke='%230a0a0a' stroke-width='10' stroke-dasharray='205.271142578125 51.317785644531256' d='M24.3 30C11.4 30 5 43.3 5 50s6.4 20 19.3 20c19.3 0 32.1-40 51.4-40 C88.6 30 95 43.3 95 50s-6.4 20-19.3 20C56.4 70 43.6 30 24.3 30z' stroke-linecap='round' style='transform:scale(0.8);transform-origin:50px 50px'%3E%3Canimate attributeName='stroke-dashoffset' repeatCount='indefinite' dur='2s' keyTimes='0;1' values='0;256.58892822265625'%3E%3C/animate%3E%3C/path%3E%3C/svg%3E");
          mask-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' style='shape-rendering: auto;' width='200px' height='200px' viewBox='0 0 100 100' preserveAspectRatio='xMidYMid'%3E%3Cpath fill='none' stroke='%230a0a0a' stroke-width='10' stroke-dasharray='205.271142578125 51.317785644531256' d='M24.3 30C11.4 30 5 43.3 5 50s6.4 20 19.3 20c19.3 0 32.1-40 51.4-40 C88.6 30 95 43.3 95 50s-6.4 20-19.3 20C56.4 70 43.6 30 24.3 30z' stroke-linecap='round' style='transform:scale(0.8);transform-origin:50px 50px'%3E%3Canimate attributeName='stroke-dashoffset' repeatCount='indefinite' dur='2s' keyTimes='0;1' values='0;256.58892822265625'%3E%3C/animate%3E%3C/path%3E%3C/svg%3E");
}

.loading-xs {
  width: 1rem;
}

.loading-sm {
  width: 1.25rem;
}

.loading-lg {
  width: 2.5rem;
}

.mask-squircle {
  -webkit-mask-image: url("data:image/svg+xml,%3csvg width='200' height='200' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M100 0C20 0 0 20 0 100s20 100 100 100 100-20 100-100S180 0 100 0Z'/%3e%3c/svg%3e");
          mask-image: url("data:image/svg+xml,%3csvg width='200' height='200' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M100 0C20 0 0 20 0 100s20 100 100 100 100-20 100-100S180 0 100 0Z'/%3e%3c/svg%3e");
}

.mask-decagon {
  -webkit-mask-image: url("data:image/svg+xml,%3csvg width='192' height='200' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m96 0 58.779 19.098 36.327 50v61.804l-36.327 50L96 200l-58.779-19.098-36.327-50V69.098l36.327-50z' fill-rule='evenodd'/%3e%3c/svg%3e");
          mask-image: url("data:image/svg+xml,%3csvg width='192' height='200' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m96 0 58.779 19.098 36.327 50v61.804l-36.327 50L96 200l-58.779-19.098-36.327-50V69.098l36.327-50z' fill-rule='evenodd'/%3e%3c/svg%3e");
}

.mask-diamond {
  -webkit-mask-image: url("data:image/svg+xml,%3csvg width='200' height='200' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m100 0 100 100-100 100L0 100z' fill-rule='evenodd'/%3e%3c/svg%3e");
          mask-image: url("data:image/svg+xml,%3csvg width='200' height='200' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m100 0 100 100-100 100L0 100z' fill-rule='evenodd'/%3e%3c/svg%3e");
}

.mask-heart {
  -webkit-mask-image: url("data:image/svg+xml,%3csvg width='200' height='185' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M100 184.606a15.384 15.384 0 0 1-8.653-2.678C53.565 156.28 37.205 138.695 28.182 127.7 8.952 104.264-.254 80.202.005 54.146.308 24.287 24.264 0 53.406 0c21.192 0 35.869 11.937 44.416 21.879a2.884 2.884 0 0 0 4.356 0C110.725 11.927 125.402 0 146.594 0c29.142 0 53.098 24.287 53.4 54.151.26 26.061-8.956 50.122-28.176 73.554-9.023 10.994-25.383 28.58-63.165 54.228a15.384 15.384 0 0 1-8.653 2.673Z' fill='black' fill-rule='nonzero'/%3e%3c/svg%3e");
          mask-image: url("data:image/svg+xml,%3csvg width='200' height='185' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M100 184.606a15.384 15.384 0 0 1-8.653-2.678C53.565 156.28 37.205 138.695 28.182 127.7 8.952 104.264-.254 80.202.005 54.146.308 24.287 24.264 0 53.406 0c21.192 0 35.869 11.937 44.416 21.879a2.884 2.884 0 0 0 4.356 0C110.725 11.927 125.402 0 146.594 0c29.142 0 53.098 24.287 53.4 54.151.26 26.061-8.956 50.122-28.176 73.554-9.023 10.994-25.383 28.58-63.165 54.228a15.384 15.384 0 0 1-8.653 2.673Z' fill='black' fill-rule='nonzero'/%3e%3c/svg%3e");
}

.mask-hexagon {
  -webkit-mask-image: url("data:image/svg+xml,%3csvg width='182' height='201' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M.3 65.486c0-9.196 6.687-20.063 14.211-25.078l61.86-35.946c8.36-5.016 20.899-5.016 29.258 0l61.86 35.946c8.36 5.015 14.211 15.882 14.211 25.078v71.055c0 9.196-6.687 20.063-14.211 25.079l-61.86 35.945c-8.36 4.18-20.899 4.18-29.258 0L14.51 161.62C6.151 157.44.3 145.737.3 136.54V65.486Z' fill='black' fill-rule='nonzero'/%3e%3c/svg%3e");
          mask-image: url("data:image/svg+xml,%3csvg width='182' height='201' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M.3 65.486c0-9.196 6.687-20.063 14.211-25.078l61.86-35.946c8.36-5.016 20.899-5.016 29.258 0l61.86 35.946c8.36 5.015 14.211 15.882 14.211 25.078v71.055c0 9.196-6.687 20.063-14.211 25.079l-61.86 35.945c-8.36 4.18-20.899 4.18-29.258 0L14.51 161.62C6.151 157.44.3 145.737.3 136.54V65.486Z' fill='black' fill-rule='nonzero'/%3e%3c/svg%3e");
}

.mask-hexagon-2 {
  -webkit-mask-image: url("data:image/svg+xml,%3csvg width='200' height='182' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M64.786 181.4c-9.196 0-20.063-6.687-25.079-14.21L3.762 105.33c-5.016-8.36-5.016-20.9 0-29.259l35.945-61.86C44.723 5.851 55.59 0 64.786 0h71.055c9.196 0 20.063 6.688 25.079 14.211l35.945 61.86c4.18 8.36 4.18 20.899 0 29.258l-35.945 61.86c-4.18 8.36-15.883 14.211-25.079 14.211H64.786Z' fill='black' fill-rule='nonzero'/%3e%3c/svg%3e");
          mask-image: url("data:image/svg+xml,%3csvg width='200' height='182' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M64.786 181.4c-9.196 0-20.063-6.687-25.079-14.21L3.762 105.33c-5.016-8.36-5.016-20.9 0-29.259l35.945-61.86C44.723 5.851 55.59 0 64.786 0h71.055c9.196 0 20.063 6.688 25.079 14.211l35.945 61.86c4.18 8.36 4.18 20.899 0 29.258l-35.945 61.86c-4.18 8.36-15.883 14.211-25.079 14.211H64.786Z' fill='black' fill-rule='nonzero'/%3e%3c/svg%3e");
}

.mask-circle {
  -webkit-mask-image: url("data:image/svg+xml,%3csvg width='200' height='200' xmlns='http://www.w3.org/2000/svg'%3e%3ccircle fill='black' cx='100' cy='100' r='100' fill-rule='evenodd'/%3e%3c/svg%3e");
          mask-image: url("data:image/svg+xml,%3csvg width='200' height='200' xmlns='http://www.w3.org/2000/svg'%3e%3ccircle fill='black' cx='100' cy='100' r='100' fill-rule='evenodd'/%3e%3c/svg%3e");
}

.mask-parallelogram {
  -webkit-mask-image: url("data:image/svg+xml,%3csvg width='200' height='154' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='M46.154 0H200l-46.154 153.846H0z' fill-rule='evenodd'/%3e%3c/svg%3e");
          mask-image: url("data:image/svg+xml,%3csvg width='200' height='154' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='M46.154 0H200l-46.154 153.846H0z' fill-rule='evenodd'/%3e%3c/svg%3e");
}

.mask-parallelogram-2 {
  -webkit-mask-image: url("data:image/svg+xml,%3csvg width='200' height='154' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='M153.846 0H0l46.154 153.846H200z' fill-rule='evenodd'/%3e%3c/svg%3e");
          mask-image: url("data:image/svg+xml,%3csvg width='200' height='154' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='M153.846 0H0l46.154 153.846H200z' fill-rule='evenodd'/%3e%3c/svg%3e");
}

.mask-parallelogram-3 {
  -webkit-mask-image: url("data:image/svg+xml,%3csvg width='154' height='201' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='M.077 47.077v153.846l153.846-46.154V.923z' fill-rule='evenodd'/%3e%3c/svg%3e");
          mask-image: url("data:image/svg+xml,%3csvg width='154' height='201' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='M.077 47.077v153.846l153.846-46.154V.923z' fill-rule='evenodd'/%3e%3c/svg%3e");
}

.mask-parallelogram-4 {
  -webkit-mask-image: url("data:image/svg+xml,%3csvg width='154' height='201' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='M153.923 47.077v153.846L.077 154.77V.923z' fill-rule='evenodd'/%3e%3c/svg%3e");
          mask-image: url("data:image/svg+xml,%3csvg width='154' height='201' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='M153.923 47.077v153.846L.077 154.77V.923z' fill-rule='evenodd'/%3e%3c/svg%3e");
}

.mask-pentagon {
  -webkit-mask-image: url("data:image/svg+xml,%3csvg width='192' height='181' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m96 0 95.106 69.098-36.327 111.804H37.22L.894 69.098z' fill-rule='evenodd'/%3e%3c/svg%3e");
          mask-image: url("data:image/svg+xml,%3csvg width='192' height='181' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m96 0 95.106 69.098-36.327 111.804H37.22L.894 69.098z' fill-rule='evenodd'/%3e%3c/svg%3e");
}

.mask-square {
  -webkit-mask-image: url("data:image/svg+xml,%3csvg width='200' height='200' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='M0 0h200v200H0z' fill-rule='evenodd'/%3e%3c/svg%3e");
          mask-image: url("data:image/svg+xml,%3csvg width='200' height='200' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='M0 0h200v200H0z' fill-rule='evenodd'/%3e%3c/svg%3e");
}

.mask-star {
  -webkit-mask-image: url("data:image/svg+xml,%3csvg width='192' height='180' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m96 137.263-58.779 42.024 22.163-68.389L.894 68.481l72.476-.243L96 0l22.63 68.238 72.476.243-58.49 42.417 22.163 68.389z' fill-rule='evenodd'/%3e%3c/svg%3e");
          mask-image: url("data:image/svg+xml,%3csvg width='192' height='180' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m96 137.263-58.779 42.024 22.163-68.389L.894 68.481l72.476-.243L96 0l22.63 68.238 72.476.243-58.49 42.417 22.163 68.389z' fill-rule='evenodd'/%3e%3c/svg%3e");
}

.mask-star-2 {
  -webkit-mask-image: url("data:image/svg+xml,%3csvg width='192' height='180' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m96 153.044-58.779 26.243 7.02-63.513L.894 68.481l63.117-13.01L96 0l31.989 55.472 63.117 13.01-43.347 47.292 7.02 63.513z' fill-rule='evenodd'/%3e%3c/svg%3e");
          mask-image: url("data:image/svg+xml,%3csvg width='192' height='180' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m96 153.044-58.779 26.243 7.02-63.513L.894 68.481l63.117-13.01L96 0l31.989 55.472 63.117 13.01-43.347 47.292 7.02 63.513z' fill-rule='evenodd'/%3e%3c/svg%3e");
}

.mask-triangle {
  -webkit-mask-image: url("data:image/svg+xml,%3csvg width='174' height='149' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m87 148.476-86.603.185L43.86 74.423 87 0l43.14 74.423 43.463 74.238z' fill-rule='evenodd'/%3e%3c/svg%3e");
          mask-image: url("data:image/svg+xml,%3csvg width='174' height='149' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m87 148.476-86.603.185L43.86 74.423 87 0l43.14 74.423 43.463 74.238z' fill-rule='evenodd'/%3e%3c/svg%3e");
}

.mask-triangle-2 {
  -webkit-mask-image: url("data:image/svg+xml,%3csvg width='174' height='150' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m87 .738 86.603-.184-43.463 74.238L87 149.214 43.86 74.792.397.554z' fill-rule='evenodd'/%3e%3c/svg%3e");
          mask-image: url("data:image/svg+xml,%3csvg width='174' height='150' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m87 .738 86.603-.184-43.463 74.238L87 149.214 43.86 74.792.397.554z' fill-rule='evenodd'/%3e%3c/svg%3e");
}

.mask-triangle-3 {
  -webkit-mask-image: url("data:image/svg+xml,%3csvg width='150' height='174' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m149.369 87.107.185 86.603-74.239-43.463L.893 87.107l74.422-43.14L149.554.505z' fill-rule='evenodd'/%3e%3c/svg%3e");
          mask-image: url("data:image/svg+xml,%3csvg width='150' height='174' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m149.369 87.107.185 86.603-74.239-43.463L.893 87.107l74.422-43.14L149.554.505z' fill-rule='evenodd'/%3e%3c/svg%3e");
}

.mask-triangle-4 {
  -webkit-mask-image: url("data:image/svg+xml,%3csvg width='150' height='174' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='M.631 87.107.446.505l74.239 43.462 74.422 43.14-74.422 43.14L.446 173.71z' fill-rule='evenodd'/%3e%3c/svg%3e");
          mask-image: url("data:image/svg+xml,%3csvg width='150' height='174' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='M.631 87.107.446.505l74.239 43.462 74.422 43.14-74.422 43.14L.446 173.71z' fill-rule='evenodd'/%3e%3c/svg%3e");
}

:where(.menu li:empty) {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-bc,oklch(var(--bc)/var(--tw-bg-opacity, 1)));
  opacity: 0.1;
  margin: 0.5rem 1rem;
  height: 1px;
}

.menu :where(li:not(.dropdown) ul) {
  margin-inline-start: 1rem;
  padding-inline-start: 0.5rem;
}

.menu :where(li:not(.dropdown) ul):before {
  position: absolute;
  bottom: 0.6rem;
  inset-inline-start: 0px;
  top: 0.75rem;
  width: 1px;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-bc,oklch(var(--bc)/var(--tw-bg-opacity, 1)));
  opacity: 0.1;
  content: "";
}

.menu :where(li:not(.menu-title, .tooltip) > *:not(ul, .collapse, .menu-title, .btn)) {
  border-radius: var(--rounded-btn, 0.375rem);
  padding-left: 1rem;
  padding-right: 1rem;
  padding-top: 0.625rem;
  padding-bottom: 0.625rem;
  text-align: start;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
  transition-duration: 200ms;
  text-wrap: balance;
}

.menu li.tooltip > * {
  border-radius: var(--rounded-btn, 0.375rem);
  padding-left: 1rem;
  padding-right: 1rem;
  padding-top: 0.625rem;
  padding-bottom: 0.625rem;
  text-align: start;
}

:where(.menu li:not(.menu-title, .disabled, [disabled], :disabled)) {
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
}

:where(.menu li:not(.menu-title, .disabled, [disabled], :disabled) > *:not(ul, .collapse, .menu-title)):not(.active, .btn).focus, :where(.menu li:not(.menu-title, .disabled, [disabled], :disabled) > *:not(ul, .collapse, .menu-title)):not(.active, .btn):focus, :where(.menu li:not(.menu-title, .disabled, [disabled], :disabled) > *:not(ul, .collapse, .menu-title)):not(.active, .btn):focus-visible {
  cursor: pointer;
  background-color: var(--fallback-bc,oklch(var(--bc)/0.1));
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.menu li:not(.disabled, :disabled, [disabled]) > :not(ul, .menu-title, .collapse, .btn):active,
.menu li:not(.disabled, :disabled, [disabled]) > :not(ul, .menu-title, .collapse, .btn).active {
  background-color: var(--fallback-p,oklch(var(--p)/0.1));
  --tw-text-opacity: 1;
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
}

.menu li.disabled,
.menu li:disabled,
.menu li[disabled] {
  pointer-events: none;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  opacity: 0.5;
}

.menu-title {
  padding-left: 1rem;
  padding-right: 1rem;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
  font-weight: 500;
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
}

.mockup-code:before {
  content: "";
  margin-bottom: 1rem;
  display: block;
  height: 0.75rem;
  width: 0.75rem;
  border-radius: 9999px;
  opacity: 0.3;
  box-shadow: 1.4em 0,
        2.8em 0,
        4.2em 0;
}

.mockup-code pre {
  padding-inline-end: 1.25rem;
}

.mockup-code pre:before {
  content: "";
  margin-right: 2ch;
}

.mockup-window:before {
  content: "";
  margin-bottom: 1rem;
  display: block;
  aspect-ratio: 1 / 1;
  height: 0.75rem;
  flex-shrink: 0;
  align-self: flex-start;
  border-radius: 9999px;
  opacity: 0.3;
  box-shadow: 1.4em 0,
        2.8em 0,
        4.2em 0;
}

.mockup-window:where([dir="rtl"], [dir="rtl"] *):before {
  align-self: flex-end;
}

.mockup-phone {
  display: inline-block;
  border: 4px solid #4e4d4d;
  border-radius: 50px;
  background-color: #000;
  padding: 6px;
  margin: 0 auto;
  overflow: hidden;
}

.mockup-phone .camera {
  border-radius: 9999px;
  position: relative;
  top: 1%;
  left: 0px;
  background: #000;
  height: 25px;
  width: 33%;
  margin: 0 auto;
  z-index: 11;
}

.mockup-phone .camera:after {
  content: "";
  position: absolute;
  top: 25%;
  right: 8%;
  width: 12px;
  height: 12px;
  border-radius: 5px;
  background-color: #2a292d;
}

.mockup-phone .display {
  overflow: hidden;
  border-radius: 40px;
  margin-top: -25px;
}

.mockup-browser .mockup-browser-toolbar {
  margin-top: 0.75rem;
  margin-bottom: 0.75rem;
  display: inline-flex;
  width: 100%;
  align-items: center;
  padding-inline-end: 1.4em;
  direction: ltr;
}

.mockup-browser .mockup-browser-toolbar:before {
  content: "";
  margin-inline-end: 4.8rem;
  display: inline-block;
  aspect-ratio: 1 / 1;
  height: 0.75rem;
  border-radius: 9999px;
  opacity: 0.3;
  box-shadow: 1.4em 0,
          2.8em 0,
          4.2em 0;
}

.mockup-browser .mockup-browser-toolbar .input {
  position: relative;
  margin-left: auto;
  margin-right: auto;
  display: block;
  height: 1.75rem;
  width: 24rem;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  padding-inline-start: 2rem;
  padding-top: 0.125rem;
}

.mockup-browser .mockup-browser-toolbar .\!input {
  position: relative !important;
  margin-left: auto !important;
  margin-right: auto !important;
  display: block !important;
  height: 1.75rem !important;
  width: 24rem !important;
  overflow: hidden !important;
  text-overflow: ellipsis !important;
  white-space: nowrap !important;
  padding-inline-start: 2rem !important;
  padding-top: 0.125rem !important;
}

.mockup-browser .mockup-browser-toolbar .input:before {
  content: "";
  position: absolute;
  inset-inline-start: 0.5rem;
  top: 50%;
  aspect-ratio: 1 / 1;
  height: 0.75rem;
  --tw-translate-y: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  border-radius: 9999px;
  border-width: 2px;
  border-color: currentColor;
  opacity: 0.6;
}

.mockup-browser .mockup-browser-toolbar .\!input:before {
  content: "" !important;
  position: absolute !important;
  inset-inline-start: 0.5rem !important;
  top: 50% !important;
  aspect-ratio: 1 / 1 !important;
  height: 0.75rem !important;
  --tw-translate-y: -50% !important;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)) !important;
  border-radius: 9999px !important;
  border-width: 2px !important;
  border-color: currentColor !important;
  opacity: 0.6 !important;
}

.mockup-browser .mockup-browser-toolbar .input:after {
  content: "";
  position: absolute;
  inset-inline-start: 1.25rem;
  top: 50%;
  height: 0.5rem;
  --tw-translate-y: 25%;
  --tw-rotate: -45deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  border-radius: 9999px;
  border-width: 1px;
  border-color: currentColor;
  opacity: 0.6;
}

.mockup-browser .mockup-browser-toolbar .\!input:after {
  content: "" !important;
  position: absolute !important;
  inset-inline-start: 1.25rem !important;
  top: 50% !important;
  height: 0.5rem !important;
  --tw-translate-y: 25% !important;
  --tw-rotate: -45deg !important;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)) !important;
  border-radius: 9999px !important;
  border-width: 1px !important;
  border-color: currentColor !important;
  opacity: 0.6 !important;
}

.open.modal {
  transition-duration: 500ms;
}

.open .modal {
  transition-duration: 500ms;
}

.modal::-webkit-scrollbar-thumb {
  background-color: var(--fallback-s,oklch(var(--s)/0.5));
}

.modal::-webkit-scrollbar-thumb:hover {
  background-color: var(--fallback-s,oklch(var(--s)/0.8));
}

.modal::-webkit-scrollbar-track {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity, 1)));
}

.modal::-webkit-scrollbar {
  width: 0.5rem;
}

.open.modal-dialog {
  transition-duration: 500ms;
}

.open .modal-dialog {
  transition-duration: 500ms;
}

.modal-body::-webkit-scrollbar-thumb {
  border-radius: 9999px;
  background-color: var(--fallback-s,oklch(var(--s)/0.5));
}

.modal-body::-webkit-scrollbar-thumb:hover {
  background-color: var(--fallback-s,oklch(var(--s)/0.8));
}

.modal-body::-webkit-scrollbar-track {
  border-radius: 9999px;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity, 1)));
}

:where(.modal-header) + .modal-body {
  padding-top: 0;
}

:where(.modal-body) + .modal-footer {
  padding-top: 0;
}

.pin-input::-moz-placeholder {
  color: var(--fallback-bc,oklch(var(--bc)/0.8));
}

.pin-input::placeholder {
  color: var(--fallback-bc,oklch(var(--bc)/0.8));
}

.pin-input:hover {
  border-color: var(--fallback-bc,oklch(var(--bc)/0.6));
}

.pin-input:focus,
  .pin-input:focus-within {
  --tw-border-opacity: 1;
  border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity, 1)));
  --tw-shadow: 0 4px 6px -1px var(--fallback-bs,oklch(var(--bs)/0.2));
  --tw-shadow: var(--tw-shadow-colored);
  --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-shadow-color: var(--fallback-p,oklch(var(--p)/0.2));
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  --tw-ring-opacity: 1;
  --tw-ring-color: var(--fallback-p,oklch(var(--p)/var(--tw-ring-opacity, 1)));
}

.pin-input-underline {
  border-radius: 0px;
  border-width: 0px;
  border-bottom-width: 1px;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.4));
  background-color: transparent;
}

.pin-input-underline:focus,
    .pin-input-underline:focus-within {
  border-bottom-width: 2px;
  --tw-border-opacity: 1;
  border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity, 1)));
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
}

.pin-input.disabled,
  .pin-input:disabled,
  .pin-input[disabled] {
  pointer-events: none;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.25));
  background-color: var(--fallback-bc,oklch(var(--bc)/0.05));
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

.pin-input.disabled::-moz-placeholder, .pin-input:disabled::-moz-placeholder, .pin-input[disabled]::-moz-placeholder {
  color: var(--fallback-bc,oklch(var(--bc)/0.4));
  --tw-placeholder-opacity: 0.2;
}

.pin-input.disabled::placeholder,
  .pin-input:disabled::placeholder,
  .pin-input[disabled]::placeholder {
  color: var(--fallback-bc,oklch(var(--bc)/0.4));
  --tw-placeholder-opacity: 0.2;
}

.progress-striped {
  background-image: linear-gradient(
      45deg,
      rgba(255, 255, 255, 0.15) 25%,
      transparent 25%,
      transparent 50%,
      rgba(255, 255, 255, 0.15) 50%,
      rgba(255, 255, 255, 0.15) 75%,
      transparent 75%,
      transparent
    );
  background-size: 0.75rem 0.75rem;
}

.progress-animated {
  animation: progress-bar-stripes 1s linear infinite;
}

.progress-neutral {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-n,oklch(var(--n)/var(--tw-bg-opacity, 1)));
  --tw-text-opacity: 1;
  color: var(--fallback-nc,oklch(var(--nc)/var(--tw-text-opacity, 1)));
}

.progress-primary {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity, 1)));
  --tw-text-opacity: 1;
  color: var(--fallback-pc,oklch(var(--pc)/var(--tw-text-opacity, 1)));
  --progress-color: var(--fallback-p,oklch(var(--p)/1));
}

.progress-secondary {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-s,oklch(var(--s)/var(--tw-bg-opacity, 1)));
  --tw-text-opacity: 1;
  color: var(--fallback-sc,oklch(var(--sc)/var(--tw-text-opacity, 1)));
  --progress-color: var(--fallback-s,oklch(var(--s)/1));
}

.progress-accent {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-a,oklch(var(--a)/var(--tw-bg-opacity, 1)));
  --tw-text-opacity: 1;
  color: var(--fallback-ac,oklch(var(--ac)/var(--tw-text-opacity, 1)));
  --progress-color: var(--fallback-a,oklch(var(--a)/1));
}

.progress-info {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-in,oklch(var(--in)/var(--tw-bg-opacity, 1)));
  --tw-text-opacity: 1;
  color: var(--fallback-inc,oklch(var(--inc)/var(--tw-text-opacity, 1)));
  --progress-color: var(--fallback-in,oklch(var(--in)/1));
}

.progress-success {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity, 1)));
  --tw-text-opacity: 1;
  color: var(--fallback-suc,oklch(var(--suc)/var(--tw-text-opacity, 1)));
  --progress-color: var(--fallback-su,oklch(var(--su)/1));
}

.progress-warning {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-wa,oklch(var(--wa)/var(--tw-bg-opacity, 1)));
  --tw-text-opacity: 1;
  color: var(--fallback-wac,oklch(var(--wac)/var(--tw-text-opacity, 1)));
  --progress-color: var(--fallback-wa,oklch(var(--wa)/1));
}

.progress-error {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity, 1)));
  --tw-text-opacity: 1;
  color: var(--fallback-erc,oklch(var(--erc)/var(--tw-text-opacity, 1)));
  --progress-color: var(--fallback-er,oklch(var(--er)/1));
}

.progress-indeterminate {
  width: 100%;
  background: linear-gradient(90deg, rgba(0, 0, 0, 0) 50%, var(--progress-color) 50%);
  background-size: 50% 100%;
  background-repeat: no-repeat;
  animation: indeterminate-progress 4s infinite ease-in-out;
}

@keyframes indeterminate-progress {
  0% {
    background-position-x: -75%;
  }

  50% {
    background-position-x: 125%;
  }

  100% {
    background-position-x: -75%;
  }
}

@keyframes progress-bar-stripes {
  0% {
    background-position-x: 0.75rem;
  }
}

.radio {
  --basebg: var(--fallback-b1,oklch(var(--b1)/1));
  width: 1.5rem;
  height: 1.5rem;
  cursor: pointer;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  border-radius: 9999px;
  border-width: 1px;
  --tw-border-opacity: 1;
  border-color: var(--fallback-n,oklch(var(--n)/var(--tw-border-opacity, 1)));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
}

.radio:focus {
  box-shadow: none;
}

.radio:focus-visible {
  outline-style: solid;
  outline-width: 2px;
  outline-offset: 0px;
  outline-color: var(--fallback-n,oklch(var(--n)/0.3));
}

.radio:checked,
  .radio[aria-checked="true"] {
  --tw-border-opacity: 1;
  border-color: var(--fallback-n,oklch(var(--n)/var(--tw-border-opacity, 1)));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-n,oklch(var(--n)/var(--tw-bg-opacity, 1)));
  background-image: none;
  animation: radiomark var(--animation-input, 0.1s) ease-out;
  box-shadow: 0 0 0 3px var(--basebg) inset,
      0 0 0 3px var(--basebg) inset,
      var(--tw-ring-offset-shadow),
      var(--tw-ring-shadow);
}

.radio-primary:checked,
    .radio-primary[aria-checked="true"] {
  --tw-border-opacity: 1;
  border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity, 1)));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity, 1)));
}

.radio-primary:checked:focus-visible, .radio-primary[aria-checked="true"]:focus-visible {
  outline-color: var(--fallback-p,oklch(var(--p)/0.3));
}

.radio-secondary:checked,
    .radio-secondary[aria-checked="true"] {
  --tw-border-opacity: 1;
  border-color: var(--fallback-s,oklch(var(--s)/var(--tw-border-opacity, 1)));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-s,oklch(var(--s)/var(--tw-bg-opacity, 1)));
}

.radio-secondary:checked:focus-visible, .radio-secondary[aria-checked="true"]:focus-visible {
  outline-color: var(--fallback-s,oklch(var(--s)/0.3));
}

.radio-accent:checked,
    .radio-accent[aria-checked="true"] {
  --tw-border-opacity: 1;
  border-color: var(--fallback-a,oklch(var(--a)/var(--tw-border-opacity, 1)));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-a,oklch(var(--a)/var(--tw-bg-opacity, 1)));
}

.radio-accent:checked:focus-visible, .radio-accent[aria-checked="true"]:focus-visible {
  outline-color: var(--fallback-a,oklch(var(--a)/0.3));
}

.radio-info:checked,
    .radio-info[aria-checked="true"] {
  --tw-border-opacity: 1;
  border-color: var(--fallback-in,oklch(var(--in)/var(--tw-border-opacity, 1)));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-in,oklch(var(--in)/var(--tw-bg-opacity, 1)));
}

.radio-info:checked:focus-visible, .radio-info[aria-checked="true"]:focus-visible {
  outline-color: var(--fallback-in,oklch(var(--in)/0.3));
}

.radio-success:checked,
    .radio-success[aria-checked="true"] {
  --tw-border-opacity: 1;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1)));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity, 1)));
}

.radio-success:checked:focus-visible, .radio-success[aria-checked="true"]:focus-visible {
  outline-color: var(--fallback-su,oklch(var(--su)/0.3));
}

.radio-warning:checked,
    .radio-warning[aria-checked="true"] {
  --tw-border-opacity: 1;
  border-color: var(--fallback-wa,oklch(var(--wa)/var(--tw-border-opacity, 1)));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-wa,oklch(var(--wa)/var(--tw-bg-opacity, 1)));
}

.radio-warning:checked:focus-visible, .radio-warning[aria-checked="true"]:focus-visible {
  outline-color: var(--fallback-wa,oklch(var(--wa)/0.3));
}

.radio-error:checked,
    .radio-error[aria-checked="true"] {
  --tw-border-opacity: 1;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1)));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity, 1)));
}

.radio-error:checked:focus-visible, .radio-error[aria-checked="true"]:focus-visible {
  outline-color: var(--fallback-er,oklch(var(--er)/0.3));
}

.radio-inset {
  width: 1.5rem;
  height: 1.5rem;
  cursor: pointer;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  border-radius: 9999px;
  border-width: 1px;
  --tw-border-opacity: 1;
  border-color: var(--fallback-n,oklch(var(--n)/var(--tw-border-opacity, 1)));
}

.radio-inset:focus {
  box-shadow: none;
}

.radio-inset:focus-visible {
  outline-style: solid;
  outline-width: 2px;
  outline-offset: 0px;
  outline-color: var(--fallback-n,oklch(var(--n)/0.3));
}

.radio-inset:checked,
  .radio-inset[aria-checked="true"] {
  border-width: 6px;
  --tw-border-opacity: 1;
  border-color: var(--fallback-n,oklch(var(--n)/var(--tw-border-opacity, 1)));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
  --tw-shadow: 0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22));
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  background-image: none;
  animation: radioinsetmark var(--animation-input, 0.15s) ease-out;
}

.radio-inset:checked.radio-xs, .radio-inset[aria-checked="true"].radio-xs {
  border-width: 4px;
}

.radio-inset:checked.radio-sm, .radio-inset[aria-checked="true"].radio-sm {
  border-width: 5px;
}

.radio-inset:checked.radio-lg, .radio-inset[aria-checked="true"].radio-lg {
  border-width: 8px;
}

.radio-inset-primary:checked,
    .radio-inset-primary[aria-checked="true"] {
  --tw-border-opacity: 1;
  border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity, 1)));
}

.radio-inset-primary:checked:focus-visible, .radio-inset-primary[aria-checked="true"]:focus-visible {
  outline-color: var(--fallback-p,oklch(var(--p)/0.3));
}

.radio-inset-secondary:checked,
    .radio-inset-secondary[aria-checked="true"] {
  --tw-border-opacity: 1;
  border-color: var(--fallback-s,oklch(var(--s)/var(--tw-border-opacity, 1)));
}

.radio-inset-secondary:checked:focus-visible, .radio-inset-secondary[aria-checked="true"]:focus-visible {
  outline-color: var(--fallback-s,oklch(var(--s)/0.3));
}

.radio-inset-accent:checked,
    .radio-inset-accent[aria-checked="true"] {
  --tw-border-opacity: 1;
  border-color: var(--fallback-a,oklch(var(--a)/var(--tw-border-opacity, 1)));
}

.radio-inset-accent:checked:focus-visible, .radio-inset-accent[aria-checked="true"]:focus-visible {
  outline-color: var(--fallback-a,oklch(var(--a)/0.3));
}

.radio-inset-info:checked,
    .radio-inset-info[aria-checked="true"] {
  --tw-border-opacity: 1;
  border-color: var(--fallback-in,oklch(var(--in)/var(--tw-border-opacity, 1)));
}

.radio-inset-info:checked:focus-visible, .radio-inset-info[aria-checked="true"]:focus-visible {
  outline-color: var(--fallback-in,oklch(var(--in)/0.3));
}

.radio-inset-success:checked,
    .radio-inset-success[aria-checked="true"] {
  --tw-border-opacity: 1;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1)));
}

.radio-inset-success:checked:focus-visible, .radio-inset-success[aria-checked="true"]:focus-visible {
  outline-color: var(--fallback-su,oklch(var(--su)/0.3));
}

.radio-inset-warning:checked,
    .radio-inset-warning[aria-checked="true"] {
  --tw-border-opacity: 1;
  border-color: var(--fallback-wa,oklch(var(--wa)/var(--tw-border-opacity, 1)));
}

.radio-inset-warning:checked:focus-visible, .radio-inset-warning[aria-checked="true"]:focus-visible {
  outline-color: var(--fallback-wa,oklch(var(--wa)/0.3));
}

.radio-inset-error:checked,
    .radio-inset-error[aria-checked="true"] {
  --tw-border-opacity: 1;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1)));
}

.radio-inset-error:checked:focus-visible, .radio-inset-error[aria-checked="true"]:focus-visible {
  outline-color: var(--fallback-er,oklch(var(--er)/0.3));
}

.radio.disabled,
  .radio:disabled,
  .radio[disabled],
  .radio-inset.disabled,
  .radio-inset:disabled,
  .radio-inset[disabled] {
  pointer-events: none;
  opacity: 0.4;
}

.radio.disabled:hover, .radio:disabled:hover, .radio[disabled]:hover, .radio-inset.disabled:hover, .radio-inset:disabled:hover, .radio-inset[disabled]:hover {
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
}

@keyframes radiomark {
  0% {
    box-shadow: 0 0 0 9px var(--basebg) inset,
      0 0 0 9px var(--basebg) inset;
  }

  50% {
    box-shadow: 0 0 0 6px var(--basebg) inset,
      0 0 0 6px var(--basebg) inset;
  }

  100% {
    box-shadow: 0 0 0 3px var(--basebg) inset,
      0 0 0 3px var(--basebg) inset;
  }
}

.radio-mark {
  display: none;
}

@keyframes radioinsetmark {
  0% {
    border-width: 2px;
  }

  50% {
    border-width: 4px;
  }

  100% {
    border-width: 6px;
  }
}

.radio-inset-mark {
  display: none;
}

.custom-label-option,
.custom-option {
  width: 100%;
  overflow: hidden;
  border-radius: var(--rounded-box, 0.5rem);
  border-width: 1px;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.25));
  padding: 1rem;
  text-align: center;
  transition: border-color 0.15s ease-in-out,
    box-shadow 0.15s ease-in-out;
}

.custom-label-option:hover, .custom-option:hover {
  border-color: var(--fallback-bc,oklch(var(--bc)/0.4));
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-color: var(--fallback-bc,oklch(var(--bc)/0.4));
}

.custom-label-option .label, .custom-option .label {
  padding: 0px;
  font-size: 1rem;
  line-height: 1.375rem;
}

.custom-label-option .label:first-of-type, .custom-option .label:first-of-type {
  padding-bottom: 0.25rem;
}

.custom-label-option .label .label-text, .custom-option .label .label-text {
  font-weight: 500;
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
}

.\!validate .custom-label-option:has(.radio:invalid),
  .\!validate .custom-option:has(.radio:invalid) {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1))) !important;
}

.validate .custom-label-option:has(.radio:invalid),
  .custom-label-option:has(.radio.is-invalid),
  .validate .custom-option:has(.radio:invalid),
  .custom-option:has(.radio.is-invalid) {
  --tw-border-opacity: 1;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1)));
}

.\!validate .custom-label-option:has(.radio:invalid),
  .\!validate .custom-option:has(.radio:invalid) {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1))) !important;
}

.\!validate .custom-label-option:has(.radio:valid),
  .\!validate .custom-option:has(.radio:valid) {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1))) !important;
}

.validate .custom-label-option:has(.radio:valid),
  .custom-label-option:has(.radio.is-valid),
  .validate .custom-option:has(.radio:valid),
  .custom-option:has(.radio.is-valid) {
  --tw-border-opacity: 1;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1)));
}

.\!validate .custom-label-option:has(.radio:valid),
  .\!validate .custom-option:has(.radio:valid) {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1))) !important;
}

.custom-option:has(:checked) {
  --tw-border-opacity: 1;
  border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity, 1)));
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-opacity: 1;
  --tw-ring-color: var(--fallback-p,oklch(var(--p)/var(--tw-ring-opacity, 1)));
}

.\!validate .custom-option:has(.radio:valid):has(:checked) {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1))) !important;
  --tw-ring-opacity: 1 !important;
  --tw-ring-color: var(--fallback-su,oklch(var(--su)/var(--tw-ring-opacity, 1))) !important;
}

.validate .custom-option:has(.radio:valid):has(:checked), .custom-option:has(.radio.is-valid):has(:checked) {
  --tw-border-opacity: 1;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1)));
  --tw-ring-opacity: 1;
  --tw-ring-color: var(--fallback-su,oklch(var(--su)/var(--tw-ring-opacity, 1)));
}

.custom-label-option {
  background-color: var(--fallback-n,oklch(var(--n)/0.1));
}

.custom-label-option:has(:checked) {
  --tw-border-opacity: 1;
  border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity, 1)));
  background-color: var(--fallback-p,oklch(var(--p)/0.2));
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-opacity: 1;
  --tw-ring-color: var(--fallback-p,oklch(var(--p)/var(--tw-ring-opacity, 1)));
}

.\!validate .custom-label-option:has(.radio:valid) {
  background-color: var(--fallback-su,oklch(var(--su)/0.2)) !important;
}

.validate .custom-label-option:has(.radio:valid),
  .custom-label-option:has(.radio.is-valid) {
  background-color: var(--fallback-su,oklch(var(--su)/0.2));
}

.\!validate .custom-label-option:has(.radio:valid):has(:checked) {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1))) !important;
  background-color: var(--fallback-su,oklch(var(--su)/0.2)) !important;
  --tw-ring-opacity: 1 !important;
  --tw-ring-color: var(--fallback-su,oklch(var(--su)/var(--tw-ring-opacity, 1))) !important;
}

.validate .custom-label-option:has(.radio:valid):has(:checked), .custom-label-option:has(.radio.is-valid):has(:checked) {
  --tw-border-opacity: 1;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1)));
  background-color: var(--fallback-su,oklch(var(--su)/0.2));
  --tw-ring-opacity: 1;
  --tw-ring-color: var(--fallback-su,oklch(var(--su)/var(--tw-ring-opacity, 1)));
}

.\!validate .custom-label-option:has(.radio:invalid) {
  background-color: var(--fallback-er,oklch(var(--er)/0.2)) !important;
}

.validate .custom-label-option:has(.radio:invalid),
  .custom-label-option:has(.radio.is-invalid) {
  background-color: var(--fallback-er,oklch(var(--er)/0.2));
}

.radio.is-valid,
.validate .radio:valid {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1))) !important;
}


.\!validate .radio:valid {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1))) !important;
}

.radio.is-valid:hover,
.validate .radio:valid:hover {
  --tw-ring-color: var(--fallback-su,oklch(var(--su)/0.1)) !important;
}


.\!validate .radio:valid:hover {
  --tw-ring-color: var(--fallback-su,oklch(var(--su)/0.1)) !important;
}

.radio.is-valid:focus-visible, .validate .radio:valid:focus-visible {
  outline-color: var(--fallback-su,oklch(var(--su)/0.3)) !important;
}

 .\!validate .radio:valid:focus-visible {
  outline-color: var(--fallback-su,oklch(var(--su)/0.3)) !important;
}

.radio.is-valid:checked,
  .radio.is-valid[aria-checked="true"],
  .validate .radio:valid:checked,
  .validate .radio:valid[aria-checked="true"] {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1))) !important;
  --tw-bg-opacity: 1 !important;
  background-color: var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity, 1))) !important;
}


  .\!validate .radio:valid:checked,
  .\!validate .radio:valid[aria-checked="true"] {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1))) !important;
  --tw-bg-opacity: 1 !important;
  background-color: var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity, 1))) !important;
}

.radio.is-invalid,
.validate .radio:invalid {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1))) !important;
}


.\!validate .radio:invalid {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1))) !important;
}

.radio.is-invalid:hover,
.validate .radio:invalid:hover {
  --tw-ring-color: var(--fallback-er,oklch(var(--er)/0.1)) !important;
}


.\!validate .radio:invalid:hover {
  --tw-ring-color: var(--fallback-er,oklch(var(--er)/0.1)) !important;
}

.radio.is-invalid:focus-visible, .validate .radio:invalid:focus-visible {
  outline-color: var(--fallback-er,oklch(var(--er)/0.3)) !important;
}

 .\!validate .radio:invalid:focus-visible {
  outline-color: var(--fallback-er,oklch(var(--er)/0.3)) !important;
}

.radio.is-invalid:checked,
  .radio.is-invalid[aria-checked="true"],
  .validate .radio:invalid:checked,
  .validate .radio:invalid[aria-checked="true"] {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1))) !important;
  --tw-bg-opacity: 1 !important;
  background-color: var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity, 1))) !important;
}


  .\!validate .radio:invalid:checked,
  .\!validate .radio:invalid[aria-checked="true"] {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1))) !important;
  --tw-bg-opacity: 1 !important;
  background-color: var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity, 1))) !important;
}

.\!validate .label:has(+ * .radio:valid) > *, 
.\!validate .label-text:has(+ * .radio:valid), 
.\!validate .label-text:has(~ .radio:valid), 
.\!validate .label:has(~ .radio:valid) > *, 

.\!validate .radio:valid ~ .label, 
.\!validate .radio:valid ~ .label-text, 
.\!validate .radio:valid ~ .label .label-text,  
.\!validate *:has(.radio:valid) ~ .label, 
.\!validate *:has(.radio:valid) ~ .label-text, 
.\!validate *:has(.radio:valid) ~ .label .label-text {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1))) !important;
}

.validate .label:has(+ * .radio:valid) > *, 
.validate .label-text:has(+ * .radio:valid), 
.validate .label-text:has(~ .radio:valid), 
.validate .label:has(~ .radio:valid) > *, 

.validate .radio:valid ~ .label, 
.validate .radio:valid ~ .label-text, 
.validate .radio:valid ~ .label .label-text,  
.validate *:has(.radio:valid) ~ .label, 
.validate *:has(.radio:valid) ~ .label-text, 
.validate *:has(.radio:valid) ~ .label .label-text {
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
}

.\!validate .label:has(+ * .radio:valid) > *, 
.\!validate .label-text:has(+ * .radio:valid), 
.\!validate .label-text:has(~ .radio:valid), 
.\!validate .label:has(~ .radio:valid) > *, 

.\!validate .radio:valid ~ .label, 
.\!validate .radio:valid ~ .label-text, 
.\!validate .radio:valid ~ .label .label-text,  
.\!validate *:has(.radio:valid) ~ .label, 
.\!validate *:has(.radio:valid) ~ .label-text, 
.\!validate *:has(.radio:valid) ~ .label .label-text {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1))) !important;
}

.\!validate .label:has(+ * .radio:invalid) > *, 
.\!validate .label-text:has(+ * .radio:invalid), 
.\!validate .label-text:has(~ .radio:invalid), 
.\!validate .label:has(~ .radio:invalid) > *, 

.\!validate .radio:invalid ~ .label, 
.\!validate .radio:invalid ~ .label-text, 
.\!validate .radio:invalid ~ .label .label-text,  
.\!validate *:has(.radio:invalid) ~ .label, 
.\!validate *:has(.radio:invalid) ~ .label-text, 
.\!validate *:has(.radio:invalid) ~ .label .label-text {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1))) !important;
}

.validate .label:has(+ * .radio:invalid) > *, 
.validate .label-text:has(+ * .radio:invalid), 
.validate .label-text:has(~ .radio:invalid), 
.validate .label:has(~ .radio:invalid) > *, 

.validate .radio:invalid ~ .label, 
.validate .radio:invalid ~ .label-text, 
.validate .radio:invalid ~ .label .label-text,  
.validate *:has(.radio:invalid) ~ .label, 
.validate *:has(.radio:invalid) ~ .label-text, 
.validate *:has(.radio:invalid) ~ .label .label-text {
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}

.\!validate .label:has(+ * .radio:invalid) > *, 
.\!validate .label-text:has(+ * .radio:invalid), 
.\!validate .label-text:has(~ .radio:invalid), 
.\!validate .label:has(~ .radio:invalid) > *, 

.\!validate .radio:invalid ~ .label, 
.\!validate .radio:invalid ~ .label-text, 
.\!validate .radio:invalid ~ .label .label-text,  
.\!validate *:has(.radio:invalid) ~ .label, 
.\!validate *:has(.radio:invalid) ~ .label-text, 
.\!validate *:has(.radio:invalid) ~ .label .label-text {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1))) !important;
}

.\!validate *:has(> .radio:valid) ~ .success-message,
.\!validate *:has(> .radio:valid) > * > .success-message,

.\!validate .radio:valid ~ .success-message,
.\!validate .radio:valid + * > .success-message {
  display: block !important;
}

.validate *:has(> .radio:valid) ~ .success-message,
.validate *:has(> .radio:valid) > * > .success-message,

.validate .radio:valid ~ .success-message,
.validate .radio:valid + * > .success-message {
  display: block;
}

.\!validate *:has(> .radio:valid) ~ .success-message,
.\!validate *:has(> .radio:valid) > * > .success-message,

.\!validate .radio:valid ~ .success-message,
.\!validate .radio:valid + * > .success-message {
  display: block !important;
}

.\!validate *:has(> .radio:invalid) ~ .error-message,
.\!validate *:has(> .radio:invalid) > * > .error-message,

.\!validate .radio:invalid ~ .error-message,
.\!validate .radio:invalid + * > .error-message {
  display: block !important;
}

.validate *:has(> .radio:invalid) ~ .error-message,
.validate *:has(> .radio:invalid) > * > .error-message,

.validate .radio:invalid ~ .error-message,
.validate .radio:invalid + * > .error-message {
  display: block;
}

.\!validate *:has(> .radio:invalid) ~ .error-message,
.\!validate *:has(> .radio:invalid) > * > .error-message,

.\!validate .radio:invalid ~ .error-message,
.\!validate .radio:invalid + * > .error-message {
  display: block !important;
}

.radio-inset.is-valid,
.validate .radio-inset:valid {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1))) !important;
}


.\!validate .radio-inset:valid {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1))) !important;
}

.radio-inset.is-valid:hover,
.validate .radio-inset:valid:hover {
  --tw-ring-color: var(--fallback-su,oklch(var(--su)/0.1)) !important;
}


.\!validate .radio-inset:valid:hover {
  --tw-ring-color: var(--fallback-su,oklch(var(--su)/0.1)) !important;
}

.radio-inset.is-valid:focus-visible, .validate .radio-inset:valid:focus-visible {
  outline-color: var(--fallback-su,oklch(var(--su)/0.3)) !important;
}

 .\!validate .radio-inset:valid:focus-visible {
  outline-color: var(--fallback-su,oklch(var(--su)/0.3)) !important;
}

.radio-inset.is-valid:checked,
  .radio-inset.is-valid[aria-checked="true"],
  .validate .radio-inset:valid:checked,
  .validate .radio-inset:valid[aria-checked="true"] {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1))) !important;
}


  .\!validate .radio-inset:valid:checked,
  .\!validate .radio-inset:valid[aria-checked="true"] {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1))) !important;
}

.radio-inset.is-invalid,
.validate .radio-inset:invalid {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1))) !important;
}


.\!validate .radio-inset:invalid {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1))) !important;
}

.radio-inset.is-invalid:hover,
.validate .radio-inset:invalid:hover {
  --tw-ring-color: var(--fallback-er,oklch(var(--er)/0.1)) !important;
}


.\!validate .radio-inset:invalid:hover {
  --tw-ring-color: var(--fallback-er,oklch(var(--er)/0.1)) !important;
}

.radio-inset.is-invalid:focus-visible, .validate .radio-inset:invalid:focus-visible {
  outline-color: var(--fallback-er,oklch(var(--er)/0.3)) !important;
}

 .\!validate .radio-inset:invalid:focus-visible {
  outline-color: var(--fallback-er,oklch(var(--er)/0.3)) !important;
}

.radio-inset.is-invalid:checked,
  .radio-inset.is-invalid[aria-checked="true"],
  .validate .radio-inset:invalid:checked,
  .validate .radio-inset:invalid[aria-checked="true"] {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1))) !important;
}


  .\!validate .radio-inset:invalid:checked,
  .\!validate .radio-inset:invalid[aria-checked="true"] {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1))) !important;
}

.\!validate .label:has(+ * .radio-inset:valid) > *, 
.\!validate .label:has(+ * .radio-inset:valid).label-text, 
.\!validate .label:has(~ .radio-inset:valid).label-text, 
.\!validate .label:has(~ .radio-inset:valid) > *, 

.\!validate .radio-inset:valid ~ .label, 
.\!validate .radio-inset:valid ~ .label.label-text, 
.\!validate .radio-inset:valid ~ .label .label-text,  
.\!validate *:has(.radio-inset:valid) ~ .label, 
.\!validate *:has(.radio-inset:valid) ~ .label.label-text, 
.\!validate *:has(.radio-inset:valid) ~ .label .label-text {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1))) !important;
}

.validate .label:has(+ * .radio-inset:valid) > *, 
.validate .label:has(+ * .radio-inset:valid).label-text, 
.validate .label:has(~ .radio-inset:valid).label-text, 
.validate .label:has(~ .radio-inset:valid) > *, 

.validate .radio-inset:valid ~ .label, 
.validate .radio-inset:valid ~ .label.label-text, 
.validate .radio-inset:valid ~ .label .label-text,  
.validate *:has(.radio-inset:valid) ~ .label, 
.validate *:has(.radio-inset:valid) ~ .label.label-text, 
.validate *:has(.radio-inset:valid) ~ .label .label-text {
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
}

.\!validate .label:has(+ * .radio-inset:valid) > *, 
.\!validate .label:has(+ * .radio-inset:valid).label-text, 
.\!validate .label:has(~ .radio-inset:valid).label-text, 
.\!validate .label:has(~ .radio-inset:valid) > *, 

.\!validate .radio-inset:valid ~ .label, 
.\!validate .radio-inset:valid ~ .label.label-text, 
.\!validate .radio-inset:valid ~ .label .label-text,  
.\!validate *:has(.radio-inset:valid) ~ .label, 
.\!validate *:has(.radio-inset:valid) ~ .label.label-text, 
.\!validate *:has(.radio-inset:valid) ~ .label .label-text {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1))) !important;
}

.\!validate .label:has(+ * .radio-inset:invalid) > *, 
.\!validate .label-text:has(+ * .radio-inset:invalid), 
.\!validate .label-text:has(~ .radio-inset:invalid), 
.\!validate .label:has(~ .radio-inset:invalid) > *, 

.\!validate .radio-inset:invalid ~ .label, 
.\!validate .radio-inset:invalid ~ .label-text, 
.\!validate .radio-inset:invalid ~ .label .label-text,  
.\!validate *:has(.radio-inset:invalid) ~ .label, 
.\!validate *:has(.radio-inset:invalid) ~ .label-text, 
.\!validate *:has(.radio-inset:invalid) ~ .label .label-text {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1))) !important;
}

.validate .label:has(+ * .radio-inset:invalid) > *, 
.validate .label-text:has(+ * .radio-inset:invalid), 
.validate .label-text:has(~ .radio-inset:invalid), 
.validate .label:has(~ .radio-inset:invalid) > *, 

.validate .radio-inset:invalid ~ .label, 
.validate .radio-inset:invalid ~ .label-text, 
.validate .radio-inset:invalid ~ .label .label-text,  
.validate *:has(.radio-inset:invalid) ~ .label, 
.validate *:has(.radio-inset:invalid) ~ .label-text, 
.validate *:has(.radio-inset:invalid) ~ .label .label-text {
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}

.\!validate .label:has(+ * .radio-inset:invalid) > *, 
.\!validate .label-text:has(+ * .radio-inset:invalid), 
.\!validate .label-text:has(~ .radio-inset:invalid), 
.\!validate .label:has(~ .radio-inset:invalid) > *, 

.\!validate .radio-inset:invalid ~ .label, 
.\!validate .radio-inset:invalid ~ .label-text, 
.\!validate .radio-inset:invalid ~ .label .label-text,  
.\!validate *:has(.radio-inset:invalid) ~ .label, 
.\!validate *:has(.radio-inset:invalid) ~ .label-text, 
.\!validate *:has(.radio-inset:invalid) ~ .label .label-text {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1))) !important;
}

.\!validate *:has(> .radio-inset:valid) ~ .success-message,
.\!validate *:has(> .radio-inset:valid) > * > .success-message,

.\!validate .radio-inset:valid ~ .success-message,
.\!validate .radio-inset:valid + * > .success-message {
  display: block !important;
}

.validate *:has(> .radio-inset:valid) ~ .success-message,
.validate *:has(> .radio-inset:valid) > * > .success-message,

.validate .radio-inset:valid ~ .success-message,
.validate .radio-inset:valid + * > .success-message {
  display: block;
}

.\!validate *:has(> .radio-inset:valid) ~ .success-message,
.\!validate *:has(> .radio-inset:valid) > * > .success-message,

.\!validate .radio-inset:valid ~ .success-message,
.\!validate .radio-inset:valid + * > .success-message {
  display: block !important;
}

.\!validate *:has(> .radio-inset:invalid) ~ .error-message,
.\!validate *:has(> .radio-inset:invalid) > * > .error-message,

.\!validate .radio-inset:invalid ~ .error-message,
.\!validate .radio-inset:invalid + * > .error-message {
  display: block !important;
}

.validate *:has(> .radio-inset:invalid) ~ .error-message,
.validate *:has(> .radio-inset:invalid) > * > .error-message,

.validate .radio-inset:invalid ~ .error-message,
.validate .radio-inset:invalid + * > .error-message {
  display: block;
}

.\!validate *:has(> .radio-inset:invalid) ~ .error-message,
.\!validate *:has(> .radio-inset:invalid) > * > .error-message,

.\!validate .radio-inset:invalid ~ .error-message,
.\!validate .radio-inset:invalid + * > .error-message {
  display: block !important;
}

.range::-webkit-slider-runnable-track {
  height: 0.5rem;
  width: 100%;
  border-radius: 9999px;
  background-color: var(--fallback-n,oklch(var(--n)/0.1));
}

.range::-moz-range-track {
  height: 0.5rem;
  width: 100%;
  border-radius: 9999px;
  background-color: var(--fallback-n,oklch(var(--n)/0.1));
}

.range::-webkit-slider-thumb {
  position: relative;
  top: 50%;
  width: 1rem;
  height: 1rem;
  --tw-translate-y: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  border-radius: 9999px;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
  --tw-shadow: 0 2px 4px 0 var(--fallback-bs,oklch(var(--bs)/0.26));
  --tw-shadow-colored: 0 2px 4px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  -webkit-transition-property: all;
  transition-property: all;
  transition-duration: 150ms;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  appearance: none;
  box-sizing: border-box;
  -webkit-appearance: none;
  color: var(--range-shdw);
  border-color: var(--range-shdw);
  border-style: solid;
  border-width: 3px;
}

.range::-webkit-slider-thumb:hover {
  --tw-scale-x: 1.25;
  --tw-scale-y: 1.25;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  cursor: grab;
  box-shadow: 0 0 0 2px var(--range-shdw);
}

.range::-webkit-slider-thumb:active {
  --tw-scale-x: 1.25;
  --tw-scale-y: 1.25;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  cursor: grabbing;
  box-shadow: 0 0 0 3px var(--range-shdw);
}

.range::-moz-range-thumb {
  position: relative;
  width: 1rem;
  height: 1rem;
  border-radius: 9999px;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
  --tw-shadow: 0 2px 4px 0 var(--fallback-bs,oklch(var(--bs)/0.26));
  --tw-shadow-colored: 0 2px 4px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  -moz-transition-property: all;
  transition-property: all;
  transition-duration: 150ms;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  top: 50%;
  color: var(--range-shdw);
  box-sizing: border-box;
  border-color: var(--range-shdw);
  border-style: solid;
  border-width: 3px;
}

.range::-moz-range-thumb:hover {
  cursor: grab;
  box-shadow: 0 0 0 2px var(--range-shdw);
}

.range::-moz-range-thumb:active {
  cursor: grabbing;
  box-shadow: 0 0 0 3px var(--range-shdw);
}

.range-primary {
  --range-shdw: var(--fallback-p,oklch(var(--p)/1));
}

.range-secondary {
  --range-shdw: var(--fallback-s,oklch(var(--s)/1));
}

.range-accent {
  --range-shdw: var(--fallback-a,oklch(var(--a)/1));
}

.range-success {
  --range-shdw: var(--fallback-su,oklch(var(--su)/1));
}

.range-warning {
  --range-shdw: var(--fallback-wa,oklch(var(--wa)/1));
}

.range-info {
  --range-shdw: var(--fallback-in,oklch(var(--in)/1));
}

.range-error {
  --range-shdw: var(--fallback-er,oklch(var(--er)/1));
}

.range.disabled,
.range:disabled,
.range[disabled] {
  pointer-events: none;
  opacity: 0.3;
}

[dir="rtl"] .range::-webkit-slider-thumb {
  transform: translateY(-50%) scaleX(-1);
}

[dir="rtl"] .range::-moz-range-thumb {
  transform: translateY(-50%) scaleX(-1);
}

[dir="rtl"] .range::-webkit-slider-runnable-track,
[dir="rtl"] .range::-moz-range-track {
  direction: rtl;
}

.select:hover {
  border-color: var(--fallback-bc,oklch(var(--bc)/0.6));
}

.select:focus,
  .select:focus-within {
  --tw-border-opacity: 1;
  border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity, 1)));
  --tw-shadow: 0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22));
  --tw-shadow: var(--tw-shadow-colored);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-shadow-color: var(--fallback-p,oklch(var(--p)/0.22));
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  --tw-ring-opacity: 1;
  --tw-ring-color: var(--fallback-p,oklch(var(--p)/var(--tw-ring-opacity, 1)));
}

.select:focus ~ .select-floating-label,
    .select:focus ~ .select-filled-label,
    .select:focus-within ~ .select-floating-label,
    .select:focus-within ~ .select-filled-label {
  --tw-text-opacity: 1;
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
}

.select:focus.is-valid ~ .select-floating-label,
    .select:focus.is-valid ~ .select-filled-label,
    .select:focus-within.is-valid ~ .select-floating-label,
    .select:focus-within.is-valid ~ .select-filled-label {
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
}

.select:focus.is-invalid ~ .select-floating-label,
    .select:focus.is-invalid ~ .select-filled-label,
    .select:focus-within.is-invalid ~ .select-floating-label,
    .select:focus-within.is-invalid ~ .select-filled-label {
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}

.select-filled::-moz-placeholder {
  color: transparent;
}

.select-filled::placeholder {
  color: transparent;
}

.select-filled.input-sm {
  padding-top: 0.375rem;
}

.select-filled option {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
}

.select-filled:focus,
    .select-filled:focus-within {
  --tw-border-opacity: 1;
  border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity, 1)));
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
}

.select-filled:focus ~ .select-filled-focused,
    .select-filled:focus-within ~ .select-filled-focused {
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity, 1)));
}

.select:focus-visible {
  outline: unset;
}

.select.disabled,
  .select:disabled,
  .select[disabled] {
  pointer-events: none;
  border-width: 0px;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.1));
  background-color: var(--fallback-n,oklch(var(--n)/0.1));
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

.select.disabled::-moz-placeholder, .select:disabled::-moz-placeholder, .select[disabled]::-moz-placeholder {
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

.select.disabled::placeholder,
  .select:disabled::placeholder,
  .select[disabled]::placeholder {
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

.select-multiple,
  .select[multiple],
  .select[size].select:not([size="1"]) {
  overflow-y: auto;
  overflow-x: hidden;
  background-image: none;
}

.select-multiple::-webkit-scrollbar-thumb,
  .select[multiple]::-webkit-scrollbar-thumb,
  .select[size].select:not([size="1"])::-webkit-scrollbar-thumb {
  border-radius: 9999px;
  background-color: var(--fallback-s,oklch(var(--s)/0.5));
}

.select-multiple::-webkit-scrollbar-thumb:hover,
  .select[multiple]::-webkit-scrollbar-thumb:hover,
  .select[size].select:not([size="1"])::-webkit-scrollbar-thumb:hover {
  background-color: var(--fallback-s,oklch(var(--s)/0.8));
}

.select-multiple::-webkit-scrollbar-track,
  .select[multiple]::-webkit-scrollbar-track,
  .select[size].select:not([size="1"])::-webkit-scrollbar-track {
  border-radius: 9999px;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity, 1)));
}

.select-multiple::-webkit-scrollbar,
  .select[multiple]::-webkit-scrollbar,
  .select[size].select:not([size="1"])::-webkit-scrollbar {
  width: 0.5rem;
}

.select.select-floating.disabled,
    .select.select-floating:disabled,
    .select.select-floating[disabled] {
  border-width: 1px;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
}

.select.select-floating.disabled ~ .select-floating-label, .select.select-floating:disabled ~ .select-floating-label, .select.select-floating[disabled] ~ .select-floating-label {
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

.select.select-filled.disabled,
    .select.select-filled:disabled,
    .select.select-filled[disabled] {
  border-bottom-width: 1px;
}

.select.select-filled.disabled ~ .select-filled-label, .select.select-filled:disabled ~ .select-filled-label, .select.select-filled[disabled] ~ .select-filled-label {
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

[dir="rtl"] .select {
  background-position: calc(0% + 1.3em) center;
}

.select.select-floating.select-lg ~ .select-floating-label {
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.select.select-filled.select-lg ~ .select-filled-label {
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.input-group .select {
  border-width: 0px;
}

.input-group .select:focus,
    .input-group .select:focus-within {
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
}

.select.is-valid,
.validate .select:valid {
  --tw-border-opacity: 1;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1)));
}


.\!validate .select:valid {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1))) !important;
}

.select.is-valid:focus,
  .select.is-valid:focus-within,
  .validate .select:valid:focus,
  .validate .select:valid:focus-within {
  --tw-shadow-color: var(--fallback-su,oklch(var(--su)/0.22));
  --tw-shadow: var(--tw-shadow-colored);
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-opacity: 1;
  --tw-ring-color: var(--fallback-su,oklch(var(--su)/var(--tw-ring-opacity, 1)));
}


  .\!validate .select:valid:focus,
  .\!validate .select:valid:focus-within {
  --tw-shadow-color: var(--fallback-su,oklch(var(--su)/0.22)) !important;
  --tw-shadow: var(--tw-shadow-colored) !important;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color) !important;
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color) !important;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000) !important;
  --tw-ring-opacity: 1 !important;
  --tw-ring-color: var(--fallback-su,oklch(var(--su)/var(--tw-ring-opacity, 1))) !important;
}

.select.is-valid.select-filled:focus,
  .select.is-valid.select-filled:focus-within,
  .validate .select:valid.select-filled:focus,
  .validate .select:valid.select-filled:focus-within {
  --tw-border-opacity: 1;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1)));
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
}


  .\!validate .select:valid.select-filled:focus,
  .\!validate .select:valid.select-filled:focus-within {
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow) !important;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000) !important;
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1))) !important;
  --tw-shadow: 0 0 #0000 !important;
  --tw-shadow-colored: 0 0 #0000 !important;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow) !important;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000) !important;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color) !important;
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color) !important;
}

.select.is-valid ~ .select-floating-label,
  .select.is-valid ~ .select-filled-label,
  .validate .select:valid ~ .select-floating-label,
  .validate .select:valid ~ .select-filled-label {
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
}


  .\!validate .select:valid ~ .select-floating-label,
  .\!validate .select:valid ~ .select-filled-label {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1))) !important;
}

.select.is-valid:focus ~ .select-filled-focused,
  .select.is-valid:focus-within ~ .select-filled-focused,
  .validate .select:valid:focus ~ .select-filled-focused,
  .validate .select:valid:focus-within ~ .select-filled-focused {
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity, 1)));
}


  .\!validate .select:valid:focus ~ .select-filled-focused,
  .\!validate .select:valid:focus-within ~ .select-filled-focused {
  --tw-scale-x: 1 !important;
  --tw-scale-y: 1 !important;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)) !important;
  --tw-bg-opacity: 1 !important;
  background-color: var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity, 1))) !important;
}

.select:focus.is-valid ~ .select-floating-label,
.validate .select:focus:valid ~ .select-floating-label,
.select:focus.is-valid ~ .select-filled-label,
.validate .select:focus:valid ~ .select-filled-label {
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
}


.\!validate .select:focus:valid ~ .select-floating-label,
.\!validate .select:focus:valid ~ .select-filled-label {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1))) !important;
}

.select:focus.is-invalid ~ .select-floating-label,
.validate .select:focus:invalid ~ .select-floating-label,
.select:focus.is-invalid ~ .select-filled-label,
.validate .select:focus:invalid ~ .select-filled-label {
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}


.\!validate .select:focus:invalid ~ .select-floating-label,
.\!validate .select:focus:invalid ~ .select-filled-label {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1))) !important;
}

.select.is-invalid,
.validate .select:invalid {
  --tw-border-opacity: 1;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1)));
}


.\!validate .select:invalid {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1))) !important;
}

.select.is-invalid:focus,
  .select.is-invalid:focus-within,
  .validate .select:invalid:focus,
  .validate .select:invalid:focus-within {
  --tw-shadow-color: var(--fallback-er,oklch(var(--er)/0.22));
  --tw-shadow: var(--tw-shadow-colored);
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-opacity: 1;
  --tw-ring-color: var(--fallback-er,oklch(var(--er)/var(--tw-ring-opacity, 1)));
}


  .\!validate .select:invalid:focus,
  .\!validate .select:invalid:focus-within {
  --tw-shadow-color: var(--fallback-er,oklch(var(--er)/0.22)) !important;
  --tw-shadow: var(--tw-shadow-colored) !important;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color) !important;
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color) !important;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000) !important;
  --tw-ring-opacity: 1 !important;
  --tw-ring-color: var(--fallback-er,oklch(var(--er)/var(--tw-ring-opacity, 1))) !important;
}

.select.is-invalid.select-filled:focus,
  .select.is-invalid.select-filled:focus-within,
  .validate .select:invalid.select-filled:focus,
  .validate .select:invalid.select-filled:focus-within {
  --tw-border-opacity: 1;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1)));
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
}


  .\!validate .select:invalid.select-filled:focus,
  .\!validate .select:invalid.select-filled:focus-within {
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow) !important;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000) !important;
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1))) !important;
  --tw-shadow: 0 0 #0000 !important;
  --tw-shadow-colored: 0 0 #0000 !important;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow) !important;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000) !important;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color) !important;
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color) !important;
}

.select.is-invalid ~ .select-floating-label,
  .select.is-invalid ~ .select-filled-label,
  .validate .select:invalid ~ .select-floating-label,
  .validate .select:invalid ~ .select-filled-label {
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}


  .\!validate .select:invalid ~ .select-floating-label,
  .\!validate .select:invalid ~ .select-filled-label {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1))) !important;
}

.select.is-invalid:focus ~ .select-filled-focused,
  .select.is-invalid:focus-within ~ .select-filled-focused,
  .validate .select:invalid:focus ~ .select-filled-focused,
  .validate .select:invalid:focus-within ~ .select-filled-focused {
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity, 1)));
}


  .\!validate .select:invalid:focus ~ .select-filled-focused,
  .\!validate .select:invalid:focus-within ~ .select-filled-focused {
  --tw-scale-x: 1 !important;
  --tw-scale-y: 1 !important;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)) !important;
  --tw-bg-opacity: 1 !important;
  background-color: var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity, 1))) !important;
}

.\!validate .label:has(+ * .select:valid) > *, 
.\!validate .label-text:has(+ * .select:valid), 
.\!validate .label-text:has(~ .select:valid).label-text, 
.\!validate .label:has(~ .select:valid) > *, 

.\!validate .select:valid ~ .label, 
.\!validate .select:valid ~ .label-text, 
.\!validate .select:valid ~ .label .label-text,  
.\!validate *:has(.select:valid) ~ .label, 
.\!validate *:has(.select:valid) ~ .label-text, 
.\!validate *:has(.select:valid) ~ .label .label-text {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1))) !important;
}

.validate .label:has(+ * .select:valid) > *, 
.validate .label-text:has(+ * .select:valid), 
.validate .label-text:has(~ .select:valid).label-text, 
.validate .label:has(~ .select:valid) > *, 

.validate .select:valid ~ .label, 
.validate .select:valid ~ .label-text, 
.validate .select:valid ~ .label .label-text,  
.validate *:has(.select:valid) ~ .label, 
.validate *:has(.select:valid) ~ .label-text, 
.validate *:has(.select:valid) ~ .label .label-text {
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
}

.\!validate .label:has(+ * .select:valid) > *, 
.\!validate .label-text:has(+ * .select:valid), 
.\!validate .label-text:has(~ .select:valid).label-text, 
.\!validate .label:has(~ .select:valid) > *, 

.\!validate .select:valid ~ .label, 
.\!validate .select:valid ~ .label-text, 
.\!validate .select:valid ~ .label .label-text,  
.\!validate *:has(.select:valid) ~ .label, 
.\!validate *:has(.select:valid) ~ .label-text, 
.\!validate *:has(.select:valid) ~ .label .label-text {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1))) !important;
}

.\!validate .label:has(+ * .select:invalid) > *, 
.\!validate .label-text:has(+ * .select:invalid), 
.\!validate .label-text:has(~ .select:invalid), 
.\!validate .label:has(~ .select:invalid) > *, 

.\!validate .select:invalid ~ .label, 
.\!validate .select:invalid ~ .label-text, 
.\!validate .select:invalid ~ .label .label-text,  
.\!validate *:has(.select:invalid) ~ .label, 
.\!validate *:has(.select:invalid) ~ .label-text, 
.\!validate *:has(.select:invalid) ~ .label .label-text {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1))) !important;
}

.validate .label:has(+ * .select:invalid) > *, 
.validate .label-text:has(+ * .select:invalid), 
.validate .label-text:has(~ .select:invalid), 
.validate .label:has(~ .select:invalid) > *, 

.validate .select:invalid ~ .label, 
.validate .select:invalid ~ .label-text, 
.validate .select:invalid ~ .label .label-text,  
.validate *:has(.select:invalid) ~ .label, 
.validate *:has(.select:invalid) ~ .label-text, 
.validate *:has(.select:invalid) ~ .label .label-text {
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}

.\!validate .label:has(+ * .select:invalid) > *, 
.\!validate .label-text:has(+ * .select:invalid), 
.\!validate .label-text:has(~ .select:invalid), 
.\!validate .label:has(~ .select:invalid) > *, 

.\!validate .select:invalid ~ .label, 
.\!validate .select:invalid ~ .label-text, 
.\!validate .select:invalid ~ .label .label-text,  
.\!validate *:has(.select:invalid) ~ .label, 
.\!validate *:has(.select:invalid) ~ .label-text, 
.\!validate *:has(.select:invalid) ~ .label .label-text {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1))) !important;
}

.\!validate *:has(> .select:valid) ~ .success-message,
.\!validate *:has(> .select:valid) > * > .success-message,

.\!validate .select:valid ~ .success-message,
.\!validate .select:valid + * > .success-message {
  display: block !important;
}

.validate *:has(> .select:valid) ~ .success-message,
.validate *:has(> .select:valid) > * > .success-message,

.validate .select:valid ~ .success-message,
.validate .select:valid + * > .success-message {
  display: block;
}

.\!validate *:has(> .select:valid) ~ .success-message,
.\!validate *:has(> .select:valid) > * > .success-message,

.\!validate .select:valid ~ .success-message,
.\!validate .select:valid + * > .success-message {
  display: block !important;
}

.\!validate *:has(> .select:invalid) ~ .error-message,
.\!validate *:has(> .select:invalid) > * > .error-message,

.\!validate .select:invalid ~ .error-message,
.\!validate .select:invalid + * > .error-message {
  display: block !important;
}

.validate *:has(> .select:invalid) ~ .error-message,
.validate *:has(> .select:invalid) > * > .error-message,

.validate .select:invalid ~ .error-message,
.validate .select:invalid + * > .error-message {
  display: block;
}

.\!validate *:has(> .select:invalid) ~ .error-message,
.\!validate *:has(> .select:invalid) > * > .error-message,

.\!validate .select:invalid ~ .error-message,
.\!validate .select:invalid + * > .error-message {
  display: block !important;
}

@keyframes skeleton {
  from {
    background-position: 150%;
  }

  to {
    background-position: -50%;
  }
}

:where(.\!stats) > :not([hidden]) ~ :not([hidden]) {
  --tw-divide-x-reverse: 0 !important;
  border-right-width: calc(1px * var(--tw-divide-x-reverse)) !important;
  border-left-width: calc(1px * calc(1 - var(--tw-divide-x-reverse))) !important;
  --tw-divide-y-reverse: 0 !important;
  border-top-width: calc(0px * calc(1 - var(--tw-divide-y-reverse))) !important;
  border-bottom-width: calc(0px * var(--tw-divide-y-reverse)) !important;
}

:is([dir="rtl"] .\!stats > :not([hidden]) ~ :not([hidden])) {
  --tw-divide-x-reverse: 1 !important;
}

.switch.disabled,
  .switch:disabled,
  .switch[disabled] {
  pointer-events: none;
  background-color: transparent;
  opacity: 0.4;
}

.switch-outline.disabled,
    .switch-outline:disabled,
    .switch-outline[disabled] {
  pointer-events: none;
  border-color: currentColor;
  background-color: transparent;
  opacity: 0.3;
  --switchhandleborder: 0 0 0 3px var(--fallback-bc,oklch(var(--bc)/1)) inset,
        var(--handleoffsetcalculator) 0 0 3px var(--fallback-bc,oklch(var(--bc)/1)) inset;
}

.switch.is-valid,
.validate .switch:valid {
  --tglbg: var(--fallback-su,oklch(var(--su)/1));
}


.\!validate .switch:valid {
  --tglbg: var(--fallback-su,oklch(var(--su)/1)) !important;
}

.switch.is-valid:focus-visible, .validate .switch:valid:focus-visible {
  outline-color: var(--fallback-su,oklch(var(--su)/0.3)) !important;
}

 .\!validate .switch:valid:focus-visible {
  outline-color: var(--fallback-su,oklch(var(--su)/0.3)) !important;
}

.switch.is-valid:checked,
  .switch.is-valid[checked="true"],
  .switch.is-valid[aria-checked="true"],
  .validate .switch:valid:checked,
  .validate .switch:valid[checked="true"],
  .validate .switch:valid[aria-checked="true"] {
  --tglbg: var(--fallback-su,oklch(var(--su)/1));
}


  .\!validate .switch:valid:checked,
  .\!validate .switch:valid[checked="true"],
  .\!validate .switch:valid[aria-checked="true"] {
  --tglbg: var(--fallback-su,oklch(var(--su)/1)) !important;
}

.switch.is-invalid,
.validate .switch:invalid {
  --tglbg: var(--fallback-er,oklch(var(--er)/1));
}


.\!validate .switch:invalid {
  --tglbg: var(--fallback-er,oklch(var(--er)/1)) !important;
}

.switch.is-invalid:focus-visible, .validate .switch:invalid:focus-visible {
  outline-color: var(--fallback-er,oklch(var(--er)/0.3)) !important;
}

 .\!validate .switch:invalid:focus-visible {
  outline-color: var(--fallback-er,oklch(var(--er)/0.3)) !important;
}

.switch.is-invalid:checked,
  .switch.is-invalid[checked="true"],
  .switch.is-invalid[aria-checked="true"],
  .validate .switch:invalid:checked,
  .validate .switch:invalid[checked="true"],
  .validate .switch:invalid[aria-checked="true"] {
  --tglbg: var(--fallback-er,oklch(var(--er)/1));
}


  .\!validate .switch:invalid:checked,
  .\!validate .switch:invalid[checked="true"],
  .\!validate .switch:invalid[aria-checked="true"] {
  --tglbg: var(--fallback-er,oklch(var(--er)/1)) !important;
}

.\!validate .label:has(+ * .switch:valid) > *, 
.\!validate .label-text:has(+ * .switch:valid), 
.\!validate .label-text:has(~ .switch:valid), 
.\!validate .label:has(~ .switch:valid) > *, 


.\!validate .switch:valid ~ .label, 
.\!validate .switch:valid ~ .label-text, 
.\!validate .switch:valid ~ .label .label-text,  
.\!validate *:has(.switch:valid) ~ .label, 
.\!validate *:has(.switch:valid) ~ .label-text, 
.\!validate *:has(.switch:valid) ~ .label .label-text {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1))) !important;
}

.validate .label:has(+ * .switch:valid) > *, 
.validate .label-text:has(+ * .switch:valid), 
.validate .label-text:has(~ .switch:valid), 
.validate .label:has(~ .switch:valid) > *, 


.validate .switch:valid ~ .label, 
.validate .switch:valid ~ .label-text, 
.validate .switch:valid ~ .label .label-text,  
.validate *:has(.switch:valid) ~ .label, 
.validate *:has(.switch:valid) ~ .label-text, 
.validate *:has(.switch:valid) ~ .label .label-text {
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
}

.\!validate .label:has(+ * .switch:valid) > *, 
.\!validate .label-text:has(+ * .switch:valid), 
.\!validate .label-text:has(~ .switch:valid), 
.\!validate .label:has(~ .switch:valid) > *, 


.\!validate .switch:valid ~ .label, 
.\!validate .switch:valid ~ .label-text, 
.\!validate .switch:valid ~ .label .label-text,  
.\!validate *:has(.switch:valid) ~ .label, 
.\!validate *:has(.switch:valid) ~ .label-text, 
.\!validate *:has(.switch:valid) ~ .label .label-text {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1))) !important;
}

.\!validate .label:has(+ * .switch:invalid) > *, 
.\!validate .label-text:has(+ * .switch:invalid), 
.\!validate .label-text:has(~ .switch:invalid), 
.\!validate .label:has(~ .switch:invalid) > *, 

.\!validate .switch:invalid ~ .label, 
.\!validate .switch:invalid ~ .label-text, 
.\!validate .switch:invalid ~ .label .label-text,  
.\!validate *:has(.switch:invalid) ~ .label, 
.\!validate *:has(.switch:invalid) ~ .label-text, 
.\!validate *:has(.switch:invalid) ~ .label .label-text {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1))) !important;
}

.validate .label:has(+ * .switch:invalid) > *, 
.validate .label-text:has(+ * .switch:invalid), 
.validate .label-text:has(~ .switch:invalid), 
.validate .label:has(~ .switch:invalid) > *, 

.validate .switch:invalid ~ .label, 
.validate .switch:invalid ~ .label-text, 
.validate .switch:invalid ~ .label .label-text,  
.validate *:has(.switch:invalid) ~ .label, 
.validate *:has(.switch:invalid) ~ .label-text, 
.validate *:has(.switch:invalid) ~ .label .label-text {
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}

.\!validate .label:has(+ * .switch:invalid) > *, 
.\!validate .label-text:has(+ * .switch:invalid), 
.\!validate .label-text:has(~ .switch:invalid), 
.\!validate .label:has(~ .switch:invalid) > *, 

.\!validate .switch:invalid ~ .label, 
.\!validate .switch:invalid ~ .label-text, 
.\!validate .switch:invalid ~ .label .label-text,  
.\!validate *:has(.switch:invalid) ~ .label, 
.\!validate *:has(.switch:invalid) ~ .label-text, 
.\!validate *:has(.switch:invalid) ~ .label .label-text {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1))) !important;
}

.\!validate *:has(> .switch:valid) ~ .success-message,
.\!validate *:has(> .switch:valid) > * > .success-message,

.\!validate .switch:valid ~ .success-message,
.\!validate .switch:valid + * > .success-message {
  display: block !important;
}

.\!validate *:has(> .switch:invalid) ~ .error-message,
.\!validate *:has(> .switch:invalid) > * > .error-message,

.\!validate .switch:invalid ~ .error-message,
.\!validate .switch:invalid + * > .error-message {
  display: block !important;
}

.validate *:has(> .switch:invalid) ~ .error-message,
.validate *:has(> .switch:invalid) > * > .error-message,

.validate .switch:invalid ~ .error-message,
.validate .switch:invalid + * > .error-message {
  display: block;
}

.\!validate *:has(> .switch:invalid) ~ .error-message,
.\!validate *:has(> .switch:invalid) > * > .error-message,

.\!validate .switch:invalid ~ .error-message,
.\!validate .switch:invalid + * > .error-message {
  display: block !important;
}

.switch-outline.is-valid,
.validate .switch-outline:valid {
  --tglbg: var(--fallback-b1,oklch(var(--b1)/1));
  --tw-border-opacity: 1;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1)));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity, 1)));
}


.\!validate .switch-outline:valid {
  --tglbg: var(--fallback-b1,oklch(var(--b1)/1)) !important;
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1))) !important;
  --tw-bg-opacity: 1 !important;
  background-color: var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity, 1))) !important;
}

.switch-outline.is-valid:checked,
  .switch-outline.is-valid[checked="true"],
  .switch-outline.is-valid[aria-checked="true"],
  .validate .switch-outline:valid:checked,
  .validate .switch-outline:valid[checked="true"],
  .validate .switch-outline:valid[aria-checked="true"] {
  --tglbg: var(--fallback-b1,oklch(var(--b1)/1));
  --tw-border-opacity: 1;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1)));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity, 1)));
}


  .\!validate .switch-outline:valid:checked,
  .\!validate .switch-outline:valid[checked="true"],
  .\!validate .switch-outline:valid[aria-checked="true"] {
  --tglbg: var(--fallback-b1,oklch(var(--b1)/1)) !important;
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1))) !important;
  --tw-bg-opacity: 1 !important;
  background-color: var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity, 1))) !important;
}

.switch-outline.is-invalid,
.validate .switch-outline:invalid {
  --tglbg: var(--fallback-b1,oklch(var(--b1)/1));
  --tw-border-opacity: 1;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1)));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity, 1)));
}


.\!validate .switch-outline:invalid {
  --tglbg: var(--fallback-b1,oklch(var(--b1)/1)) !important;
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1))) !important;
  --tw-bg-opacity: 1 !important;
  background-color: var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity, 1))) !important;
}

.switch-outline.is-invalid:checked,
  .switch-outline.is-invalid[checked="true"],
  .switch-outline.is-invalid[aria-checked="true"],
  .validate .switch-outline:invalid:checked,
  .validate .switch-outline:invalid[checked="true"],
  .validate .switch-outline:invalid[aria-checked="true"] {
  --tglbg: var(--fallback-b1,oklch(var(--b1)/1));
  --tw-border-opacity: 1;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1)));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity, 1)));
}


  .\!validate .switch-outline:invalid:checked,
  .\!validate .switch-outline:invalid[checked="true"],
  .\!validate .switch-outline:invalid[aria-checked="true"] {
  --tglbg: var(--fallback-b1,oklch(var(--b1)/1)) !important;
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1))) !important;
  --tw-bg-opacity: 1 !important;
  background-color: var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity, 1))) !important;
}

.\!validate .label:has(+ * .switch-outline:valid) > *, 
.\!validate .label-text:has(+ * .switch-outline:valid), 
.\!validate .label-text:has(~ .switch-outline:valid), 
.\!validate .label:has(~ .switch-outline:valid) > *, 


.\!validate .switch-outline:valid ~ .label, 
.\!validate .switch-outline:valid ~ .label-text, 
.\!validate .switch-outline:valid ~ .label .label-text,  
.\!validate *:has(.switch-outline:valid) ~ .label, 
.\!validate *:has(.switch-outline:valid) ~ .label-text, 
.\!validate *:has(.switch-outline:valid) ~ .label .label-text {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1))) !important;
}

.validate .label:has(+ * .switch-outline:valid) > *, 
.validate .label-text:has(+ * .switch-outline:valid), 
.validate .label-text:has(~ .switch-outline:valid), 
.validate .label:has(~ .switch-outline:valid) > *, 


.validate .switch-outline:valid ~ .label, 
.validate .switch-outline:valid ~ .label-text, 
.validate .switch-outline:valid ~ .label .label-text,  
.validate *:has(.switch-outline:valid) ~ .label, 
.validate *:has(.switch-outline:valid) ~ .label-text, 
.validate *:has(.switch-outline:valid) ~ .label .label-text {
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
}

.\!validate .label:has(+ * .switch-outline:valid) > *, 
.\!validate .label-text:has(+ * .switch-outline:valid), 
.\!validate .label-text:has(~ .switch-outline:valid), 
.\!validate .label:has(~ .switch-outline:valid) > *, 


.\!validate .switch-outline:valid ~ .label, 
.\!validate .switch-outline:valid ~ .label-text, 
.\!validate .switch-outline:valid ~ .label .label-text,  
.\!validate *:has(.switch-outline:valid) ~ .label, 
.\!validate *:has(.switch-outline:valid) ~ .label-text, 
.\!validate *:has(.switch-outline:valid) ~ .label .label-text {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1))) !important;
}

.\!validate .label:has(+ * .switch-outline:invalid) > *, 
.\!validate .label-text:has(+ * .switch-outline:invalid), 
.\!validate .label-text:has(~ .switch-outline:invalid), 
.\!validate .label:has(~ .switch-outline:invalid) > *, 

.\!validate .switch-outline:invalid ~ .label, 
.\!validate .switch-outline:invalid ~ .label-text, 
.\!validate .switch-outline:invalid ~ .label .label-text,  
.\!validate *:has(.switch-outline:invalid) ~ .label, 
.\!validate *:has(.switch-outline:invalid) ~ .label-text, 
.\!validate *:has(.switch-outline:invalid) ~ .label .label-text {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1))) !important;
}

.validate .label:has(+ * .switch-outline:invalid) > *, 
.validate .label-text:has(+ * .switch-outline:invalid), 
.validate .label-text:has(~ .switch-outline:invalid), 
.validate .label:has(~ .switch-outline:invalid) > *, 

.validate .switch-outline:invalid ~ .label, 
.validate .switch-outline:invalid ~ .label-text, 
.validate .switch-outline:invalid ~ .label .label-text,  
.validate *:has(.switch-outline:invalid) ~ .label, 
.validate *:has(.switch-outline:invalid) ~ .label-text, 
.validate *:has(.switch-outline:invalid) ~ .label .label-text {
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}

.\!validate .label:has(+ * .switch-outline:invalid) > *, 
.\!validate .label-text:has(+ * .switch-outline:invalid), 
.\!validate .label-text:has(~ .switch-outline:invalid), 
.\!validate .label:has(~ .switch-outline:invalid) > *, 

.\!validate .switch-outline:invalid ~ .label, 
.\!validate .switch-outline:invalid ~ .label-text, 
.\!validate .switch-outline:invalid ~ .label .label-text,  
.\!validate *:has(.switch-outline:invalid) ~ .label, 
.\!validate *:has(.switch-outline:invalid) ~ .label-text, 
.\!validate *:has(.switch-outline:invalid) ~ .label .label-text {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1))) !important;
}

.\!validate *:has(> .switch-outline:valid) ~ .success-message,
.\!validate *:has(> .switch-outline:valid) > * > .success-message,

.\!validate .switch-outline:valid ~ .success-message,
.\!validate .switch-outline:valid + * > .success-message {
  display: block !important;
}

.\!validate *:has(> .switch-outline:invalid) ~ .error-message,
.\!validate *:has(> .switch-outline:invalid) > * > .error-message,

.\!validate .switch-outline:invalid ~ .error-message,
.\!validate .switch-outline:invalid + * > .error-message {
  display: block !important;
}

.validate *:has(> .switch-outline:invalid) ~ .error-message,
.validate *:has(> .switch-outline:invalid) > * > .error-message,

.validate .switch-outline:invalid ~ .error-message,
.validate .switch-outline:invalid + * > .error-message {
  display: block;
}

.\!validate *:has(> .switch-outline:invalid) ~ .error-message,
.\!validate *:has(> .switch-outline:invalid) > * > .error-message,

.\!validate .switch-outline:invalid ~ .error-message,
.\!validate .switch-outline:invalid + * > .error-message {
  display: block !important;
}

.table tr.active,
  .table tr.active:nth-child(even),
  .table-striped tbody tr:nth-child(even) {
  background-color: var(--fallback-bc,oklch(var(--bc)/0.1));
}

.table-striped tr.active,
    .table-striped tr.active:nth-child(even),
    .table-striped-striped tbody tr:nth-child(even) {
  background-color: var(--fallback-bc,oklch(var(--bc)/0.1));
}

textarea {
  background-color: transparent;
}

textarea:focus {
  outline-width: 0px;
  outline-color: transparent;
}

textarea:focus-visible {
  outline: unset;
}

.textarea.disabled,
  .textarea:disabled,
  .textarea[disabled] {
  pointer-events: none;
  border-width: 0px;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.1));
  background-color: var(--fallback-n,oklch(var(--n)/0.1));
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

.textarea.textarea-floating.disabled,
    .textarea.textarea-floating:disabled,
    .textarea.textarea-floating[disabled] {
  border-width: 1px;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
}

.textarea.textarea-floating.disabled ~ .textarea-floating-label, .textarea.textarea-floating:disabled ~ .textarea-floating-label, .textarea.textarea-floating[disabled] ~ .textarea-floating-label {
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

.textarea.textarea-filled.disabled,
    .textarea.textarea-filled:disabled,
    .textarea.textarea-filled[disabled] {
  border-bottom-width: 1px;
}

.textarea.textarea-filled.disabled ~ .textarea-filled-label, .textarea.textarea-filled:disabled ~ .textarea-filled-label, .textarea.textarea-filled[disabled] ~ .textarea-filled-label {
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

.peer:focus ~ .textarea-floating-label,.peer:focus ~ 
.textarea-filled-label {
  --tw-text-opacity: 1;
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
}

.peer:focus ~ .textarea-floating-label::-moz-placeholder, .peer:focus ~ 
.textarea-filled-label::-moz-placeholder {
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

.peer:focus ~ .textarea-floating-label::placeholder,.peer:focus ~ 
.textarea-filled-label::placeholder {
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

.peer:not(:-moz-placeholder-shown) ~ .textarea-floating-label {
  top: 0px;
  margin-inline-start: 0.75rem;
  width: -moz-fit-content;
  width: fit-content;
  --tw-translate-y: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
  padding-left: 0.25rem;
  padding-right: 0.25rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.peer:focus ~ .textarea-floating-label,
  .peer:focus-within ~ .textarea-floating-label,
  .peer:not(:placeholder-shown) ~ .textarea-floating-label {
  top: 0px;
  margin-inline-start: 0.75rem;
  width: -moz-fit-content;
  width: fit-content;
  --tw-translate-y: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
  padding-left: 0.25rem;
  padding-right: 0.25rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.peer:not(:-moz-placeholder-shown) ~ .textarea-filled-label {
  top: 0.25rem;
  margin-inline-start: 1rem;
  width: -moz-fit-content;
  width: fit-content;
  padding: 0px;
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.peer:focus ~ .textarea-filled-label,
  .peer:focus-within ~ .textarea-filled-label,
  .peer:not(:placeholder-shown) ~ .textarea-filled-label {
  top: 0.25rem;
  margin-inline-start: 1rem;
  width: -moz-fit-content;
  width: fit-content;
  padding: 0px;
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.input-group .textarea {
  border-width: 0px;
}

.input-group .textarea:focus,
    .input-group .textarea:focus-within {
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
}

.textarea.is-valid,
.validate .textarea:valid {
  --tw-border-opacity: 1;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1)));
}


.\!validate .textarea:valid {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1))) !important;
}

.textarea.is-valid:focus,
  .textarea.is-valid:focus-within,
  .validate .textarea:valid:focus,
  .validate .textarea:valid:focus-within {
  --tw-shadow-color: var(--fallback-su,oklch(var(--su)/0.22));
  --tw-shadow: var(--tw-shadow-colored);
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-opacity: 1;
  --tw-ring-color: var(--fallback-su,oklch(var(--su)/var(--tw-ring-opacity, 1)));
}


  .\!validate .textarea:valid:focus,
  .\!validate .textarea:valid:focus-within {
  --tw-shadow-color: var(--fallback-su,oklch(var(--su)/0.22)) !important;
  --tw-shadow: var(--tw-shadow-colored) !important;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color) !important;
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color) !important;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000) !important;
  --tw-ring-opacity: 1 !important;
  --tw-ring-color: var(--fallback-su,oklch(var(--su)/var(--tw-ring-opacity, 1))) !important;
}

.textarea.is-valid.textarea-filled:focus,
  .textarea.is-valid.textarea-filled:focus-within,
  .validate .textarea:valid.textarea-filled:focus,
  .validate .textarea:valid.textarea-filled:focus-within {
  --tw-border-opacity: 1;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1)));
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
}


  .\!validate .textarea:valid.textarea-filled:focus,
  .\!validate .textarea:valid.textarea-filled:focus-within {
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow) !important;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000) !important;
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1))) !important;
  --tw-shadow: 0 0 #0000 !important;
  --tw-shadow-colored: 0 0 #0000 !important;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow) !important;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000) !important;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color) !important;
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color) !important;
}

.textarea.is-valid ~ .textarea-floating-label,
  .textarea.is-valid ~ .textarea-filled-label,
  .validate .textarea:valid ~ .textarea-floating-label,
  .validate .textarea:valid ~ .textarea-filled-label {
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
}


  .\!validate .textarea:valid ~ .textarea-floating-label,
  .\!validate .textarea:valid ~ .textarea-filled-label {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1))) !important;
}

.textarea.is-valid:focus ~ .textarea-filled-focused,
  .textarea.is-valid:focus-within ~ .textarea-filled-focused,
  .validate .textarea:valid:focus ~ .textarea-filled-focused,
  .validate .textarea:valid:focus-within ~ .textarea-filled-focused {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity, 1)));
}


  .\!validate .textarea:valid:focus ~ .textarea-filled-focused,
  .\!validate .textarea:valid:focus-within ~ .textarea-filled-focused {
  --tw-bg-opacity: 1 !important;
  background-color: var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity, 1))) !important;
}

.textarea:focus.is-valid ~ .textarea-floating-label,
.validate .textarea:focus:valid ~ .textarea-floating-label,
.textarea:focus.is-valid ~ .textarea-filled-label,
.validate .textarea:focus:valid ~ .textarea-filled-label {
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
}


.\!validate .textarea:focus:valid ~ .textarea-floating-label,
.\!validate .textarea:focus:valid ~ .textarea-filled-label {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1))) !important;
}

.textarea:focus.is-invalid ~ .textarea-floating-label,
.validate .textarea:focus:invalid ~ .textarea-floating-label,
.textarea:focus.is-invalid ~ .textarea-filled-label,
.validate .textarea:focus:invalid ~ .textarea-filled-label {
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}


.\!validate .textarea:focus:invalid ~ .textarea-floating-label,
.\!validate .textarea:focus:invalid ~ .textarea-filled-label {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1))) !important;
}

.textarea.is-invalid,
.validate .textarea:invalid {
  --tw-border-opacity: 1;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1)));
}


.\!validate .textarea:invalid {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1))) !important;
}

.textarea.is-invalid:focus,
  .textarea.is-invalid:focus-within,
  .validate .textarea:invalid:focus,
  .validate .textarea:invalid:focus-within {
  --tw-shadow-color: var(--fallback-er,oklch(var(--er)/0.22));
  --tw-shadow: var(--tw-shadow-colored);
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-opacity: 1;
  --tw-ring-color: var(--fallback-er,oklch(var(--er)/var(--tw-ring-opacity, 1)));
}


  .\!validate .textarea:invalid:focus,
  .\!validate .textarea:invalid:focus-within {
  --tw-shadow-color: var(--fallback-er,oklch(var(--er)/0.22)) !important;
  --tw-shadow: var(--tw-shadow-colored) !important;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color) !important;
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color) !important;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000) !important;
  --tw-ring-opacity: 1 !important;
  --tw-ring-color: var(--fallback-er,oklch(var(--er)/var(--tw-ring-opacity, 1))) !important;
}

.textarea.is-invalid.textarea-filled:focus,
  .textarea.is-invalid.textarea-filled:focus-within,
  .validate .textarea:invalid.textarea-filled:focus,
  .validate .textarea:invalid.textarea-filled:focus-within {
  --tw-border-opacity: 1;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1)));
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
}


  .\!validate .textarea:invalid.textarea-filled:focus,
  .\!validate .textarea:invalid.textarea-filled:focus-within {
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow) !important;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000) !important;
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1))) !important;
  --tw-shadow: 0 0 #0000 !important;
  --tw-shadow-colored: 0 0 #0000 !important;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow) !important;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000) !important;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color) !important;
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color) !important;
}

.textarea.is-invalid ~ .textarea-floating-label,
  .textarea.is-invalid ~ .textarea-filled-label,
  .validate .textarea:invalid ~ .textarea-floating-label,
  .validate .textarea:invalid ~ .textarea-filled-label {
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}


  .\!validate .textarea:invalid ~ .textarea-floating-label,
  .\!validate .textarea:invalid ~ .textarea-filled-label {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1))) !important;
}

.textarea.is-invalid:focus ~ .textarea-filled-focused,
  .textarea.is-invalid:focus-within ~ .textarea-filled-focused,
  .validate .textarea:invalid:focus ~ .textarea-filled-focused,
  .validate .textarea:invalid:focus-within ~ .textarea-filled-focused {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity, 1)));
}


  .\!validate .textarea:invalid:focus ~ .textarea-filled-focused,
  .\!validate .textarea:invalid:focus-within ~ .textarea-filled-focused {
  --tw-bg-opacity: 1 !important;
  background-color: var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity, 1))) !important;
}

.\!validate .label:has(+ * .textarea:valid) > *, 
.\!validate .label-text:has(+ * .textarea:valid), 
.\!validate .label-text:has(~ .textarea:valid), 
.\!validate .label:has(~ .textarea:valid) > *, 

.\!validate .textarea:valid ~ .label, 
.\!validate .textarea:valid ~ .label-text, 
.\!validate .textarea:valid ~ .label .label-text,  
.\!validate *:has(.textarea:valid) ~ .label, 
.\!validate *:has(.textarea:valid) ~ .label-text, 
.\!validate *:has(.textarea:valid) ~ .label .label-text {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1))) !important;
}

.validate .label:has(+ * .textarea:valid) > *, 
.validate .label-text:has(+ * .textarea:valid), 
.validate .label-text:has(~ .textarea:valid), 
.validate .label:has(~ .textarea:valid) > *, 

.validate .textarea:valid ~ .label, 
.validate .textarea:valid ~ .label-text, 
.validate .textarea:valid ~ .label .label-text,  
.validate *:has(.textarea:valid) ~ .label, 
.validate *:has(.textarea:valid) ~ .label-text, 
.validate *:has(.textarea:valid) ~ .label .label-text {
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
}

.\!validate .label:has(+ * .textarea:valid) > *, 
.\!validate .label-text:has(+ * .textarea:valid), 
.\!validate .label-text:has(~ .textarea:valid), 
.\!validate .label:has(~ .textarea:valid) > *, 

.\!validate .textarea:valid ~ .label, 
.\!validate .textarea:valid ~ .label-text, 
.\!validate .textarea:valid ~ .label .label-text,  
.\!validate *:has(.textarea:valid) ~ .label, 
.\!validate *:has(.textarea:valid) ~ .label-text, 
.\!validate *:has(.textarea:valid) ~ .label .label-text {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1))) !important;
}

.\!validate .label:has(+ * .textarea:invalid) > *, 
.\!validate .label-text:has(+ * .textarea:invalid), 
.\!validate .label-text:has(~ .textarea:invalid), 
.\!validate .label:has(~ .textarea:invalid) > *, 

.\!validate .textarea:invalid ~ .label, 
.\!validate .textarea:invalid ~ .label-text, 
.\!validate .textarea:invalid ~ .label .label-text,  
.\!validate *:has(.textarea:invalid) ~ .label, 
.\!validate *:has(.textarea:invalid) ~ .label-text, 
.\!validate *:has(.textarea:invalid) ~ .label .label-text {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1))) !important;
}

.validate .label:has(+ * .textarea:invalid) > *, 
.validate .label-text:has(+ * .textarea:invalid), 
.validate .label-text:has(~ .textarea:invalid), 
.validate .label:has(~ .textarea:invalid) > *, 

.validate .textarea:invalid ~ .label, 
.validate .textarea:invalid ~ .label-text, 
.validate .textarea:invalid ~ .label .label-text,  
.validate *:has(.textarea:invalid) ~ .label, 
.validate *:has(.textarea:invalid) ~ .label-text, 
.validate *:has(.textarea:invalid) ~ .label .label-text {
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}

.\!validate .label:has(+ * .textarea:invalid) > *, 
.\!validate .label-text:has(+ * .textarea:invalid), 
.\!validate .label-text:has(~ .textarea:invalid), 
.\!validate .label:has(~ .textarea:invalid) > *, 

.\!validate .textarea:invalid ~ .label, 
.\!validate .textarea:invalid ~ .label-text, 
.\!validate .textarea:invalid ~ .label .label-text,  
.\!validate *:has(.textarea:invalid) ~ .label, 
.\!validate *:has(.textarea:invalid) ~ .label-text, 
.\!validate *:has(.textarea:invalid) ~ .label .label-text {
  --tw-text-opacity: 1 !important;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1))) !important;
}

.\!validate *:has(> .textarea:valid) ~ .success-message,
.\!validate *:has(> .textarea:valid) > * > .success-message,

.\!validate .textarea:valid ~ .success-message,
.\!validate .textarea:valid + * > .success-message {
  display: block !important;
}

.\!validate *:has(> .textarea:invalid) ~ .error-message,
.\!validate *:has(> .textarea:invalid) > * > .error-message,

.\!validate .textarea:invalid ~ .error-message,
.\!validate .textarea:invalid + * > .error-message {
  display: block !important;
}

.validate *:has(> .textarea:invalid) ~ .error-message,
.validate *:has(> .textarea:invalid) > * > .error-message,

.validate .textarea:invalid ~ .error-message,
.validate .textarea:invalid + * > .error-message {
  display: block;
}

.\!validate *:has(> .textarea:invalid) ~ .error-message,
.\!validate *:has(> .textarea:invalid) > * > .error-message,

.\!validate .textarea:invalid ~ .error-message,
.\!validate .textarea:invalid + * > .error-message {
  display: block !important;
}

:root .prose {
  --tw-prose-body: var(--fallback-bc,oklch(var(--bc)/0.8));
  --tw-prose-headings: var(--fallback-bc,oklch(var(--bc)/0.9));
  --tw-prose-lead: var(--tw-prose-body);
  --tw-prose-links: var(--fallback-p,oklch(var(--p)/1));
  --tw-prose-kbd: var(--tw-prose-body);
  --tw-prose-bold: var(--tw-prose-headings);
  --tw-prose-counters: var(--tw-prose-headings);
  --tw-prose-bullets: var(--fallback-bc,oklch(var(--bc)/0.5));
  --tw-prose-hr: var(--fallback-bc,oklch(var(--bc)/0.2));
  --tw-prose-quotes: var(--tw-prose-headings);
  --tw-prose-quote-borders: var(--fallback-bc,oklch(var(--bc)/0.2));
  --tw-prose-captions: var(--fallback-bc,oklch(var(--bc)/0.40));
  --tw-prose-code: #e83e8c;
  --tw-prose-pre-code: var(--fallback-nc,oklch(var(--nc)/1));
  --tw-prose-pre-bg: var(--fallback-n,oklch(var(--n)/1));
  --tw-prose-th-borders: var(--fallback-bc,oklch(var(--bc)/0.24));
  --tw-prose-td-borders: var(--tw-prose-th-borders);
  line-height: 1.375rem;
}

.prose :where(code):not(:where([class~="not-prose"], [class~="not-prose"] *))::before, .prose :where(code):not(:where([class~="not-prose"], [class~="not-prose"] *))::after {
  display: none;
}

.prose pre code {
  border-radius: 0;
  padding: 0;
}

.prose :where(tbody tr, thead):not(:where([class~="not-prose"] *)) {
  border-bottom-color: var(--fallback-bc,oklch(var(--bc)/0.2));
}

.prose :where(kbd):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  padding: 0px;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.prose :where(code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  font-weight: 500;
  font-size: 0.875rem;
}

.prose :where(table):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  font-size: 0.875rem;
}

.glass,
  .glass.btn-active {
  border: none;
  -webkit-backdrop-filter: blur(var(--glass-blur, 40px));
          backdrop-filter: blur(var(--glass-blur, 40px));
  background-color: transparent;
  background-image: linear-gradient(135deg, rgb(255 255 255 / var(--glass-opacity, 30%)) 0%, rgb(0 0 0 / 0%) 100%),
      linear-gradient(
        var(--glass-reflex-degree, 100deg),
        rgb(255 255 255 / var(--glass-reflex-opacity, 10%)) 25%,
        rgb(0 0 0 / 0%) 25%
      );
  box-shadow: 0 0 0 1px rgb(255 255 255 / var(--glass-border-opacity, 10%)) inset,
      0 0 0 2px rgb(0 0 0 / 5%);
  text-shadow: 0 1px rgb(0 0 0 / var(--glass-text-shadow-opacity, 5%));
}

@media (hover: hover) {
  .glass.btn-active {
    border: none;
    -webkit-backdrop-filter: blur(var(--glass-blur, 40px));
            backdrop-filter: blur(var(--glass-blur, 40px));
    background-color: transparent;
    background-image: linear-gradient(135deg, rgb(255 255 255 / var(--glass-opacity, 30%)) 0%, rgb(0 0 0 / 0%) 100%),
        linear-gradient(
          var(--glass-reflex-degree, 100deg),
          rgb(255 255 255 / var(--glass-reflex-opacity, 10%)) 25%,
          rgb(0 0 0 / 0%) 25%
        );
    box-shadow: 0 0 0 1px rgb(255 255 255 / var(--glass-border-opacity, 10%)) inset,
        0 0 0 2px rgb(0 0 0 / 5%);
    text-shadow: 0 1px rgb(0 0 0 / var(--glass-text-shadow-opacity, 5%));
  }
}

.no-animation {
  --btn-focus-scale: 1;
  --animation-btn: 0;
  --animation-input: 0;
}

.tab-border {
  --tab-border: 1px;
}

.advance-select-xs {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
  padding-top: 1px;
  padding-bottom: 1px;
  padding-inline-end: 1.75rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.advance-select-xs ~ .advance-select-menu {
  --tw-shadow: 0 2px 4px 0 var(--fallback-bs,oklch(var(--bs)/0.26));
  --tw-shadow-colored: 0 2px 4px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.advance-select-xs ~ .advance-select-menu .advance-select-option {
  width: 100%;
  cursor: pointer;
  padding-left: 0.5rem;
  padding-right: 0.5rem;
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
  font-weight: 400;
}

.advance-select-sm {
  padding-left: 0.625rem;
  padding-right: 0.625rem;
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
  padding-inline-end: 1.75rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.advance-select-sm ~ .advance-select-menu {
  --tw-shadow: 0 2px 4px 0 var(--fallback-bs,oklch(var(--bs)/0.26));
  --tw-shadow-colored: 0 2px 4px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.advance-select-sm ~ .advance-select-menu .advance-select-option {
  width: 100%;
  cursor: pointer;
  padding-left: 0.5rem;
  padding-right: 0.5rem;
  padding-top: 0.375rem;
  padding-bottom: 0.375rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
  font-weight: 400;
}

.advance-select-lg {
  padding-left: 1rem;
  padding-right: 1rem;
  padding-top: 0.625rem;
  padding-bottom: 0.625rem;
  padding-inline-end: 2.5rem;
  font-size: 1.125rem;
  line-height: 1.5rem;
}

.advance-select-lg ~ .advance-select-menu .advance-select-option {
  width: 100%;
  cursor: pointer;
  padding-left: 1rem;
  padding-right: 1rem;
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
  font-size: 1.125rem;
  line-height: 1.5rem;
  font-weight: 400;
}

.artboard-demo {
  display: flex;
  flex: none;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.artboard.phone {
  width: 320px;
}

.artboard.phone-1 {
  width: 320px;
  height: 568px;
}

.artboard.phone-1.horizontal,
      .artboard.phone-1.artboard-horizontal {
  width: 568px;
  height: 320px;
}

.artboard.phone-2 {
  width: 375px;
  height: 667px;
}

.artboard.phone-2.horizontal,
      .artboard.phone-2.artboard-horizontal {
  width: 667px;
  height: 375px;
}

.artboard.phone-3 {
  width: 414px;
  height: 736px;
}

.artboard.phone-3.horizontal,
      .artboard.phone-3.artboard-horizontal {
  width: 736px;
  height: 414px;
}

.artboard.phone-4 {
  width: 375px;
  height: 812px;
}

.artboard.phone-4.horizontal,
      .artboard.phone-4.artboard-horizontal {
  width: 812px;
  height: 375px;
}

.artboard.phone-5 {
  width: 414px;
  height: 896px;
}

.artboard.phone-5.horizontal,
      .artboard.phone-5.artboard-horizontal {
  width: 896px;
  height: 414px;
}

.artboard.phone-6 {
  width: 320px;
  height: 1024px;
}

.artboard.phone-6.horizontal,
      .artboard.phone-6.artboard-horizontal {
  width: 1024px;
  height: 320px;
}

.badge-xs {
  height: 1rem;
  padding-left: 0.375rem;
  padding-right: 0.375rem;
  font-size: 0.75rem;
  line-height: 1rem;
}

.badge-sm {
  height: 1.25rem;
  padding-left: 0.5rem;
  padding-right: 0.5rem;
  font-size: 0.75rem;
  line-height: 1rem;
}

.badge-lg {
  height: 1.75rem;
  padding-left: 0.875rem;
  padding-right: 0.875rem;
  font-size: 1rem;
  line-height: 1.375rem;
}

.badge-xl {
  height: 2rem;
  padding-left: 1rem;
  padding-right: 1rem;
  font-size: 1.125rem;
  line-height: 1.5rem;
}

.btn-xs {
  height: 1.5rem;
  min-height: 1.5rem;
  padding-left: 0.5rem;
  padding-right: 0.5rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.btn-sm {
  height: 1.875rem;
  min-height: 1.875rem;
  padding-left: 0.75rem;
  padding-right: 0.75rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.btn-lg {
  height: 2.875rem;
  min-height: 2.875rem;
  padding-left: 1.25rem;
  padding-right: 1.25rem;
  font-size: 1.125rem;
  line-height: 1.5rem;
}

.btn-wide {
  width: 16rem;
}

.btn-block {
  width: 100%;
}

.btn-square:where(.btn-xs) {
  height: 1.5rem;
  width: 1.5rem;
  padding: 0px;
}

.btn-square:where(.btn-sm) {
  height: 1.875rem;
  width: 1.875rem;
  padding: 0px;
}

.btn-square:where(.btn-lg) {
  height: 2.875rem;
  width: 2.875rem;
  padding: 0px;
}

.btn-circle:where(.btn-xs) {
  height: 1.5rem;
  width: 1.5rem;
  border-radius: 9999px;
  padding: 0px;
}

.btn-circle:where(.btn-sm) {
  height: 1.875rem;
  width: 1.875rem;
  border-radius: 9999px;
  padding: 0px;
}

.btn-circle:where(.btn-lg) {
  height: 2.875rem;
  width: 2.875rem;
  border-radius: 9999px;
  padding: 0px;
}

.card-side {
  flex-shrink: 0;
  flex-direction: row;
  align-items: stretch;
}

.card-side :where(figure:first-child) {
  overflow: hidden;
  border-start-start-radius: inherit;
  border-start-end-radius: unset;
  border-end-start-radius: inherit;
  border-end-end-radius: unset;
}

.card-side :where(figure:last-child) {
  overflow: hidden;
  border-start-start-radius: unset;
  border-start-end-radius: inherit;
  border-end-start-radius: unset;
  border-end-end-radius: inherit;
}

.card-side figure > * {
  max-width: unset;
}

:where(.card-side figure > *) {
  width: 100%;
  height: 100%;
  -o-object-fit: cover;
     object-fit: cover;
}

[type="checkbox"].checkbox-xs {
  width: 1rem;
  height: 1rem;
}

[type="checkbox"].checkbox-sm {
  width: 1.25rem;
  height: 1.25rem;
}

[type="checkbox"].checkbox-lg {
  width: 2rem;
  height: 2rem;
}

.divider-horizontal {
  flex-direction: column;
}

.divider-horizontal::before {
  height: 100%;
  width: 1px;
  border-inline-end-width: 1px;
  content: var(--tw-content);
  border-top-width: 0px;
}

.divider-horizontal::after {
  height: 100%;
  width: 1px;
  border-inline-end-width: 1px;
  content: var(--tw-content);
  border-top-width: 0px;
}

.divider-vertical {
  flex-direction: row;
}

.divider-vertical::before {
  height: 1px;
  content: var(--tw-content);
  width: 100%;
}

.divider-vertical::after {
  height: 1px;
  content: var(--tw-content);
  width: 100%;
}

.drawer-start {
  inset-inline-start: 0px;
  top: 0px;
  --tw-translate-x: -100%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  inset-inline-end: calc(100vw - 23.45rem);
}

.drawer-start:where([dir="rtl"], [dir="rtl"] *) {
  --tw-translate-x: 100%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.drawer-end {
  inset-inline-end: 0px;
  top: 0px;
  --tw-translate-x: 100%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  inset-inline-start: calc(100vw - 23.45rem);
}

.drawer-end:where([dir="rtl"], [dir="rtl"] *) {
  --tw-translate-x: -100%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.drawer-top {
  left: 0px;
  right: 0px;
  top: 0px;
  max-height: 15rem;
  max-width: none;
  --tw-translate-y: -100%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.drawer-bottom {
  left: 0px;
  right: 0px;
  bottom: 0px;
  max-height: 15rem;
  max-width: none;
  --tw-translate-y: 100%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.indicator :where(.indicator-item) {
  bottom: auto;
  inset-inline-end: 0px;
  inset-inline-start: auto;
  top: 0px;
  --tw-translate-y: -50%;
  --tw-translate-x: 50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.indicator :where(.indicator-item):where([dir="rtl"], [dir="rtl"] *) {
  --tw-translate-x: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.indicator :where(.indicator-item.indicator-start) {
  inset-inline-end: auto;
  inset-inline-start: 0px;
  --tw-translate-x: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.indicator :where(.indicator-item.indicator-start):where([dir="rtl"], [dir="rtl"] *) {
  --tw-translate-x: 50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.indicator :where(.indicator-item.indicator-center) {
  inset-inline-end: 50%;
  inset-inline-start: 50%;
  --tw-translate-x: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.indicator :where(.indicator-item.indicator-center):where([dir="rtl"], [dir="rtl"] *) {
  --tw-translate-x: 50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.indicator :where(.indicator-item.indicator-end) {
  inset-inline-end: 0px;
  inset-inline-start: auto;
  --tw-translate-x: 50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.indicator :where(.indicator-item.indicator-end):where([dir="rtl"], [dir="rtl"] *) {
  --tw-translate-x: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.indicator :where(.indicator-item.indicator-bottom) {
  bottom: 0px;
  top: auto;
  --tw-translate-y: 50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.indicator :where(.indicator-item.indicator-middle) {
  top: 50%;
}

.indicator :where(.indicator-item.indicator-top) {
  bottom: auto;
  top: 0px;
  --tw-translate-y: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.input-xs {
  height: 1.5rem;
  padding-left: 0.5rem;
  padding-right: 0.5rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.input-sm {
  height: 1.875rem;
  padding-left: 0.625rem;
  padding-right: 0.625rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.input-lg {
  height: 2.875rem;
  padding-left: 1rem;
  padding-right: 1rem;
  font-size: 1.125rem;
  line-height: 1.5rem;
}

.input-filled.input-sm {
  height: 2.5rem;
}

.input-filled.input-lg {
  height: 3.5rem;
}

.join.join-vertical {
  flex-direction: column;
}

.join.join-vertical .join-item:first-child:not(:last-child),
  .join.join-vertical *:first-child:not(:last-child) .join-item {
  border-end-start-radius: 0;
  border-end-end-radius: 0;
  border-start-start-radius: inherit;
  border-start-end-radius: inherit;
}

.join.join-vertical .join-item:last-child:not(:first-child),
  .join.join-vertical *:last-child:not(:first-child) .join-item {
  border-start-start-radius: 0;
  border-start-end-radius: 0;
  border-end-start-radius: inherit;
  border-end-end-radius: inherit;
}

.kbd-xs {
  padding-left: 0.25rem;
  padding-right: 0.25rem;
  font-size: 0.75rem;
  line-height: 1rem;
  min-height: 1.2em;
  min-width: 1.2em;
}

.kbd-sm {
  padding-left: 0.25rem;
  padding-right: 0.25rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
  min-height: 1.6em;
  min-width: 1.6em;
}

.kbd-lg {
  padding-left: 1rem;
  padding-right: 1rem;
  font-size: 1.125rem;
  line-height: 1.5rem;
  min-height: 2.5em;
  min-width: 2.5em;
}

.menu-horizontal {
  display: inline-flex;
  flex-direction: row;
}

.menu-horizontal > li:not(.menu-title) > .collapse > ul {
  position: absolute;
}

.menu-vertical {
  display: flex;
  flex-direction: column;
}

.menu-vertical > li:not(.menu-title) > .collapse > ul {
  position: relative;
}

.modal-top {
  place-items: start;
}

.modal-top-start {
  justify-content: flex-start;
}

.modal-top-end {
  justify-content: flex-end;
}

.modal-middle {
  place-items: center;
}

.modal-middle-start {
  place-items: center;
  justify-content: flex-start;
}

.modal-middle-end {
  place-items: center;
  justify-content: flex-end;
}

.modal-bottom {
  place-items: end;
}

.modal-bottom-start {
  place-items: end;
  justify-content: flex-start;
}

.modal-bottom-end {
  place-items: end;
  justify-content: flex-end;
}

.modal-dialog-sm {
  max-width: 24rem;
}

.modal-dialog-lg {
  max-width: 48rem;
}

.modal-dialog-xl {
  max-width: 64rem;
}

.pin-input-sm {
  width: 1.875rem;
  height: 1.875rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.pin-input-lg {
  width: 3rem;
  height: 3rem;
  font-size: 1.125rem;
  line-height: 1.5rem;
}

[type="radio"].radio.radio-xs, [type="radio"].radio-inset.radio-xs {
  width: 1rem;
  height: 1rem;
}

[type="radio"].radio.radio-sm, [type="radio"].radio-inset.radio-sm {
  width: 1.25rem;
  height: 1.25rem;
}

[type="radio"].radio.radio-lg, [type="radio"].radio-inset.radio-lg {
  width: 2rem;
  height: 2rem;
}

.range-xs {
  height: 0.25rem;
}

.range-xs::-webkit-slider-runnable-track {
  height: 0.25rem;
}

.range-xs::-moz-range-track {
  height: 0.25rem;
}

.range-xs::-webkit-slider-thumb {
  width: 0.625rem;
  height: 0.625rem;
  border-width: 2.5px;
}

.range-xs::-moz-range-thumb {
  width: 0.625rem;
  height: 0.625rem;
  border-width: 2.5px;
}

.range-sm {
  height: 0.375rem;
}

.range-sm::-webkit-slider-runnable-track {
  height: 0.375rem;
}

.range-sm::-moz-range-track {
  height: 0.375rem;
}

.range-sm::-webkit-slider-thumb {
  width: 0.75rem;
  height: 0.75rem;
  border-width: 2.5px;
}

.range-sm::-moz-range-thumb {
  width: 0.75rem;
  height: 0.75rem;
  border-width: 2.5px;
}

.range-lg {
  height: 0.75rem;
}

.range-lg::-webkit-slider-runnable-track {
  height: 0.75rem;
}

.range-lg::-moz-range-track {
  height: 0.75rem;
}

.range-lg::-webkit-slider-thumb {
  width: 1.25rem;
  height: 1.25rem;
  border-width: 4px;
}

.range-lg::-moz-range-thumb {
  width: 1.25rem;
  height: 1.25rem;
  border-width: 4px;
}

.select-xs {
  height: 1.5rem;
  padding-left: 0.5rem;
  padding-right: 0.5rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.select-sm {
  height: 1.875rem;
  padding-left: 0.625rem;
  padding-right: 0.625rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.select-lg {
  height: 2.875rem;
  padding-left: 1rem;
  padding-right: 1rem;
  font-size: 1.125rem;
  line-height: 1.5rem;
}

.select-filled.select-sm {
  height: 2.5rem;
}

.select-filled.select-lg {
  height: 3.5rem;
}

.artboard-demo {
  border-radius: var(--rounded-box, 0.5rem);
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity, 1)));
  color: var(--fallback-bc,oklch(var(--bc)/0.8));
  --tw-shadow: 0 2px 4px 0 var(--fallback-bs,oklch(var(--bs)/0.26));
  --tw-shadow-colored: 0 2px 4px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.avatar.online-top:before {
  content: "";
  position: absolute;
  z-index: 10;
  display: block;
  border-radius: 9999px;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity, 1)));
  outline-style: solid;
  outline-width: 2px;
  outline-color: var(--fallback-b1,oklch(var(--b1)/1));
  width: 20%;
  height: 20%;
  top: 3%;
  right: 3%;
}

.avatar.offline-top:before {
  content: "";
  position: absolute;
  z-index: 10;
  display: block;
  border-radius: 9999px;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity, 1)));
  outline-style: solid;
  outline-width: 2px;
  outline-color: var(--fallback-b1,oklch(var(--b1)/1));
  width: 20%;
  height: 20%;
  top: 3%;
  right: 3%;
}

.avatar.busy-top:before {
  content: "";
  position: absolute;
  z-index: 10;
  display: block;
  border-radius: 9999px;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity, 1)));
  outline-style: solid;
  outline-width: 2px;
  outline-color: var(--fallback-b1,oklch(var(--b1)/1));
  width: 20%;
  height: 20%;
  top: 3%;
  right: 3%;
}

.avatar.away-top:before {
  content: "";
  position: absolute;
  z-index: 10;
  display: block;
  border-radius: 9999px;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-wa,oklch(var(--wa)/var(--tw-bg-opacity, 1)));
  outline-style: solid;
  outline-width: 2px;
  outline-color: var(--fallback-b1,oklch(var(--b1)/1));
  width: 20%;
  height: 20%;
  top: 3%;
  right: 3%;
}

.avatar.online-bottom:before {
  content: "";
  position: absolute;
  z-index: 10;
  display: block;
  border-radius: 9999px;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity, 1)));
  outline-style: solid;
  outline-width: 2px;
  outline-color: var(--fallback-b1,oklch(var(--b1)/1));
  width: 20%;
  height: 20%;
  bottom: 3%;
  right: 3%;
}

.avatar.offline-bottom:before {
  content: "";
  position: absolute;
  z-index: 10;
  display: block;
  border-radius: 9999px;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity, 1)));
  outline-style: solid;
  outline-width: 2px;
  outline-color: var(--fallback-b1,oklch(var(--b1)/1));
  width: 20%;
  height: 20%;
  bottom: 3%;
  right: 3%;
}

.avatar.busy-bottom:before {
  content: "";
  position: absolute;
  z-index: 10;
  display: block;
  border-radius: 9999px;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity, 1)));
  outline-style: solid;
  outline-width: 2px;
  outline-color: var(--fallback-b1,oklch(var(--b1)/1));
  width: 20%;
  height: 20%;
  bottom: 3%;
  right: 3%;
}

.avatar.away-bottom:before {
  content: "";
  position: absolute;
  z-index: 10;
  display: block;
  border-radius: 9999px;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-wa,oklch(var(--wa)/var(--tw-bg-opacity, 1)));
  outline-style: solid;
  outline-width: 2px;
  outline-color: var(--fallback-b1,oklch(var(--b1)/1));
  width: 20%;
  height: 20%;
  bottom: 3%;
  right: 3%;
}

:where(.card-compact ) .card-header {
  padding: 1rem;
}

:where(.card-compact ) .card-footer {
  padding: 1rem;
}

:where(.card-compact ) .card-body {
  padding: 1rem;
}

:where(.card-compact ) .card-title {
  margin-bottom: 0.25rem;
}

:where(.card-compact:has(>.card-header)) > .card-body {
  padding-top: 0px;
}

:where(.card-compact:has(>.card-body)) > .card-footer {
  padding-top: 0px;
}

.horizontal-scrollbar {
  overflow-x: auto;
  overflow-y: hidden;
  scroll-behavior: smooth;
}

.horizontal-scrollbar::-webkit-scrollbar-thumb {
  background-color: var(--fallback-s,oklch(var(--s)/0.5));
}

.horizontal-scrollbar::-webkit-scrollbar-thumb:hover {
  background-color: var(--fallback-s,oklch(var(--s)/0.8));
}

.horizontal-scrollbar::-webkit-scrollbar-track {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity, 1)));
}

.horizontal-scrollbar::-webkit-scrollbar {
  height: 0.5rem;
}

.divider-horizontal {
  margin-left: 1rem;
  margin-right: 1rem;
  margin-top: 0px;
  margin-bottom: 0px;
  height: auto;
  width: 1rem;
}

.divider-vertical {
  margin-left: 0px;
  margin-right: 0px;
  margin-top: 1rem;
  margin-bottom: 1rem;
  height: 1rem;
  width: auto;
}

.divider-vertical::before {
  height: 1px;
  width: 100%;
  flex-grow: 1;
  border-inline-end-width: 0px;
  border-top-width: 1px;
  --tw-content: '';
  content: var(--tw-content);
}

.divider-vertical::after {
  display: flex;
  height: 1px;
  width: 100%;
  flex-grow: 1;
  border-inline-end-width: 0px;
  border-top-width: 1px;
  --tw-content: '';
  content: var(--tw-content);
}

.drawer-start,
.drawer-end,
.drawer-top,
.drawer-bottom {
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  transition-property: all;
  transition-duration: 300ms;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

.join.join-vertical > :where(*:not(:first-child)) {
  margin-left: 0px;
  margin-right: 0px;
  margin-top: -1px;
}

.menu-horizontal > li:not(.menu-title) > .collapse > ul {
  margin-inline-start: 0px;
  margin-top: 1rem;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  padding-inline-end: 0.5rem;
}

.menu-horizontal > li > .collapse > ul:before {
  content: none;
}

:where(.menu-horizontal > li:not(.menu-title) > .collapse > ul) {
  border-radius: var(--rounded-box, 0.5rem);
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
  --tw-shadow: 0 2px 4px 0 var(--fallback-bs,oklch(var(--bs)/0.26));
  --tw-shadow-colored: 0 2px 4px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.menu-vertical > li:not(.menu-title) > .collapse > ul {
  margin-inline-start: 1rem;
  margin-top: 0px;
  padding-top: 0px;
  padding-bottom: 0px;
  padding-inline-end: 0px;
}

.menu-xs :where(li:not(.menu-title) > *:not(ul, .collapse, .menu-title)) {
  border-radius: 0.25rem;
  padding-left: 0.5rem;
  padding-right: 0.5rem;
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
  font-size: 0.75rem;
  line-height: 1rem;
}

.menu-xs .menu-title {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}

.menu-sm :where(li:not(.menu-title) > *:not(ul, .collapse, .menu-title)) {
  border-radius: var(--rounded-btn, 0.375rem);
  padding-left: 0.75rem;
  padding-right: 0.75rem;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.menu-sm .menu-title {
  padding-left: 0.75rem;
  padding-right: 0.75rem;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}

.menu-lg :where(li:not(.menu-title) > *:not(ul, .collapse, .menu-title)) {
  border-radius: var(--rounded-btn, 0.375rem);
  padding-left: 1.25rem;
  padding-right: 1.25rem;
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
  font-size: 1.125rem;
  line-height: 1.5rem;
}

.menu-lg .menu-title {
  padding-left: 1.5rem;
  padding-right: 1.5rem;
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
}

/* .btn-blue {
        @apply px-4 py-2 font-bold text-white bg-blue-500 rounded hover:bg-blue-700;
    } */

/* container fixed alla dimensione del breakpoint */

/* container sempre al 100% - es. sezioni con colori di sfondo che prendono tutto lo schermo  */

.container-full {
  width: 100%;
}

/* container fluid fino a 1280px, poi fixed */

.container-fluid {
  margin-left: auto;
  margin-right: auto;
  width: 100%;
  max-width: 96%;
  padding-left: 1rem;
  padding-right: 1rem;
}

@media (min-width: 1280px) {
  .container-fluid {
    width: 100%;
  }

  @media (min-width: 640px) {
    .container-fluid {
      max-width: 640px;
    }
  }

  @media (min-width: 768px) {
    .container-fluid {
      max-width: 768px;
    }
  }

  @media (min-width: 1024px) {
    .container-fluid {
      max-width: 1024px;
    }
  }

  @media (min-width: 1280px) {
    .container-fluid {
      max-width: 1280px;
    }
  }

  @media (min-width: 1536px) {
    .container-fluid {
      max-width: 1536px;
    }
  }

  .container-fluid {
    margin-left: auto;
    margin-right: auto;
    padding-left: 1rem;
    padding-right: 1rem;
  }

  @media (min-width: 640px) {
    .container-fluid {
      padding-left: 1.25rem;
      padding-right: 1.25rem;
    }
  }

  @media (min-width: 1024px) {
    .container-fluid {
      padding-left: 1.75rem;
      padding-right: 1.75rem;
    }
  }

  @media (min-width: 1280px) {
    .container-fluid {
      padding-left: 2.5rem;
      padding-right: 2.5rem;
    }
  }
}

@media (min-width: 640px) {
  .container-fluid {
    padding-left: 1.25rem;
    padding-right: 1.25rem;
  }
}

@media (min-width: 1024px) {
  .container-fluid {
    padding-left: 1.75rem;
    padding-right: 1.75rem;
  }
}

@media (min-width: 1280px) {
  .container-fluid {
    padding-left: 2.5rem;
    padding-right: 2.5rem;
  }
}

/* --- 2 cols --- */

/* base + sm:3/4 md:7/8 lg:11/12 */

/* 3-1 | 3-1 | 7-1 | 11-1 */

/* base + sm:3/4 md:6/8 lg:10/12 */

/* 3-1 | 3-1 | 6-2 | 10-2 */

/* base + sm:3/4 md:5/8 lg:9/12 */

/* 3-1 | 3-1 | 5-3 | 9-3 */

/* base + sm:3/4 md:5/8 lg:8/12 */

/* 3-1 | 3-1 | 5-3 | 8-4 */

/* base + sm:3/4 md:5/8 lg:7/12 */

/* 3-1 | 3-1 | 5-3 | 7-5 */

/* 2 equals cols */

/* 2-2 | 2-2 | 4-4 | 6-6 */

/* --- 3 cols --- */

/* base + sm:2/4 md:6/8 lg:10/12 */

/* 2-1-1 | 2-1-1 | 6-1-1 | 10-1-1 */

/* base + sm:2/4 md:4/8 lg:8/12 */

/* 2-1-1 | 2-1-1 | 4-2-2 | 8-2-2 */

/* base + sm:2/4 md:4/8 lg:6/12 */

/* 2-1-1 | 2-1-1 | 4-2-2 | 6-3-3 */

/* progressive growth */

/* 1-1-2 | 1-1-2 | 1-2-5 | 2-4-6 */

/* --- 4 cols --- */

/* 4 equals cols */

/* 1-1-1-1 | 1-1-1-1 | 2-2-2-2 | 3-3-3-3 */

/* progressive growth */

/* 2-2 | 2-2 | 1-1-2-4 | 2-2-3-5 */

.cols4_2-1-2 {
  grid-column: span 2 / span 2;
}

@media (min-width: 768px) {
  .cols4_2-1-2 {
    grid-column: span 1 / span 1;
  }
}

@media (min-width: 1024px) {
  .cols4_2-1-2 {
    grid-column: span 2 / span 2;
  }
}

.cols4_2-2-3 {
  grid-column: span 2 / span 2;
}

@media (min-width: 1024px) {
  .cols4_2-2-3 {
    grid-column: span 3 / span 3;
  }
}

.cols4_2-4-5 {
  grid-column: span 2 / span 2;
}

@media (min-width: 768px) {
  .cols4_2-4-5 {
    grid-column: span 4 / span 4;
  }
}

@media (min-width: 1024px) {
  .cols4_2-4-5 {
    grid-column: span 5 / span 5;
  }
}

/**
 * This injects Tailwind's utility classes and any utility classes registered
 * by plugins.
 */

.not-sr-only {
  position: static;
  width: auto;
  height: auto;
  padding: 0;
  margin: 0;
  overflow: visible;
  clip: auto;
  white-space: normal;
}

.pointer-events-none {
  pointer-events: none;
}

.pointer-events-auto {
  pointer-events: auto;
}

.\!visible {
  visibility: visible !important;
}

.invisible {
  visibility: hidden;
}

.collapse {
  visibility: collapse;
}

.fixed {
  position: fixed;
}

.absolute {
  position: absolute;
}

.relative {
  position: relative;
}

.-inset-1 {
  inset: -0.25rem;
}

.inset-0 {
  inset: 0px;
}

.bottom-full {
  bottom: 100%;
}

.end-1 {
  inset-inline-end: 0.25rem;
}

.isolate {
  isolation: isolate;
}

.isolation-auto {
  isolation: auto;
}

.col-span-2 {
  grid-column: span 2 / span 2;
}

.col-span-3 {
  grid-column: span 3 / span 3;
}

.col-span-full {
  grid-column: 1 / -1;
}

.float-start {
  float: inline-start;
}

.float-end {
  float: inline-end;
}

.float-right {
  float: right;
}

.float-left {
  float: left;
}

.float-none {
  float: none;
}

.clear-start {
  clear: inline-start;
}

.clear-end {
  clear: inline-end;
}

.clear-left {
  clear: left;
}

.clear-right {
  clear: right;
}

.clear-both {
  clear: both;
}

.clear-none {
  clear: none;
}

.\!me-1 {
  margin-inline-end: 0.25rem !important;
}

.\!me-1\.5 {
  margin-inline-end: 0.375rem !important;
}

.\!ms-auto {
  margin-inline-start: auto !important;
}

.mb-0\.5 {
  margin-bottom: 0.125rem;
}

.mb-1 {
  margin-bottom: 0.25rem;
}

.mb-10 {
  margin-bottom: 2.5rem;
}

.mb-20 {
  margin-bottom: 5rem;
}

.mb-3 {
  margin-bottom: 0.75rem;
}

.ms-2 {
  margin-inline-start: 0.5rem;
}

.mt-10 {
  margin-top: 2.5rem;
}

.mt-2 {
  margin-top: 0.5rem;
}

.box-border {
  box-sizing: border-box;
}

.box-content {
  box-sizing: content-box;
}

.line-clamp-none {
  overflow: visible;
  display: block;
  -webkit-box-orient: horizontal;
  -webkit-line-clamp: none;
}

.block {
  display: block;
}

.inline-block {
  display: inline-block;
}

.inline {
  display: inline;
}

.\!flex {
  display: flex !important;
}

.flex {
  display: flex;
}

.inline-flex {
  display: inline-flex;
}

.inline-table {
  display: inline-table;
}

.flow-root {
  display: flow-root;
}

.grid {
  display: grid;
}

.inline-grid {
  display: inline-grid;
}

.contents {
  display: contents;
}

.list-item {
  display: list-item;
}

.hidden {
  display: none;
}

.\!h-2\.5 {
  height: 0.625rem !important;
}

.h-2 {
  height: 0.5rem;
}

.h-\[12vh\] {
  height: 12vh;
}

.h-\[20vh\] {
  height: 20vh;
}

.h-\[20vw\] {
  height: 20vw;
}

.h-full {
  height: 100%;
}

.\!w-2\.5 {
  width: 0.625rem !important;
}

.w-11\/12 {
  width: 91.666667%;
}

.w-full {
  width: 100%;
}

.min-w-28 {
  min-width: 7rem;
}

.min-w-48 {
  min-width: 12rem;
}

.max-w-full {
  max-width: 100%;
}

.flex-shrink {
  flex-shrink: 1;
}

.flex-shrink-0 {
  flex-shrink: 0;
}

.flex-grow {
  flex-grow: 1;
}

.grow {
  flex-grow: 1;
}

.caption-top {
  caption-side: top;
}

.caption-bottom {
  caption-side: bottom;
}

.border-collapse {
  border-collapse: collapse;
}

.border-separate {
  border-collapse: separate;
}

.\!transform {
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)) !important;
}

.cursor-pointer {
  cursor: pointer;
}

.select-none {
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
}

.select-text {
  -webkit-user-select: text;
     -moz-user-select: text;
          user-select: text;
}

.select-all {
  -webkit-user-select: all;
     -moz-user-select: all;
          user-select: all;
}

.select-auto {
  -webkit-user-select: auto;
     -moz-user-select: auto;
          user-select: auto;
}

.resize-none {
  resize: none;
}

.resize-y {
  resize: vertical;
}

.resize-x {
  resize: horizontal;
}

.resize {
  resize: both;
}

.list-inside {
  list-style-position: inside;
}

.list-outside {
  list-style-position: outside;
}

.appearance-none {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
}

.appearance-auto {
  -webkit-appearance: auto;
     -moz-appearance: auto;
          appearance: auto;
}

.break-before-auto {
  -moz-column-break-before: auto;
       break-before: auto;
}

.break-before-avoid {
  -moz-column-break-before: avoid;
       break-before: avoid;
}

.break-before-all {
  -moz-column-break-before: all;
       break-before: all;
}

.break-before-avoid-page {
  -moz-column-break-before: avoid;
       break-before: avoid-page;
}

.break-before-page {
  -moz-column-break-before: page;
       break-before: page;
}

.break-before-left {
  -moz-column-break-before: left;
       break-before: left;
}

.break-before-right {
  -moz-column-break-before: right;
       break-before: right;
}

.break-before-column {
  -moz-column-break-before: column;
       break-before: column;
}

.break-inside-auto {
  -moz-column-break-inside: auto;
       break-inside: auto;
}

.break-inside-avoid {
  -moz-column-break-inside: avoid;
       break-inside: avoid;
}

.break-inside-avoid-page {
  break-inside: avoid-page;
}

.break-inside-avoid-column {
  -moz-column-break-inside: avoid;
       break-inside: avoid-column;
}

.break-after-auto {
  -moz-column-break-after: auto;
       break-after: auto;
}

.break-after-avoid {
  -moz-column-break-after: avoid;
       break-after: avoid;
}

.break-after-all {
  -moz-column-break-after: all;
       break-after: all;
}

.break-after-avoid-page {
  -moz-column-break-after: avoid;
       break-after: avoid-page;
}

.break-after-page {
  -moz-column-break-after: page;
       break-after: page;
}

.break-after-left {
  -moz-column-break-after: left;
       break-after: left;
}

.break-after-right {
  -moz-column-break-after: right;
       break-after: right;
}

.break-after-column {
  -moz-column-break-after: column;
       break-after: column;
}

.grid-flow-row {
  grid-auto-flow: row;
}

.grid-flow-col {
  grid-auto-flow: column;
}

.grid-flow-dense {
  grid-auto-flow: dense;
}

.grid-flow-row-dense {
  grid-auto-flow: row dense;
}

.grid-flow-col-dense {
  grid-auto-flow: column dense;
}

.grid-cols-4 {
  grid-template-columns: repeat(4, minmax(0, 1fr));
}

.flex-row {
  flex-direction: row;
}

.flex-row-reverse {
  flex-direction: row-reverse;
}

.flex-col {
  flex-direction: column;
}

.flex-col-reverse {
  flex-direction: column-reverse;
}

.flex-wrap {
  flex-wrap: wrap;
}

.flex-wrap-reverse {
  flex-wrap: wrap-reverse;
}

.flex-nowrap {
  flex-wrap: nowrap;
}

.place-content-center {
  place-content: center;
}

.place-content-start {
  place-content: start;
}

.place-content-end {
  place-content: end;
}

.place-content-between {
  place-content: space-between;
}

.place-content-around {
  place-content: space-around;
}

.place-content-evenly {
  place-content: space-evenly;
}

.place-content-baseline {
  place-content: baseline;
}

.place-content-stretch {
  place-content: stretch;
}

.place-items-start {
  place-items: start;
}

.place-items-end {
  place-items: end;
}

.place-items-center {
  place-items: center;
}

.place-items-baseline {
  place-items: baseline;
}

.place-items-stretch {
  place-items: stretch;
}

.content-normal {
  align-content: normal;
}

.content-center {
  align-content: center;
}

.content-start {
  align-content: flex-start;
}

.content-end {
  align-content: flex-end;
}

.content-between {
  align-content: space-between;
}

.content-around {
  align-content: space-around;
}

.content-evenly {
  align-content: space-evenly;
}

.content-baseline {
  align-content: baseline;
}

.content-stretch {
  align-content: stretch;
}

.items-start {
  align-items: flex-start;
}

.items-end {
  align-items: flex-end;
}

.items-center {
  align-items: center;
}

.items-baseline {
  align-items: baseline;
}

.items-stretch {
  align-items: stretch;
}

.justify-normal {
  justify-content: normal;
}

.justify-start {
  justify-content: flex-start;
}

.justify-end {
  justify-content: flex-end;
}

.justify-center {
  justify-content: center;
}

.\!justify-between {
  justify-content: space-between !important;
}

.justify-between {
  justify-content: space-between;
}

.justify-around {
  justify-content: space-around;
}

.justify-evenly {
  justify-content: space-evenly;
}

.justify-stretch {
  justify-content: stretch;
}

.justify-items-start {
  justify-items: start;
}

.justify-items-end {
  justify-items: end;
}

.justify-items-center {
  justify-items: center;
}

.justify-items-stretch {
  justify-items: stretch;
}

.gap-2 {
  gap: 0.5rem;
}

.gap-20 {
  gap: 5rem;
}

.gap-3 {
  gap: 0.75rem;
}

.gap-5 {
  gap: 1.25rem;
}

.gap-x-1 {
  -moz-column-gap: 0.25rem;
       column-gap: 0.25rem;
}

.gap-x-2 {
  -moz-column-gap: 0.5rem;
       column-gap: 0.5rem;
}

.gap-x-3 {
  -moz-column-gap: 0.75rem;
       column-gap: 0.75rem;
}

.divide-x > :not([hidden]) ~ :not([hidden]) {
  --tw-divide-x-reverse: 0;
  border-right-width: calc(1px * var(--tw-divide-x-reverse));
  border-left-width: calc(1px * calc(1 - var(--tw-divide-x-reverse)));
}

.divide-y > :not([hidden]) ~ :not([hidden]) {
  --tw-divide-y-reverse: 0;
  border-top-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
  border-bottom-width: calc(1px * var(--tw-divide-y-reverse));
}

.divide-y-reverse > :not([hidden]) ~ :not([hidden]) {
  --tw-divide-y-reverse: 1;
}

.divide-x-reverse > :not([hidden]) ~ :not([hidden]) {
  --tw-divide-x-reverse: 1;
}

.divide-solid > :not([hidden]) ~ :not([hidden]) {
  border-style: solid;
}

.divide-dashed > :not([hidden]) ~ :not([hidden]) {
  border-style: dashed;
}

.divide-dotted > :not([hidden]) ~ :not([hidden]) {
  border-style: dotted;
}

.divide-double > :not([hidden]) ~ :not([hidden]) {
  border-style: double;
}

.divide-none > :not([hidden]) ~ :not([hidden]) {
  border-style: none;
}

.place-self-auto {
  place-self: auto;
}

.place-self-start {
  place-self: start;
}

.place-self-end {
  place-self: end;
}

.place-self-center {
  place-self: center;
}

.place-self-stretch {
  place-self: stretch;
}

.self-start {
  align-self: flex-start;
}

.justify-self-auto {
  justify-self: auto;
}

.justify-self-start {
  justify-self: start;
}

.justify-self-end {
  justify-self: end;
}

.justify-self-center {
  justify-self: center;
}

.justify-self-stretch {
  justify-self: stretch;
}

.overflow-auto {
  overflow: auto;
}

.overflow-hidden {
  overflow: hidden;
}

.overflow-clip {
  overflow: clip;
}

.overflow-visible {
  overflow: visible;
}

.overflow-scroll {
  overflow: scroll;
}

.overflow-x-auto {
  overflow-x: auto;
}

.overflow-y-auto {
  overflow-y: auto;
}

.overflow-x-hidden {
  overflow-x: hidden;
}

.overflow-y-hidden {
  overflow-y: hidden;
}

.overflow-x-clip {
  overflow-x: clip;
}

.overflow-y-clip {
  overflow-y: clip;
}

.overflow-x-visible {
  overflow-x: visible;
}

.overflow-y-visible {
  overflow-y: visible;
}

.overflow-x-scroll {
  overflow-x: scroll;
}

.overflow-y-scroll {
  overflow-y: scroll;
}

.overscroll-auto {
  overscroll-behavior: auto;
}

.overscroll-contain {
  overscroll-behavior: contain;
}

.overscroll-none {
  overscroll-behavior: none;
}

.overscroll-y-auto {
  overscroll-behavior-y: auto;
}

.overscroll-y-contain {
  overscroll-behavior-y: contain;
}

.overscroll-y-none {
  overscroll-behavior-y: none;
}

.overscroll-x-auto {
  overscroll-behavior-x: auto;
}

.overscroll-x-contain {
  overscroll-behavior-x: contain;
}

.overscroll-x-none {
  overscroll-behavior-x: none;
}

.scroll-auto {
  scroll-behavior: auto;
}

.scroll-smooth {
  scroll-behavior: smooth;
}

.overflow-ellipsis {
  text-overflow: ellipsis;
}

.hyphens-none {
  -webkit-hyphens: none;
          hyphens: none;
}

.hyphens-manual {
  -webkit-hyphens: manual;
          hyphens: manual;
}

.hyphens-auto {
  -webkit-hyphens: auto;
          hyphens: auto;
}

.break-normal {
  overflow-wrap: normal;
  word-break: normal;
}

.break-words {
  overflow-wrap: break-word;
}

.break-all {
  word-break: break-all;
}

.break-keep {
  word-break: keep-all;
}

.rounded {
  border-radius: 0.25rem;
}

.rounded-3xl {
  border-radius: 1.5rem;
}

.rounded-box {
  border-radius: var(--rounded-box, 0.5rem);
}

.rounded-btn {
  border-radius: var(--rounded-btn, 0.375rem);
}

.rounded-full {
  border-radius: 9999px;
}

.rounded-lg {
  border-radius: 0.5rem;
}

.rounded-md {
  border-radius: 0.375rem;
}

.rounded-xl {
  border-radius: 0.75rem;
}

.rounded-b {
  border-bottom-right-radius: 0.25rem;
  border-bottom-left-radius: 0.25rem;
}

.rounded-e {
  border-start-end-radius: 0.25rem;
  border-end-end-radius: 0.25rem;
}

.rounded-l {
  border-top-left-radius: 0.25rem;
  border-bottom-left-radius: 0.25rem;
}

.rounded-r {
  border-top-right-radius: 0.25rem;
  border-bottom-right-radius: 0.25rem;
}

.rounded-s {
  border-start-start-radius: 0.25rem;
  border-end-start-radius: 0.25rem;
}

.rounded-t {
  border-top-left-radius: 0.25rem;
  border-top-right-radius: 0.25rem;
}

.rounded-t-lg {
  border-top-left-radius: 0.5rem;
  border-top-right-radius: 0.5rem;
}

.rounded-bl {
  border-bottom-left-radius: 0.25rem;
}

.rounded-br {
  border-bottom-right-radius: 0.25rem;
}

.rounded-ee {
  border-end-end-radius: 0.25rem;
}

.rounded-es {
  border-end-start-radius: 0.25rem;
}

.rounded-se {
  border-start-end-radius: 0.25rem;
}

.rounded-ss {
  border-start-start-radius: 0.25rem;
}

.rounded-tl {
  border-top-left-radius: 0.25rem;
}

.rounded-tr {
  border-top-right-radius: 0.25rem;
}

.border {
  border-width: 1px;
}

.border-x {
  border-left-width: 1px;
  border-right-width: 1px;
}

.border-y {
  border-top-width: 1px;
  border-bottom-width: 1px;
}

.border-b {
  border-bottom-width: 1px;
}

.border-e {
  border-inline-end-width: 1px;
}

.border-l {
  border-left-width: 1px;
}

.border-r {
  border-right-width: 1px;
}

.border-s {
  border-inline-start-width: 1px;
}

.border-t {
  border-top-width: 1px;
}

.border-solid {
  border-style: solid;
}

.border-dashed {
  border-style: dashed;
}

.border-dotted {
  border-style: dotted;
}

.border-double {
  border-style: double;
}

.border-hidden {
  border-style: hidden;
}

.\!border-none {
  border-style: none !important;
}

.border-none {
  border-style: none;
}

.\!border-base-content\/40 {
  border-color: var(--fallback-bc,oklch(var(--bc)/0.4)) !important;
}

.border-base-content\/20 {
  border-color: var(--fallback-bc,oklch(var(--bc)/0.2));
}

.border-base-content\/40 {
  border-color: var(--fallback-bc,oklch(var(--bc)/0.4));
}

.\!bg-base-100 {
  --tw-bg-opacity: 1 !important;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1))) !important;
}

.bg-\[rgb\(255\2c 0\2c 0\)\] {
  --tw-bg-opacity: 1;
  background-color: rgb(255 0 0 / var(--tw-bg-opacity, 1));
}

.bg-amber-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(254 243 199 / var(--tw-bg-opacity, 1));
}

.bg-amber-200 {
  --tw-bg-opacity: 1;
  background-color: rgb(253 230 138 / var(--tw-bg-opacity, 1));
}

.bg-base-100 {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
}

.bg-base-shadow\/70 {
  background-color: var(--fallback-bs,oklch(var(--bs)/0.7));
}

.bg-blue-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(219 234 254 / var(--tw-bg-opacity, 1));
}

.bg-cyan-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(207 250 254 / var(--tw-bg-opacity, 1));
}

.bg-lime-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(236 252 203 / var(--tw-bg-opacity, 1));
}

.bg-lime-600 {
  --tw-bg-opacity: 1;
  background-color: rgb(101 163 13 / var(--tw-bg-opacity, 1));
}

.bg-orange-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(255 237 213 / var(--tw-bg-opacity, 1));
}

.bg-pink-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(252 231 243 / var(--tw-bg-opacity, 1));
}

.bg-purple-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(243 232 255 / var(--tw-bg-opacity, 1));
}

.bg-red-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(254 226 226 / var(--tw-bg-opacity, 1));
}

.bg-sky-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(224 242 254 / var(--tw-bg-opacity, 1));
}

.bg-slate-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(241 245 249 / var(--tw-bg-opacity, 1));
}

.bg-slate-200 {
  --tw-bg-opacity: 1;
  background-color: rgb(226 232 240 / var(--tw-bg-opacity, 1));
}

.bg-teal-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(204 251 241 / var(--tw-bg-opacity, 1));
}

.bg-violet-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(237 233 254 / var(--tw-bg-opacity, 1));
}

.bg-white {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity, 1));
}

.bg-yellow-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(254 249 195 / var(--tw-bg-opacity, 1));
}

.decoration-slice {
  -webkit-box-decoration-break: slice;
          box-decoration-break: slice;
}

.decoration-clone {
  -webkit-box-decoration-break: clone;
          box-decoration-break: clone;
}

.box-decoration-slice {
  -webkit-box-decoration-break: slice;
          box-decoration-break: slice;
}

.box-decoration-clone {
  -webkit-box-decoration-break: clone;
          box-decoration-break: clone;
}

.bg-fixed {
  background-attachment: fixed;
}

.bg-local {
  background-attachment: local;
}

.bg-scroll {
  background-attachment: scroll;
}

.bg-clip-border {
  background-clip: border-box;
}

.bg-clip-padding {
  background-clip: padding-box;
}

.bg-clip-content {
  background-clip: content-box;
}

.bg-clip-text {
  -webkit-background-clip: text;
          background-clip: text;
}

.bg-repeat {
  background-repeat: repeat;
}

.bg-no-repeat {
  background-repeat: no-repeat;
}

.bg-repeat-x {
  background-repeat: repeat-x;
}

.bg-repeat-y {
  background-repeat: repeat-y;
}

.bg-repeat-round {
  background-repeat: round;
}

.bg-repeat-space {
  background-repeat: space;
}

.bg-origin-border {
  background-origin: border-box;
}

.bg-origin-padding {
  background-origin: padding-box;
}

.bg-origin-content {
  background-origin: content-box;
}

.fill-black {
  fill: #000;
}

.object-contain {
  -o-object-fit: contain;
     object-fit: contain;
}

.object-cover {
  -o-object-fit: cover;
     object-fit: cover;
}

.object-fill {
  -o-object-fit: fill;
     object-fit: fill;
}

.object-none {
  -o-object-fit: none;
     object-fit: none;
}

.object-scale-down {
  -o-object-fit: scale-down;
     object-fit: scale-down;
}

.p-0\.5 {
  padding: 0.125rem;
}

.p-2 {
  padding: 0.5rem;
}

.p-4 {
  padding: 1rem;
}

.p-5 {
  padding: 1.25rem;
}

.\!px-2 {
  padding-left: 0.5rem !important;
  padding-right: 0.5rem !important;
}

.\!px-2\.5 {
  padding-left: 0.625rem !important;
  padding-right: 0.625rem !important;
}

.px-1 {
  padding-left: 0.25rem;
  padding-right: 0.25rem;
}

.px-1\.5 {
  padding-left: 0.375rem;
  padding-right: 0.375rem;
}

.px-3 {
  padding-left: 0.75rem;
  padding-right: 0.75rem;
}

.px-4 {
  padding-left: 1rem;
  padding-right: 1rem;
}

.px-5 {
  padding-left: 1.25rem;
  padding-right: 1.25rem;
}

.px-6 {
  padding-left: 1.5rem;
  padding-right: 1.5rem;
}

.py-2 {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}

.py-3 {
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
}

.py-4 {
  padding-top: 1rem;
  padding-bottom: 1rem;
}

.align-baseline {
  vertical-align: baseline;
}

.align-top {
  vertical-align: top;
}

.align-middle {
  vertical-align: middle;
}

.align-bottom {
  vertical-align: bottom;
}

.align-text-top {
  vertical-align: text-top;
}

.align-text-bottom {
  vertical-align: text-bottom;
}

.align-sub {
  vertical-align: sub;
}

.align-super {
  vertical-align: super;
}

.font-custom {
  font-family: Urbanist, sans-serif;
}

.\!text-sm {
  font-size: 0.875rem !important;
  line-height: 1.25rem !important;
}

.text-4xl {
  font-size: 2.25rem;
  line-height: 2.5rem;
}

.text-5xl {
  font-size: 3rem;
  line-height: 1;
}

.text-lg {
  font-size: 1.125rem;
  line-height: 1.5rem;
}

.text-xs {
  font-size: 0.75rem;
  line-height: 1rem;
}

.\!font-medium {
  font-weight: 500 !important;
}

.\!font-semibold {
  font-weight: 600 !important;
}

.font-bold {
  font-weight: 700;
}

.font-medium {
  font-weight: 500;
}

.font-semibold {
  font-weight: 600;
}

.uppercase {
  text-transform: uppercase;
}

.lowercase {
  text-transform: lowercase;
}

.capitalize {
  text-transform: capitalize;
}

.normal-case {
  text-transform: none;
}

.italic {
  font-style: italic;
}

.not-italic {
  font-style: normal;
}

.normal-nums {
  font-variant-numeric: normal;
}

.ordinal {
  --tw-ordinal: ordinal;
  font-variant-numeric: var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction);
}

.lining-nums {
  --tw-numeric-figure: lining-nums;
  font-variant-numeric: var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction);
}

.oldstyle-nums {
  --tw-numeric-figure: oldstyle-nums;
  font-variant-numeric: var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction);
}

.proportional-nums {
  --tw-numeric-spacing: proportional-nums;
  font-variant-numeric: var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction);
}

.diagonal-fractions {
  --tw-numeric-fraction: diagonal-fractions;
  font-variant-numeric: var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction);
}

.text-amber-700 {
  --tw-text-opacity: 1;
  color: rgb(180 83 9 / var(--tw-text-opacity, 1));
}

.text-lime-500 {
  --tw-text-opacity: 1;
  color: rgb(132 204 22 / var(--tw-text-opacity, 1));
}

.text-slate-400 {
  --tw-text-opacity: 1;
  color: rgb(148 163 184 / var(--tw-text-opacity, 1));
}

.text-white {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity, 1));
}

.overline {
  text-decoration-line: overline;
}

.line-through {
  text-decoration-line: line-through;
}

.no-underline {
  text-decoration-line: none;
}

.decoration-solid {
  text-decoration-style: solid;
}

.decoration-double {
  text-decoration-style: double;
}

.decoration-dotted {
  text-decoration-style: dotted;
}

.decoration-dashed {
  text-decoration-style: dashed;
}

.decoration-wavy {
  text-decoration-style: wavy;
}

.antialiased {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.opacity-0 {
  opacity: 0;
}

.bg-blend-normal {
  background-blend-mode: normal;
}

.bg-blend-multiply {
  background-blend-mode: multiply;
}

.bg-blend-screen {
  background-blend-mode: screen;
}

.bg-blend-overlay {
  background-blend-mode: overlay;
}

.bg-blend-darken {
  background-blend-mode: darken;
}

.bg-blend-lighten {
  background-blend-mode: lighten;
}

.bg-blend-color-dodge {
  background-blend-mode: color-dodge;
}

.bg-blend-color-burn {
  background-blend-mode: color-burn;
}

.bg-blend-hard-light {
  background-blend-mode: hard-light;
}

.bg-blend-soft-light {
  background-blend-mode: soft-light;
}

.bg-blend-difference {
  background-blend-mode: difference;
}

.bg-blend-exclusion {
  background-blend-mode: exclusion;
}

.bg-blend-hue {
  background-blend-mode: hue;
}

.bg-blend-saturation {
  background-blend-mode: saturation;
}

.bg-blend-color {
  background-blend-mode: color;
}

.bg-blend-luminosity {
  background-blend-mode: luminosity;
}

.mix-blend-normal {
  mix-blend-mode: normal;
}

.mix-blend-multiply {
  mix-blend-mode: multiply;
}

.mix-blend-screen {
  mix-blend-mode: screen;
}

.mix-blend-overlay {
  mix-blend-mode: overlay;
}

.mix-blend-darken {
  mix-blend-mode: darken;
}

.mix-blend-lighten {
  mix-blend-mode: lighten;
}

.mix-blend-color-dodge {
  mix-blend-mode: color-dodge;
}

.mix-blend-color-burn {
  mix-blend-mode: color-burn;
}

.mix-blend-hard-light {
  mix-blend-mode: hard-light;
}

.mix-blend-soft-light {
  mix-blend-mode: soft-light;
}

.mix-blend-difference {
  mix-blend-mode: difference;
}

.mix-blend-exclusion {
  mix-blend-mode: exclusion;
}

.mix-blend-hue {
  mix-blend-mode: hue;
}

.mix-blend-saturation {
  mix-blend-mode: saturation;
}

.mix-blend-color {
  mix-blend-mode: color;
}

.mix-blend-luminosity {
  mix-blend-mode: luminosity;
}

.mix-blend-plus-darker {
  mix-blend-mode: plus-darker;
}

.mix-blend-plus-lighter {
  mix-blend-mode: plus-lighter;
}

.\!shadow {
  --tw-shadow: 0 2px 4px 0 var(--fallback-bs,oklch(var(--bs)/0.26)) !important;
  --tw-shadow-colored: 0 2px 4px 0 var(--tw-shadow-color) !important;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow) !important;
}

.outline-none {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.outline {
  outline-style: solid;
}

.outline-dashed {
  outline-style: dashed;
}

.outline-dotted {
  outline-style: dotted;
}

.outline-double {
  outline-style: double;
}

.ring {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.ring-inset {
  --tw-ring-inset: inset;
}

.blur {
  --tw-blur: blur(8px);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.drop-shadow {
  --tw-drop-shadow: drop-shadow(0 1px 2px rgb(0 0 0 / 0.1)) drop-shadow(0 1px 1px rgb(0 0 0 / 0.06));
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.grayscale {
  --tw-grayscale: grayscale(100%);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.invert {
  --tw-invert: invert(100%);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.\!filter {
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow) !important;
}

.filter {
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.filter-none {
  filter: none;
}

.backdrop-blur {
  --tw-backdrop-blur: blur(8px);
  -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
  backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
}

.backdrop-grayscale {
  --tw-backdrop-grayscale: grayscale(100%);
  -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
  backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
}

.backdrop-invert {
  --tw-backdrop-invert: invert(100%);
  -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
  backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
}

.backdrop-sepia {
  --tw-backdrop-sepia: sepia(100%);
  -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
  backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
}

.backdrop-filter {
  -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
  backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
}

.backdrop-filter-none {
  -webkit-backdrop-filter: none;
  backdrop-filter: none;
}

.duration-500 {
  transition-duration: 500ms;
}

.ease-in {
  transition-timing-function: cubic-bezier(0.4, 0, 1, 1);
}

.ease-in-out {
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

.ease-out {
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
}

.contain-none {
  contain: none;
}

.contain-content {
  contain: content;
}

.contain-strict {
  contain: strict;
}

.contain-size {
  --tw-contain-size: size;
  contain: var(--tw-contain-size) var(--tw-contain-layout) var(--tw-contain-paint) var(--tw-contain-style);
}

.contain-inline-size {
  --tw-contain-size: inline-size;
  contain: var(--tw-contain-size) var(--tw-contain-layout) var(--tw-contain-paint) var(--tw-contain-style);
}

.contain-layout {
  --tw-contain-layout: layout;
  contain: var(--tw-contain-size) var(--tw-contain-layout) var(--tw-contain-paint) var(--tw-contain-style);
}

.contain-paint {
  --tw-contain-paint: paint;
  contain: var(--tw-contain-size) var(--tw-contain-layout) var(--tw-contain-paint) var(--tw-contain-style);
}

.contain-style {
  --tw-contain-style: style;
  contain: var(--tw-contain-size) var(--tw-contain-layout) var(--tw-contain-paint) var(--tw-contain-style);
}

.content-\[\'this-is-also-valid\]-weirdly-enough\'\] {
  --tw-content: 'this-is-also-valid]-weirdly-enough';
  content: var(--tw-content);
}

.forced-color-adjust-auto {
  forced-color-adjust: auto;
}

.forced-color-adjust-none {
  forced-color-adjust: none;
}

/* .filter-grayscale {
        filter: grayscale(100%);
    } */

.perfect-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

/**
 * Elementi base (colori del brand, font del brand, spacing personale...)
 */

/**
 * Componenti personali (btn-primary, badge, card...)
 */

/**
 * Specifiche molto nel dettaglio (opacity, blur...)
 */

@media (hover:hover) {
  .table .hover\:hover:hovertr:hover,
  .table .hover\:hover:hovertr:nth-child(even):hover {
    background-color: var(--fallback-bc,oklch(var(--bc)/0.05));
  }

  .table-striped .hover\:hover:hovertr,
  .table-striped .hover\:hover:hovertr:nth-child(even) {
    background-color: var(--fallback-bc,oklch(var(--bc)/0.05));
  }
}

.hover\:focus:hover:where(.menu li:not(.menu-title, .disabled, [disabled], :disabled) > *:not(ul, .collapse, .menu-title)):not(.active, .btn) {
  cursor: pointer;
  background-color: var(--fallback-bc,oklch(var(--bc)/0.1));
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
  outline: 2px solid transparent;
  outline-offset: 2px;
}

@media (hover:hover) {
  .table .focus\:hover:focustr:hover,
  .table .focus\:hover:focustr:nth-child(even):hover {
    background-color: var(--fallback-bc,oklch(var(--bc)/0.05));
  }

  .table-striped .focus\:hover:focustr,
  .table-striped .focus\:hover:focustr:nth-child(even) {
    background-color: var(--fallback-bc,oklch(var(--bc)/0.05));
  }

  .table .disabled\:hover:disabledtr:hover,
  .table .disabled\:hover:disabledtr:nth-child(even):hover {
    background-color: var(--fallback-bc,oklch(var(--bc)/0.05));
  }

  .table-striped .disabled\:hover:disabledtr,
  .table-striped .disabled\:hover:disabledtr:nth-child(even) {
    background-color: var(--fallback-bc,oklch(var(--bc)/0.05));
  }
}

.selected .combo-box-selected\:carousel-box.carousel-box {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity, 1)));
}

.selected .combo-box-selected\:carousel-box .carousel-box {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity, 1)));
}

.selected .combo-box-selected\:carousel-dot.carousel-dot {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity, 1)));
}

.selected .combo-box-selected\:carousel-dot .carousel-dot {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity, 1)));
}

@media (hover:hover) {
  
.menu li:not(.disabled, :disabled, [disabled]) > .combo-box-selected\:active:not(ul, .menu-title, .collapse, .btn) {
    background-color: var(--fallback-p,oklch(var(--p)/0.1));
    --tw-text-opacity: 1;
    color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
  }
}

.selected .combo-box-selected\:active.advance-select-option {
  background-color: var(--fallback-p,oklch(var(--p)/0.1));
  --tw-text-opacity: 1;
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
}

.selected .combo-box-selected\:active.dropdown-item {
  background-color: var(--fallback-p,oklch(var(--p)/0.1));
  --tw-text-opacity: 1;
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
}


.menu li:not(.disabled, :disabled, [disabled]) > .selected .combo-box-selected\:menu:not(ul, .menu-title, .collapse, .btn) {
  background-color: var(--fallback-p,oklch(var(--p)/0.1));
  --tw-text-opacity: 1;
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
}

.table .selected .combo-box-selected\:activetr,
  .table .selected .combo-box-selected\:activetr:nth-child(even) {
  background-color: var(--fallback-bc,oklch(var(--bc)/0.1));
}

.table-striped .selected .combo-box-selected\:activetr,
    .table-striped .selected .combo-box-selected\:activetr:nth-child(even) {
  background-color: var(--fallback-bc,oklch(var(--bc)/0.1));
}

.selected.combo-box-selected\:carousel-box.carousel-box {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity, 1)));
}

.selected.combo-box-selected\:carousel-box .carousel-box {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity, 1)));
}

.selected.combo-box-selected\:carousel-dot.carousel-dot {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity, 1)));
}

.selected.combo-box-selected\:carousel-dot .carousel-dot {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity, 1)));
}

@media (hover:hover) {
  
.menu li:not(.disabled, :disabled, [disabled]) > .combo-box-selected\:active:not(ul, .menu-title, .collapse, .btn) {
    background-color: var(--fallback-p,oklch(var(--p)/0.1));
    --tw-text-opacity: 1;
    color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
  }
}

.selected.combo-box-selected\:active.advance-select-option {
  background-color: var(--fallback-p,oklch(var(--p)/0.1));
  --tw-text-opacity: 1;
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
}

.selected.combo-box-selected\:active.dropdown-item {
  background-color: var(--fallback-p,oklch(var(--p)/0.1));
  --tw-text-opacity: 1;
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
}


.menu li:not(.disabled, :disabled, [disabled]) > .selected.combo-box-selected\:menu:not(ul, .menu-title, .collapse, .btn) {
  background-color: var(--fallback-p,oklch(var(--p)/0.1));
  --tw-text-opacity: 1;
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
}

.table tr.selected.combo-box-selected\:active,
  .table tr.selected.combo-box-selected\:active:nth-child(even) {
  background-color: var(--fallback-bc,oklch(var(--bc)/0.1));
}

.table-striped tr.selected.combo-box-selected\:active,
    .table-striped tr.selected.combo-box-selected\:active:nth-child(even) {
  background-color: var(--fallback-bc,oklch(var(--bc)/0.1));
}

.complete .file-upload-complete\:progress-success {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity, 1)));
  --tw-text-opacity: 1;
  color: var(--fallback-suc,oklch(var(--suc)/var(--tw-text-opacity, 1)));
  --progress-color: var(--fallback-su,oklch(var(--su)/1));
}

.complete.file-upload-complete\:progress-success {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity, 1)));
  --tw-text-opacity: 1;
  color: var(--fallback-suc,oklch(var(--suc)/var(--tw-text-opacity, 1)));
  --progress-color: var(--fallback-su,oklch(var(--su)/1));
}

@media (prefers-color-scheme: dark) {
  @media (min-width: 1024px) {
    @media (hover:hover) {
      .table tr.dark\:lg\:hover:hover,
  .table tr.dark\:lg\:hover:nth-child(even):hover {
        background-color: var(--fallback-bc,oklch(var(--bc)/0.05));
      }

      .table-striped tr.dark\:lg\:hover,
  .table-striped tr.dark\:lg\:hover:nth-child(even) {
        background-color: var(--fallback-bc,oklch(var(--bc)/0.05));
      }
    }
  }
}

.hover\:font-bold:hover {
  font-weight: 700;
}

.before\:hover\:text-center:hover::before {
  content: var(--tw-content);
  text-align: center;
}

.hover\:before\:text-center:hover::before {
  content: var(--tw-content);
  text-align: center;
}

.focus\:border-primary:focus {
  --tw-border-opacity: 1;
  border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity, 1)));
}

.focus\:ring-1:focus {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.focus\:ring-primary:focus {
  --tw-ring-opacity: 1;
  --tw-ring-color: var(--fallback-p,oklch(var(--p)/var(--tw-ring-opacity, 1)));
}

.focus\:hover\:text-center:hover:focus {
  text-align: center;
}

.hover\:focus\:text-center:focus:hover {
  text-align: center;
}

.selected .combo-box-selected\:block {
  display: block;
}

.selected.combo-box-selected\:block {
  display: block;
}

@media (min-width: 640px) {
  .sm\:w-4\/12 {
    width: 33.333333%;
  }

  .sm\:w-8\/12 {
    width: 66.666667%;
  }

  .sm\:flex-row {
    flex-direction: row;
  }

  .sm\:gap-3 {
    gap: 0.75rem;
  }
}

@media (min-width: 768px) {
  .md\:col-span-1 {
    grid-column: span 1 / span 1;
  }

  .md\:col-span-2 {
    grid-column: span 2 / span 2;
  }

  .md\:col-span-3 {
    grid-column: span 3 / span 3;
  }

  .md\:col-span-4 {
    grid-column: span 4 / span 4;
  }

  .md\:col-span-5 {
    grid-column: span 5 / span 5;
  }

  .md\:col-span-6 {
    grid-column: span 6 / span 6;
  }

  .md\:col-span-7 {
    grid-column: span 7 / span 7;
  }

  .md\:grid-cols-8 {
    grid-template-columns: repeat(8, minmax(0, 1fr));
  }

  .md\:gap-4 {
    gap: 1rem;
  }
}

@media (min-width: 1024px) {
  .lg\:col-span-10 {
    grid-column: span 10 / span 10;
  }

  .lg\:col-span-11 {
    grid-column: span 11 / span 11;
  }

  .lg\:col-span-2 {
    grid-column: span 2 / span 2;
  }

  .lg\:col-span-3 {
    grid-column: span 3 / span 3;
  }

  .lg\:col-span-4 {
    grid-column: span 4 / span 4;
  }

  .lg\:col-span-5 {
    grid-column: span 5 / span 5;
  }

  .lg\:col-span-6 {
    grid-column: span 6 / span 6;
  }

  .lg\:col-span-7 {
    grid-column: span 7 / span 7;
  }

  .lg\:col-span-8 {
    grid-column: span 8 / span 8;
  }

  .lg\:col-span-9 {
    grid-column: span 9 / span 9;
  }

  .lg\:w-6\/12 {
    width: 50%;
  }

  .lg\:grid-cols-12 {
    grid-template-columns: repeat(12, minmax(0, 1fr));
  }

  .lg\:gap-5 {
    gap: 1.25rem;
  }
}

@media (min-width: 1280px) {
  .xl\:w-6\/12 {
    width: 50%;
  }
}

.rtl\:\!mr-0:where([dir="rtl"], [dir="rtl"] *) {
  margin-right: 0px !important;
}

@media (prefers-color-scheme: dark) {
  @media (min-width: 1024px) {
    .dark\:lg\:hover\:\[paint-order\:markers\]:hover {
      paint-order: markers;
    }
  }
}